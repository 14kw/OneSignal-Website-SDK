!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}var installedModules={};__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)}([function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _vars = __webpack_require__(1);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (_environment2.default.isBrowser()) {\n  // We're running in the host page, iFrame of the host page, or popup window\n  // Load OneSignal's web SDK\n  if (typeof OneSignal !== \"undefined\") var predefinedOneSignalPushes = OneSignal;\n\n  __webpack_require__(5);\n\n  if (predefinedOneSignalPushes) OneSignal._process_pushes(predefinedOneSignalPushes);\n} else if (_environment2.default.isServiceWorker()) {\n  // We're running as the service worker\n  __webpack_require__(27);\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZW50cnkuanM/OGQyNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBSUEsSUFBSSxzQkFBWSxTQUFTLEVBQUUsRUFBRTs7O0FBRzNCLE1BQUksT0FBTyxTQUFTLEtBQUssV0FBVyxFQUNsQyxJQUFJLHlCQUF5QixHQUFHLFNBQVMsQ0FBQzs7QUFFNUMscUJBQU8sQ0FBQyxDQUEyQixDQUFDLENBQUM7O0FBRXJDLE1BQUkseUJBQXlCLEVBQzNCLFNBQVMsQ0FBQyxlQUFlLENBQUMseUJBQXlCLENBQUMsQ0FBQztDQUN4RCxNQUNJLElBQUksc0JBQVksZUFBZSxFQUFFLEVBQUU7O0FBRXRDLHFCQUFPLENBQUMsRUFBeUMsQ0FBQyxDQUFDIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBERVZfSE9TVCwgUFJPRF9IT1NULCBBUElfVVJMIH0gZnJvbSAnLi92YXJzLmpzJztcbmltcG9ydCBFbnZpcm9ubWVudCBmcm9tICcuL2Vudmlyb25tZW50LmpzJztcblxuXG5pZiAoRW52aXJvbm1lbnQuaXNCcm93c2VyKCkpIHtcbiAgLy8gV2UncmUgcnVubmluZyBpbiB0aGUgaG9zdCBwYWdlLCBpRnJhbWUgb2YgdGhlIGhvc3QgcGFnZSwgb3IgcG9wdXAgd2luZG93XG4gIC8vIExvYWQgT25lU2lnbmFsJ3Mgd2ViIFNES1xuICBpZiAodHlwZW9mIE9uZVNpZ25hbCAhPT0gXCJ1bmRlZmluZWRcIilcbiAgICB2YXIgcHJlZGVmaW5lZE9uZVNpZ25hbFB1c2hlcyA9IE9uZVNpZ25hbDtcblxuICByZXF1aXJlKFwiZXhwb3NlP09uZVNpZ25hbCEuL3Nkay5qc1wiKTtcblxuICBpZiAocHJlZGVmaW5lZE9uZVNpZ25hbFB1c2hlcylcbiAgICBPbmVTaWduYWwuX3Byb2Nlc3NfcHVzaGVzKHByZWRlZmluZWRPbmVTaWduYWxQdXNoZXMpO1xufVxuZWxzZSBpZiAoRW52aXJvbm1lbnQuaXNTZXJ2aWNlV29ya2VyKCkpIHtcbiAgLy8gV2UncmUgcnVubmluZyBhcyB0aGUgc2VydmljZSB3b3JrZXJcbiAgcmVxdWlyZShcImV4cG9zZT9TZXJ2aWNlV29ya2VyIS4vU2VydmljZVdvcmtlci5qc1wiKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2VudHJ5LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.API_URL = exports.HOST_URL = exports.PROD_HOST = exports.DEV_FRAME_HOST = exports.DEV_HOST = undefined;\n\nvar _utils = __webpack_require__(2);\n\nvar DEV_HOST = exports.DEV_HOST = 'https://127.0.0.1:3001';\nvar DEV_FRAME_HOST = exports.DEV_FRAME_HOST = 'https://localhost:3001';\nvar PROD_HOST = exports.PROD_HOST = 'https://onesignal.com';\nvar HOST_URL = exports.HOST_URL = (0, _utils.isDev)() ? DEV_HOST : PROD_HOST;\nvar API_URL = exports.API_URL = ((0, _utils.isDev)() ? DEV_HOST : PROD_HOST) + '/api/v1/';\n\n// ⬸ ⤑//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmFycy5qcz8wOTAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVPLElBQU0sUUFBUSxXQUFSLFFBQVEsR0FBRyx3QkFBd0IsQ0FBQztBQUMxQyxJQUFNLGNBQWMsV0FBZCxjQUFjLEdBQUcsd0JBQXdCLENBQUM7QUFDaEQsSUFBTSxTQUFTLFdBQVQsU0FBUyxHQUFHLHVCQUF1QixDQUFDO0FBQzFDLElBQU0sUUFBUSxXQUFSLFFBQVEsR0FBSSxXQUxoQixLQUFLLEdBS2tCLEdBQUcsUUFBUSxHQUFHLFNBQVUsQ0FBQztBQUNsRCxJQUFNLE9BQU8sV0FBUCxPQUFPLEdBQUcsQ0FBQyxXQU5mLEtBQUssR0FNaUIsR0FBRyxRQUFRLEdBQUcsU0FBUyxJQUFJLFVBQVUiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzRGV2IH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbmV4cG9ydCBjb25zdCBERVZfSE9TVCA9ICdodHRwczovLzEyNy4wLjAuMTozMDAxJztcbmV4cG9ydCBjb25zdCBERVZfRlJBTUVfSE9TVCA9ICdodHRwczovL2xvY2FsaG9zdDozMDAxJztcbmV4cG9ydCBjb25zdCBQUk9EX0hPU1QgPSAnaHR0cHM6Ly9vbmVzaWduYWwuY29tJztcbmV4cG9ydCBjb25zdCBIT1NUX1VSTCA9IChpc0RldigpID8gREVWX0hPU1QgOiBQUk9EX0hPU1QpO1xuZXhwb3J0IGNvbnN0IEFQSV9VUkwgPSAoaXNEZXYoKSA/IERFVl9IT1NUIDogUFJPRF9IT1NUKSArICcvYXBpL3YxLyc7XG5cbi8vIOKsuCDipJFcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy92YXJzLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isArray = isArray;\nexports.getHumanizedTimeDuration = getHumanizedTimeDuration;\nexports.isDev = isDev;\nexports.isPushNotificationsSupported = isPushNotificationsSupported;\nexports.isBrowserSafari = isBrowserSafari;\nexports.isSupportedFireFox = isSupportedFireFox;\nexports.isBrowserFirefox = isBrowserFirefox;\nexports.getFirefoxVersion = getFirefoxVersion;\nexports.isSupportedSafari = isSupportedSafari;\nexports.removeDomElement = removeDomElement;\nexports.addDomElement = addDomElement;\nexports.clearDomElementChildren = clearDomElementChildren;\nexports.addCssClass = addCssClass;\nexports.removeCssClass = removeCssClass;\nexports.hasCssClass = hasCssClass;\nexports.on = on;\nexports.once = once;\nexports.off = off;\nexports.getConsoleStyle = getConsoleStyle;\nexports.delay = delay;\nexports.nothing = nothing;\nexports.when = when;\nexports.guid = guid;\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nfunction isArray(variable) {\n  return Object.prototype.toString.call(variable) === '[object Array]';\n}\n\nfunction getHumanizedTimeDuration(timeDurationInMilliseconds) {\n  function addPluralSuffix(number) {\n    return number > 1 ? 's' : '';\n  }\n  var duration = Math.floor(timeDurationInMilliseconds / 1000);\n\n  var years = Math.floor(duration / 31536000);\n  if (years) return years + ' year' + addPluralSuffix(years);\n\n  var days = Math.floor((duration %= 31536000) / 86400);\n  if (days) return days + ' day' + addPluralSuffix(days);\n\n  var hours = Math.floor((duration %= 86400) / 3600);\n  if (hours) return hours + ' hour' + addPluralSuffix(hours);\n\n  var minutes = Math.floor((duration %= 3600) / 60);\n  if (minutes) return minutes + ' minute' + addPluralSuffix(minutes);\n\n  var seconds = duration % 60;\n  if (seconds) return seconds + ' second' + addPluralSuffix(seconds);\n\n  return 'just now';\n}\n\nfunction isDev() {\n  return (true);\n}\n\nfunction isPushNotificationsSupported() {\n  var chromeVersion = navigator.appVersion.match(/Chrome\\/(.*?) /);\n\n  if (isSupportedFireFox()) return true;\n\n  if (isSupportedSafari()) return true;\n\n  // Chrome is not found in appVersion.\n  if (!chromeVersion) return false;\n\n  // Microsoft Edge\n  if (navigator.appVersion.match(/Edge/)) return false;\n\n  // Android Chrome WebView\n  if (navigator.appVersion.match(/ wv/)) return false;\n\n  // Opera\n  if (navigator.appVersion.match(/OPR\\//)) return false;\n\n  // The user is on iOS\n  if (/iPad|iPhone|iPod/.test(navigator.platform)) return false;\n\n  return parseInt(chromeVersion[1].substring(0, 2)) > 41;\n}\n\nfunction isBrowserSafari() {\n  var safariVersion = navigator.appVersion.match(\"Version/([0-9]?).* Safari\");\n  return safariVersion != null;\n}\n\nfunction isSupportedFireFox() {\n  var fireFoxVersion = navigator.userAgent.match(/(Firefox\\/)([0-9]{2,}\\.[0-9]{1,})/);\n  if (fireFoxVersion) return parseInt(fireFoxVersion[2].substring(0, 2)) > 43;\n  return false;\n}\n\nfunction isBrowserFirefox() {\n  var fireFoxVersion = navigator.userAgent.match(/(Firefox\\/)([0-9]{2,}\\.[0-9]{1,})/);\n  return fireFoxVersion != null;\n}\n\nfunction getFirefoxVersion() {\n  var fireFoxVersion = navigator.userAgent.match(/(Firefox\\/)([0-9]{2,}\\.[0-9]{1,})/);\n  if (fireFoxVersion) return parseInt(fireFoxVersion[2].substring(0, 2));else return -1;\n}\n\nfunction isSupportedSafari() {\n  var safariVersion = navigator.appVersion.match(\"Version/([0-9]?).* Safari\");\n  if (safariVersion == null) return false;\n  if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) return false;\n  return parseInt(safariVersion[1]) > 6;\n}\n\nfunction removeDomElement(selector) {\n  var els = document.querySelectorAll(selector);\n  if (els.length > 0) {\n    for (var i = 0; i < els.length; i++) {\n      els[i].parentNode.removeChild(els[i]);\n    }\n  }\n}\n\nfunction addDomElement(targetSelectorOrElement, addOrder, elementHtml) {\n  if (typeof targetSelectorOrElement === 'string') document.querySelector(targetSelectorOrElement).insertAdjacentHTML(addOrder, elementHtml);else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.insertAdjacentHTML(addOrder, elementHtml);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction clearDomElementChildren(targetSelectorOrElement) {\n  if (typeof targetSelectorOrElement === 'string') {\n    var element = document.querySelector(targetSelectorOrElement);\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') {\n    while (targetSelectorOrElement.firstChild) {\n      targetSelectorOrElement.removeChild(targetSelectorOrElement.firstChild);\n    }\n  } else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction addCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string') document.querySelector(targetSelectorOrElement).classList.add(cssClass);else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.classList.add(cssClass);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction removeCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string') document.querySelector(targetSelectorOrElement).classList.remove(cssClass);else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.classList.remove(cssClass);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction hasCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string') return document.querySelector(targetSelectorOrElement).classList.contains(cssClass);else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') return targetSelectorOrElement.classList.contains(cssClass);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction on(targetSelectorOrElement, event, task) {\n  if (!event) {\n    _loglevel2.default.error('Cannot call on() with no event: ', event);\n  }\n  if (!task) {\n    _loglevel2.default.error('Cannot call on() with no task: ', task);\n  }\n  if (typeof targetSelectorOrElement === 'string') {\n    var els = document.querySelectorAll(selector);\n    if (els.length > 0) {\n      for (var i = 0; i < els.length; i++) {\n        on(els[i], task);\n      }\n    }\n  } else if (isArray(targetSelectorOrElement)) {\n    for (var i = 0; i < targetSelectorOrElement.length; i++) {\n      on(targetSelectorOrElement[i], task);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.addEventListener(event, task);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction once(targetSelectorOrElement, event, task) {\n  var manualDestroy = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n  if (!event) {\n    _loglevel2.default.error('Cannot call on() with no event: ', event);\n  }\n  if (!task) {\n    _loglevel2.default.error('Cannot call on() with no task: ', task);\n  }\n  if (typeof targetSelectorOrElement === 'string') {\n    var els = document.querySelectorAll(selector);\n    if (els.length > 0) {\n      for (var i = 0; i < els.length; i++) {\n        once(els[i], task);\n      }\n    }\n  } else if (isArray(targetSelectorOrElement)) {\n    for (var i = 0; i < targetSelectorOrElement.length; i++) {\n      once(targetSelectorOrElement[i], task);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') {\n    var taskWrapper = (function () {\n      var internalTaskFunction = function internalTaskFunction(e) {\n        var destroyEventListener = function destroyEventListener() {\n          targetSelectorOrElement.removeEventListener(e.type, taskWrapper);\n        };\n        if (!manualDestroy) {\n          destroyEventListener();\n        }\n        task(e, destroyEventListener);\n      };\n      return internalTaskFunction;\n    })();\n    targetSelectorOrElement.addEventListener(event, taskWrapper);\n  } else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\n/**\n * Removes event handler from selector.\n * @param targetSelectorOrElement Selector to target one or multiple elements, or a single or array of DOMElement.\n * @param event The event to target (e.g. 'transitionend')\n * @param task A single function callback to unbind, or leave empty to remove all event handlers.\n */\nfunction off(targetSelectorOrElement, event, task) {\n  if (typeof targetSelectorOrElement === 'string') {\n    var els = document.querySelectorAll(selector);\n    if (els.length > 0) {\n      for (var i = 0; i < els.length; i++) {\n        off(els[i], task);\n      }\n    }\n  } else if (isArray(targetSelectorOrElement)) {\n    for (var i = 0; i < targetSelectorOrElement.length; i++) {\n      off(targetSelectorOrElement[i], task);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') {\n    if (task) targetSelectorOrElement.removeEventListener(event, task);else targetSelectorOrElement.removeEventListener(event);\n  } else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction getConsoleStyle(style) {\n  if (style == 'code') {\n    return '\\n    padding: 0 5px 2px;\\n    border: 1px solid #ddd;\\n    -webkit-border-radius: 3px;\\n    -moz-border-radius: 3px;\\n    border-radius: 3px;\\n    background-clip: padding-box;\\n    font-family: Monaco,\"DejaVu Sans Mono\",\"Courier New\",monospace;\\n    color: #666;\\n    ';\n  } else if (style == 'bold') {\n    return '\\n      font-weight: 600;\\n    color: rgb(51, 51, 51);\\n    ';\n  } else if (style == 'alert') {\n    return '\\n      font-weight: 600;\\n    color: red;\\n    ';\n  } else if (style == 'event') {\n    return '\\n    color: green;\\n    ';\n  } else if (style == 'postmessage') {\n    return '\\n    color: orange;\\n    ';\n  }\n}\n\n/**\n * Returns a promise for the setTimeout() method.\n * @param durationMs\n * @returns {Promise} Returns a promise that resolves when the timeout is complete.\n */\nfunction delay(durationMs) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, durationMs);\n  });\n}\n\nfunction nothing() {\n  return Promise.resolve();\n}\n\nfunction when(condition, promiseIfTrue, promiseIfFalse) {\n  if (promiseIfTrue === undefined) promiseIfTrue = nothing();\n  if (promiseIfFalse === undefined) promiseIfFalse = nothing();\n  return condition ? promiseIfTrue : promiseIfFalse;\n}\n\nfunction guid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = crypto.getRandomValues(new Uint8Array(1))[0] % 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n* loglevel - https://github.com/pimterry/loglevel\r\n*\r\n* Copyright (c) 2013 Tim Perry\r\n* Licensed under the MIT license.\r\n*/\r\n(function (root, definition) {\r\n    "use strict";\r\n    if (typeof module === \'object\' && module.exports && "function" === \'function\') {\r\n        module.exports = definition();\r\n    } else if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else {\r\n        root.log = definition();\r\n    }\r\n}(this, function () {\r\n    "use strict";\r\n    var noop = function() {};\r\n    var undefinedType = "undefined";\r\n\r\n    function realMethod(methodName) {\r\n        if (typeof console === undefinedType) {\r\n            return false; // We can\'t build a real method without a console to log to\r\n        } else if (console[methodName] !== undefined) {\r\n            return bindMethod(console, methodName);\r\n        } else if (console.log !== undefined) {\r\n            return bindMethod(console, \'log\');\r\n        } else {\r\n            return noop;\r\n        }\r\n    }\r\n\r\n    function bindMethod(obj, methodName) {\r\n        var method = obj[methodName];\r\n        if (typeof method.bind === \'function\') {\r\n            return method.bind(obj);\r\n        } else {\r\n            try {\r\n                return Function.prototype.bind.call(method, obj);\r\n            } catch (e) {\r\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\r\n                return function() {\r\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    // these private functions always need `this` to be set properly\r\n\r\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\r\n        return function () {\r\n            if (typeof console !== undefinedType) {\r\n                replaceLoggingMethods.call(this, level, loggerName);\r\n                this[methodName].apply(this, arguments);\r\n            }\r\n        };\r\n    }\r\n\r\n    function replaceLoggingMethods(level, loggerName) {\r\n        /*jshint validthis:true */\r\n        for (var i = 0; i < logMethods.length; i++) {\r\n            var methodName = logMethods[i];\r\n            this[methodName] = (i < level) ?\r\n                noop :\r\n                this.methodFactory(methodName, level, loggerName);\r\n        }\r\n    }\r\n\r\n    function defaultMethodFactory(methodName, level, loggerName) {\r\n        /*jshint validthis:true */\r\n        return realMethod(methodName) ||\r\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\r\n    }\r\n\r\n    var logMethods = [\r\n        "trace",\r\n        "debug",\r\n        "info",\r\n        "warn",\r\n        "error"\r\n    ];\r\n\r\n    function Logger(name, defaultLevel, factory) {\r\n      var self = this;\r\n      var currentLevel;\r\n      var storageKey = "loglevel";\r\n      if (name) {\r\n        storageKey += ":" + name;\r\n      }\r\n\r\n      function persistLevelIfPossible(levelNum) {\r\n          var levelName = (logMethods[levelNum] || \'silent\').toUpperCase();\r\n\r\n          // Use localStorage if available\r\n          try {\r\n              window.localStorage[storageKey] = levelName;\r\n              return;\r\n          } catch (ignore) {}\r\n\r\n          // Use session cookie as fallback\r\n          try {\r\n              window.document.cookie =\r\n                encodeURIComponent(storageKey) + "=" + levelName + ";";\r\n          } catch (ignore) {}\r\n      }\r\n\r\n      function getPersistedLevel() {\r\n          var storedLevel;\r\n\r\n          try {\r\n              storedLevel = window.localStorage[storageKey];\r\n          } catch (ignore) {}\r\n\r\n          if (typeof storedLevel === undefinedType) {\r\n              try {\r\n                  var cookie = window.document.cookie;\r\n                  var location = cookie.indexOf(\r\n                      encodeURIComponent(storageKey) + "=");\r\n                  if (location) {\r\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\r\n                  }\r\n              } catch (ignore) {}\r\n          }\r\n\r\n          // If the stored level is not valid, treat it as if nothing was stored.\r\n          if (self.levels[storedLevel] === undefined) {\r\n              storedLevel = undefined;\r\n          }\r\n\r\n          return storedLevel;\r\n      }\r\n\r\n      /*\r\n       *\r\n       * Public API\r\n       *\r\n       */\r\n\r\n      self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,\r\n          "ERROR": 4, "SILENT": 5};\r\n\r\n      self.methodFactory = factory || defaultMethodFactory;\r\n\r\n      self.getLevel = function () {\r\n          return currentLevel;\r\n      };\r\n\r\n      self.setLevel = function (level, persist) {\r\n          if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {\r\n              level = self.levels[level.toUpperCase()];\r\n          }\r\n          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {\r\n              currentLevel = level;\r\n              if (persist !== false) {  // defaults to true\r\n                  persistLevelIfPossible(level);\r\n              }\r\n              replaceLoggingMethods.call(self, level, name);\r\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\r\n                  return "No console available for logging";\r\n              }\r\n          } else {\r\n              throw "log.setLevel() called with invalid level: " + level;\r\n          }\r\n      };\r\n\r\n      self.setDefaultLevel = function (level) {\r\n          if (!getPersistedLevel()) {\r\n              self.setLevel(level, false);\r\n          }\r\n      };\r\n\r\n      self.enableAll = function(persist) {\r\n          self.setLevel(self.levels.TRACE, persist);\r\n      };\r\n\r\n      self.disableAll = function(persist) {\r\n          self.setLevel(self.levels.SILENT, persist);\r\n      };\r\n\r\n      // Initialize with the right level\r\n      var initialLevel = getPersistedLevel();\r\n      if (initialLevel == null) {\r\n          initialLevel = defaultLevel == null ? "WARN" : defaultLevel;\r\n      }\r\n      self.setLevel(initialLevel, false);\r\n    }\r\n\r\n    /*\r\n     *\r\n     * Package-level API\r\n     *\r\n     */\r\n\r\n    var defaultLogger = new Logger();\r\n\r\n    var _loggersByName = {};\r\n    defaultLogger.getLogger = function getLogger(name) {\r\n        if (typeof name !== "string" || name === "") {\r\n          throw new TypeError("You must supply a name when creating a logger.");\r\n        }\r\n\r\n        var logger = _loggersByName[name];\r\n        if (!logger) {\r\n          logger = _loggersByName[name] = new Logger(\r\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\r\n        }\r\n        return logger;\r\n    };\r\n\r\n    // Grab the current global log variable in case of overwrite\r\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\r\n    defaultLogger.noConflict = function() {\r\n        if (typeof window !== undefinedType &&\r\n               window.log === defaultLogger) {\r\n            window.log = _log;\r\n        }\r\n\r\n        return defaultLogger;\r\n    };\r\n\r\n    return defaultLogger;\r\n}));\r\n//@ sourceMappingURL=data:application/json;base64,')},function(module,exports){eval('"use strict";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Environment = (function () {\n  function Environment() {\n    _classCallCheck(this, Environment);\n  }\n\n  _createClass(Environment, null, [{\n    key: "getEnv",\n    value: function getEnv() {\n      if (typeof window === "undefined") {\n        if (typeof WorkerLocation !== "undefined" && location instanceof WorkerLocation) return Environment.SERVICE_WORKER;\n      } else {\n        // If the window is the root top-most level\n        if (window.self === window.top) {\n          if (location.href.indexOf("initOneSignal") > -1) return Environment.POPUP;else return Environment.HOST;\n        } else return Environment.IFRAME;\n      }\n    }\n  }, {\n    key: "isServiceWorker",\n    value: function isServiceWorker() {\n      return Environment.getEnv() === Environment.SERVICE_WORKER;\n    }\n  }, {\n    key: "isHost",\n    value: function isHost() {\n      return Environment.getEnv() === Environment.HOST;\n    }\n  }, {\n    key: "isPopup",\n    value: function isPopup() {\n      return Environment.getEnv() === Environment.POPUP;\n    }\n  }, {\n    key: "isIframe",\n    value: function isIframe() {\n      return Environment.getEnv() === Environment.IFRAME;\n    }\n  }, {\n    key: "isBrowser",\n    value: function isBrowser() {\n      return typeof window !== \'undefined\';\n    }\n  }, {\n    key: "SERVICE_WORKER",\n    get: function get() {\n      return \'ServiceWorker\';\n    }\n  }, {\n    key: "HOST",\n    get: function get() {\n      return "host";\n    }\n  }, {\n    key: "POPUP",\n    get: function get() {\n      return "popup";\n    }\n  }, {\n    key: "IFRAME",\n    get: function get() {\n      return "iFrame";\n    }\n  }]);\n\n  return Environment;\n})();\n\nexports.default = Environment;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZW52aXJvbm1lbnQuanM/MDA0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQXFCLFdBQVc7V0FBWCxXQUFXOzBCQUFYLFdBQVc7OztlQUFYLFdBQVc7OzZCQWlCZDtBQUNkLFVBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxFQUFFO0FBQ2pDLFlBQUksT0FBTyxjQUFjLEtBQUssV0FBVyxJQUFJLFFBQVEsWUFBWSxjQUFjLEVBQzdFLE9BQU8sV0FBVyxDQUFDLGNBQWMsQ0FBQztPQUNyQyxNQUNJOztBQUVILFlBQUksTUFBTSxDQUFDLElBQUksS0FBSyxNQUFNLENBQUMsR0FBRyxFQUFFO0FBQzlCLGNBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQzdDLE9BQU8sV0FBVyxDQUFDLEtBQUssQ0FBQyxLQUV6QixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUM7U0FDM0IsTUFFQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLENBQUM7T0FDN0I7S0FDRjs7O3NDQUV3QjtBQUN2QixhQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxXQUFXLENBQUMsY0FBYyxDQUFDO0tBQzVEOzs7NkJBRWU7QUFDZCxhQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxXQUFXLENBQUMsSUFBSSxDQUFDO0tBQ2xEOzs7OEJBRWdCO0FBQ2YsYUFBTyxXQUFXLENBQUMsTUFBTSxFQUFFLEtBQUssV0FBVyxDQUFDLEtBQUssQ0FBQztLQUNuRDs7OytCQUVpQjtBQUNoQixhQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxXQUFXLENBQUMsTUFBTSxDQUFDO0tBQ3BEOzs7Z0NBRWtCO0FBQ2pCLGFBQU8sT0FBTyxNQUFNLEtBQUssV0FBVyxDQUFDO0tBQ3RDOzs7d0JBcEQyQjtBQUMxQixhQUFPLGVBQWUsQ0FBQztLQUN4Qjs7O3dCQUVpQjtBQUNoQixhQUFPLE1BQU0sQ0FBQztLQUNmOzs7d0JBRWtCO0FBQ2pCLGFBQU8sT0FBTyxDQUFDO0tBQ2hCOzs7d0JBRW1CO0FBQ2xCLGFBQU8sUUFBUSxDQUFDO0tBQ2pCOzs7U0Fma0IsV0FBVzs7O2tCQUFYLFdBQVciLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEVudmlyb25tZW50IHtcbiAgc3RhdGljIGdldCBTRVJWSUNFX1dPUktFUigpIHtcbiAgICByZXR1cm4gJ1NlcnZpY2VXb3JrZXInO1xuICB9XG5cbiAgc3RhdGljIGdldCBIT1NUKCkge1xuICAgIHJldHVybiBcImhvc3RcIjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgUE9QVVAoKSB7XG4gICAgcmV0dXJuIFwicG9wdXBcIjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgSUZSQU1FKCkge1xuICAgIHJldHVybiBcImlGcmFtZVwiO1xuICB9XG5cbiAgc3RhdGljIGdldEVudigpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgaWYgKHR5cGVvZiBXb3JrZXJMb2NhdGlvbiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBsb2NhdGlvbiBpbnN0YW5jZW9mIFdvcmtlckxvY2F0aW9uKVxuICAgICAgICByZXR1cm4gRW52aXJvbm1lbnQuU0VSVklDRV9XT1JLRVI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgLy8gSWYgdGhlIHdpbmRvdyBpcyB0aGUgcm9vdCB0b3AtbW9zdCBsZXZlbFxuICAgICAgaWYgKHdpbmRvdy5zZWxmID09PSB3aW5kb3cudG9wKSB7XG4gICAgICAgIGlmIChsb2NhdGlvbi5ocmVmLmluZGV4T2YoXCJpbml0T25lU2lnbmFsXCIpID4gLTEpXG4gICAgICAgICAgcmV0dXJuIEVudmlyb25tZW50LlBPUFVQO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgcmV0dXJuIEVudmlyb25tZW50LkhPU1Q7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICAgIHJldHVybiBFbnZpcm9ubWVudC5JRlJBTUU7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGlzU2VydmljZVdvcmtlcigpIHtcbiAgICByZXR1cm4gRW52aXJvbm1lbnQuZ2V0RW52KCkgPT09IEVudmlyb25tZW50LlNFUlZJQ0VfV09SS0VSO1xuICB9XG5cbiAgc3RhdGljIGlzSG9zdCgpIHtcbiAgICByZXR1cm4gRW52aXJvbm1lbnQuZ2V0RW52KCkgPT09IEVudmlyb25tZW50LkhPU1Q7XG4gIH1cblxuICBzdGF0aWMgaXNQb3B1cCgpIHtcbiAgICByZXR1cm4gRW52aXJvbm1lbnQuZ2V0RW52KCkgPT09IEVudmlyb25tZW50LlBPUFVQO1xuICB9XG5cbiAgc3RhdGljIGlzSWZyYW1lKCkge1xuICAgIHJldHVybiBFbnZpcm9ubWVudC5nZXRFbnYoKSA9PT0gRW52aXJvbm1lbnQuSUZSQU1FO1xuICB9XG5cbiAgc3RhdGljIGlzQnJvd3NlcigpIHtcbiAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG4gIH1cbn1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9lbnZpcm9ubWVudC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["OneSignal"] = __webpack_require__(6);\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2RrLmpzP2RmYjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEdBQStLLEUiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsW1wiT25lU2lnbmFsXCJdID0gcmVxdWlyZShcIi0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvaW5kZXguanM/e1xcXCJwcmVzZXRzXFxcIjpbXFxcImVzMjAxNVxcXCJdLFxcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZX0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL3NyYy9zZGsuanNcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZXhwb3NlLWxvYWRlcj9PbmVTaWduYWwhLi9zcmMvc2RrLmpzXG4gKiogbW9kdWxlIGlkID0gNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nvar _vars = __webpack_require__(1);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\n__webpack_require__(8);\n\nvar _api = __webpack_require__(9);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _bell = __webpack_require__(12);\n\nvar _bell2 = _interopRequireDefault(_bell);\n\nvar _database = __webpack_require__(26);\n\nvar _database2 = _interopRequireDefault(_database);\n\nvar _bowser = __webpack_require__(13);\n\nvar Browser = _interopRequireWildcard(_bowser);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OneSignal = {\n  _VERSION: (\"109043\"),\n  _API_URL: _vars.API_URL,\n  _app_id: null,\n  _tagsToSendOnRegister: null,\n  _notificationOpened_callback: [],\n  _idsAvailable_callback: [],\n  _defaultLaunchURL: null,\n  _initOptions: null,\n  _httpRegistration: false,\n  _main_page_port: null,\n  _isNotificationEnabledCallback: [],\n  _subscriptionSet: true,\n  _initOneSignalHttp: null,\n  _sessionIframeAdded: false,\n  _useHttpMode: null,\n  _windowWidth: 550,\n  _windowHeight: 480,\n  _isUninitiatedVisitor: false,\n  _isNewVisitor: false,\n  initialized: false,\n  notifyButton: null,\n  store: _limitStore2.default,\n  environment: _environment2.default,\n  database: _database2.default,\n  event: _events2.default,\n  browser: Browser,\n  log: _loglevel2.default,\n  SERVICE_WORKER_UPDATER_PATH: \"OneSignalSDKUpdaterWorker.js\",\n  SERVICE_WORKER_PATH: \"OneSignalSDKWorker.js\",\n  SERVICE_WORKER_PARAM: {},\n\n  /* Event Definitions */\n  EVENTS: {\n    CUSTOM_PROMPT_CLICKED: 'onesignal.prompt.custom.clicked',\n    NATIVE_PROMPT_PERMISSIONCHANGED: 'onesignal.prompt.native.permissionchanged',\n    SUBSCRIPTION_CHANGED: 'onesignal.subscription.changed',\n    WELCOME_NOTIFICATION_SENT: 'onesignal.actions.welcomenotificationsent',\n    INTERNAL_SUBSCRIPTIONSET: 'onesignal.internal.subscriptionset',\n    SDK_INITIALIZED: 'onesignal.sdk.initialized'\n  },\n\n  _sendToOneSignalApi: function _sendToOneSignalApi(url, action, inData, callback, failedCallback) {\n    _loglevel2.default.debug('Calling ' + action + ' ' + (OneSignal._API_URL + url) + ' with data:', inData);\n    var contents = {\n      method: action\n    };\n\n    //mode: 'no-cors', // no-cors is disabled for non-serviceworker.\n    if (inData) {\n      contents.headers = { \"Content-type\": \"application/json;charset=UTF-8\" };\n      contents.body = JSON.stringify(inData);\n    }\n\n    fetch(OneSignal._API_URL + url, contents).then(function status(response) {\n      if (response.status >= 200 && response.status < 300) return Promise.resolve(response);else return Promise.reject(new Error(response.statusText));\n    }).then(function status(response) {\n      return response.json();\n    }).then(function (jsonData) {\n      if (callback != null) callback(jsonData);\n    }).catch(function (e) {\n      _loglevel2.default.error('OneSignal._sendToOneSignalApi() failed:', e);\n      if (failedCallback != null) failedCallback();\n    });\n  },\n\n  _getLanguage: function _getLanguage() {\n    return navigator.language ? navigator.language.length > 3 ? navigator.language.substring(0, 2) : navigator.language : 'en';\n  },\n\n  _getPlayerId: function _getPlayerId(value, callback) {\n    if (value) callback(value);else {\n      _database2.default.get('Ids', 'userId').then(function _getPlayerId_gotUserId(result) {\n        if (result) callback(result.id);else callback(null);\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n      ;\n    }\n  },\n\n  _registerWithOneSignal: function _registerWithOneSignal(appId, registrationId, deviceType) {\n\n    _database2.default.get('Ids', 'userId').then(function _registerWithOneSignal_GotUserId(userIdResult) {\n      OneSignal._getNotificationTypes(function (notif_types) {\n        var requestUrl = 'players';\n\n        var jsonData = {\n          app_id: appId,\n          device_type: deviceType,\n          language: OneSignal._getLanguage(),\n          timezone: new Date().getTimezoneOffset() * -60,\n          device_model: navigator.platform + \" \" + Browser.name,\n          device_os: Browser.version,\n          sdk: OneSignal._VERSION\n        };\n\n        if (userIdResult) {\n          requestUrl = 'players/' + userIdResult.id + '/on_session';\n          jsonData.notification_types = notif_types;\n        } else if (notif_types != 1) jsonData.notification_types = notif_types;\n\n        if (registrationId) {\n          jsonData.identifier = registrationId;\n          _database2.default.put(\"Ids\", { type: \"registrationId\", id: registrationId });\n        }\n\n        OneSignal._sendToOneSignalApi(requestUrl, 'POST', jsonData, function registeredCallback(responseJSON) {\n          sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n\n          if (responseJSON.id) {\n            _database2.default.put(\"Ids\", { type: \"userId\", id: responseJSON.id });\n            OneSignal._sendUnsentTags();\n          }\n\n          OneSignal._getPlayerId(responseJSON.id, function (userId) {\n            if (OneSignal._idsAvailable_callback.length > 0) {\n              while (OneSignal._idsAvailable_callback.length > 0) {\n                var curr_callback = OneSignal._idsAvailable_callback.pop();\n                curr_callback({ userId: userId, registrationId: registrationId });\n              }\n            }\n\n            if (OneSignal._httpRegistration) {\n              // 12/16/2015 -- At this point, the user has just clicked Allow on the HTTP prompt!!\n              OneSignal._getNotificationPermission().then(function (permission) {\n                _loglevel2.default.debug(\"Sending player Id and registrationId back to host page\");\n                _loglevel2.default.debug(OneSignal._initOptions);\n                var creator = opener || parent;\n                OneSignal._safePostMessage(creator, {\n                  idsAvailable: {\n                    userId: userId,\n                    registrationId: registrationId\n                  },\n                  from: _environment2.default.getEnv()\n                }, OneSignal._initOptions.origin, null);\n                OneSignal._safePostMessage(creator, {\n                  httpNativePromptPermissionChanged: permission,\n                  from: _environment2.default.getEnv()\n                }, OneSignal._initOptions.origin, null);\n\n                if (opener) window.close();\n              }).catch(function (e) {\n                return _loglevel2.default.error(e);\n              });\n            }\n          });\n        });\n      });\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  _sendUnsentTags: function _sendUnsentTags() {\n    if (OneSignal._tagsToSendOnRegister) {\n      OneSignal.sendTags(OneSignal._tagsToSendOnRegister);\n      OneSignal._tagsToSendOnRegister = null;\n    }\n  },\n\n  setDefaultNotificationUrl: function setDefaultNotificationUrl(url) {\n    _database2.default.put(\"Options\", { key: \"defaultUrl\", value: url });\n  },\n\n  setDefaultIcon: function setDefaultIcon(icon) {\n    _database2.default.put(\"Options\", { key: \"defaultIcon\", value: icon });\n  },\n\n  setDefaultTitle: function setDefaultTitle(title) {\n    _database2.default.put(\"Options\", { key: \"defaultTitle\", value: title });\n  },\n\n  onCustomPromptClicked: function onCustomPromptClicked(event) {},\n\n  onNativePromptChanged: function onNativePromptChanged(event) {\n    OneSignal._checkTrigger_eventSubscriptionChanged();\n  },\n\n  _sendSelfNotification: function _sendSelfNotification(title, message, url) {\n    if (!title) {\n      title = 'OneSignal Test Message';\n    }\n    if (!message) {\n      message = 'This is an example notification.';\n    }\n    if (!url) {\n      url = new URL(location.href).origin + '?_osp=do_not_open';\n    }\n    _database2.default.get('Ids', 'userId').then(function (result) {\n      if (result && result.id) {\n        (0, _api.sendNotification)(OneSignal._app_id, [result.id], { 'en': title }, { 'en': message }, url);\n      } else {\n        _loglevel2.default.warn('Could not send self a test notification because there is no valid user ID.');\n      }\n    });\n  },\n\n  _onSubscriptionChanged: function _onSubscriptionChanged(event) {\n    if (OneSignal._isUninitiatedVisitor && event.detail === true) {\n      _database2.default.get('Ids', 'userId').then(function (result) {\n        var welcome_notification_opts = OneSignal._initOptions['welcomeNotification'];\n        var welcome_notification_disabled = welcome_notification_opts !== undefined && welcome_notification_opts['disable'] === true;\n        var title = welcome_notification_opts !== undefined && welcome_notification_opts['title'] !== undefined && welcome_notification_opts['title'] !== null ? welcome_notification_opts['title'] : '';\n        var message = welcome_notification_opts !== undefined && welcome_notification_opts['message'] !== undefined && welcome_notification_opts['message'] !== null && welcome_notification_opts['message'].length > 0 ? welcome_notification_opts['message'] : 'Thanks for subscribing!';\n        if (!welcome_notification_disabled) {\n          _loglevel2.default.debug('Because this user is a new site visitor, a welcome notification will be sent.');\n          var welcomeNotificationUrl = new URL(location.href);\n          welcomeNotificationUrl = welcomeNotificationUrl.origin + '?_osp=do_not_open';\n          (0, _api.sendNotification)(OneSignal._app_id, [result.id], { 'en': title }, { 'en': message }, welcomeNotificationUrl);\n          _events2.default.trigger(OneSignal.EVENTS.WELCOME_NOTIFICATION_SENT, { title: title, message: message });\n          OneSignal._isUninitiatedVisitor = false;\n        }\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    }\n    _limitStore2.default.put('subscription.value', event.detail);\n  },\n\n  _onDbValueRetrieved: function _onDbValueRetrieved(event) {},\n\n  _onDbValueSet: function _onDbValueSet(event) {\n    var info = event.detail;\n    if (info.type === 'userId') {\n      _limitStore2.default.put('db.ids.userId', info.id);\n      OneSignal._checkTrigger_eventSubscriptionChanged();\n    }\n  },\n\n  _onInternalSubscriptionSet: function _onInternalSubscriptionSet(event) {\n    var newSubscriptionValue = event.detail;\n    _limitStore2.default.put('setsubscription.value', newSubscriptionValue);\n    OneSignal._checkTrigger_eventSubscriptionChanged();\n  },\n\n  /**\n   * This event occurs after init.\n   * For HTTPS sites, this event is called after init.\n   * For HTTP sites, this event is called after the iFrame is created, and a message is received from the iFrame signaling cross-origin messaging is ready.\n   * @private\n   */\n  _onSdkInitialized: function _onSdkInitialized() {\n    if (OneSignal.initialized) {\n      _loglevel2.default.warn('SDK initialized event occured more than once, so skipping running init trigger code.');\n      return;\n    }\n\n    // Store initial values of notification permission, user ID, and manual subscription status\n    // This is done so that the values can be later compared to see if anything changed\n    // This is done here for HTTPS, it is done after the call to _addSessionIframe in _sessionInit for HTTP sites, since the iframe is needed for communication\n    OneSignal._storeInitialValues();\n\n    if (_environment2.default.isBrowser() && !OneSignal.notifyButton) {\n      OneSignal._initOptions.notifyButton = OneSignal._initOptions.notifyButton || {};\n      if (OneSignal._initOptions.bell) {\n        // If both bell and notifyButton, notifyButton's options take precedence\n        Object.assign(OneSignal._initOptions.bell, OneSignal._initOptions.notifyButton);\n        Object.assign(OneSignal._initOptions.notifyButton, OneSignal._initOptions.bell);\n      }\n      OneSignal.notifyButton = new _bell2.default(OneSignal._initOptions.notifyButton);\n      OneSignal.notifyButton.create();\n      OneSignal.initialized = true;\n    }\n  },\n\n  _onDatabaseRebuilt: function _onDatabaseRebuilt() {\n    OneSignal._isNewVisitor = true;\n  },\n\n  _checkTrigger_nativePermissionChanged: function _checkTrigger_nativePermissionChanged() {\n    OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id).then(function (permission) {\n      var currentPermission = permission;\n      var lastPermission = _limitStore2.default.getLast('notification.permission');\n      if (lastPermission !== currentPermission) {\n        OneSignal._triggerEvent_nativePromptPermissionChanged(lastPermission, currentPermission);\n      }\n    }).catch(function (e) {\n      return _loglevel2.default.error(e);\n    });\n  },\n\n  _checkTrigger_eventSubscriptionChanged: function _checkTrigger_eventSubscriptionChanged() {\n    _loglevel2.default.debug('Called %c_checkTrigger_eventSubscriptionChanged()', (0, _utils.getConsoleStyle)('code'), 'in', _environment2.default.getEnv());\n    var permissions = _limitStore2.default.get('notification.permission');\n    var lastPermission = permissions[permissions.length - 2];\n    var currentPermission = permissions[permissions.length - 1];\n    _loglevel2.default.debug('%c_checkTrigger_eventSubscriptionChanged():', (0, _utils.getConsoleStyle)('code'), 'Permissions:', { lastPermission: lastPermission, currentPermission: currentPermission });\n\n    var ids = _limitStore2.default.get('db.ids.userId');\n    var lastId = ids[ids.length - 2];\n    var currentId = ids[ids.length - 1];\n    _loglevel2.default.debug('%c_checkTrigger_eventSubscriptionChanged():', (0, _utils.getConsoleStyle)('code'), 'Ids:', { lastId: lastId, currentId: currentId });\n\n    var subscriptionStates = _limitStore2.default.get('setsubscription.value');\n    var lastSubscriptionState = subscriptionStates[subscriptionStates.length - 2];\n    var currentSubscriptionState = subscriptionStates[subscriptionStates.length - 1];\n    _loglevel2.default.debug('%c_checkTrigger_eventSubscriptionChanged():', (0, _utils.getConsoleStyle)('code'), 'Subscriptions:', { lastSubscriptionState: lastSubscriptionState, currentSubscriptionState: currentSubscriptionState });\n\n    var newSubscriptionState = 'unchanged';\n\n    if ((lastPermission === 'default' || lastPermission === 'denied' || lastPermission === null) && currentPermission === 'granted' && currentId !== null && currentSubscriptionState === true || lastSubscriptionState === false && currentSubscriptionState === true && currentId != null && currentPermission === 'granted') {\n      newSubscriptionState = true;\n    }\n\n    if (lastPermission !== 'denied' && currentPermission === 'denied' || lastPermission === 'granted' && currentPermission !== 'granted' || lastId !== null && currentId === null || lastSubscriptionState !== false && currentSubscriptionState === false) {\n      newSubscriptionState = false;\n    }\n\n    if (newSubscriptionState !== \"unchanged\") {\n      var lastTriggerTimes = _limitStore2.default.put('event.subscriptionchanged.lastriggered', Date.now());\n      var currentTime = lastTriggerTimes[lastTriggerTimes.length - 1];\n      var lastTriggerTime = lastTriggerTimes[lastTriggerTimes.length - 2];\n      var elapsedTimeSeconds = (currentTime - lastTriggerTime) / 1000;\n\n      var lastEventStates = _limitStore2.default.put('event.subscriptionchanged.laststates', newSubscriptionState);\n      var currentState = lastEventStates[lastEventStates.length - 1];\n      var lastState = lastEventStates[lastEventStates.length - 2];\n\n      // If event already triggered within the last second, don't re-trigger.\n      var shouldNotTriggerEvent = lastTriggerTime != null && elapsedTimeSeconds <= 1 || currentState === lastState;\n      if (shouldNotTriggerEvent === false) {\n        OneSignal._triggerEvent_subscriptionChanged(newSubscriptionState);\n      }\n    }\n  },\n\n  isPushNotificationsSupported: function isPushNotificationsSupported() {\n    return (0, _utils.isPushNotificationsSupported)();\n  },\n\n  _installNativePromptPermissionChangedHook: function _installNativePromptPermissionChangedHook() {\n    if (navigator.permissions && !((0, _utils.isBrowserFirefox)() && (0, _utils.getFirefoxVersion)() <= 45)) {\n      OneSignal._usingNativePermissionHook = true;\n      // If the browser natively supports hooking the subscription prompt permission change event\n      //     use it instead of our SDK method\n      navigator.permissions.query({ name: 'notifications' }).then(function (permissionStatus) {\n        permissionStatus.onchange = function () {\n          var permissionBeforePrompt = _limitStore2.default.getFirst('notification.permission');\n          OneSignal._triggerEvent_nativePromptPermissionChanged(permissionBeforePrompt);\n        };\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    }\n  },\n\n  init: function init(options) {\n    _loglevel2.default.debug('Called %cinit(' + JSON.stringify(options, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n\n    if (_environment2.default.isBrowser() && window.localStorage[\"onesignal.debugger.init\"]) {\n      debugger;\n    }\n\n    if (OneSignal.initialized) {\n      _loglevel2.default.warn('OneSignal.init() was called again, but the SDK is already initialized. Skipping initialization.');\n      return;\n    }\n\n    if (!options.path) {\n      options.path = '/';\n    }\n\n    OneSignal._initOptions = options;\n    OneSignal._app_id = OneSignal._initOptions.appId;\n\n    if (!(0, _utils.isPushNotificationsSupported)()) {\n      _loglevel2.default.warn(\"Your browser does not support push notifications.\");\n      return;\n    }\n\n    window.addEventListener(_database2.default.EVENTS.REBUILT, OneSignal._onDatabaseRebuilt);\n    window.addEventListener(OneSignal.EVENTS.CUSTOM_PROMPT_CLICKED, OneSignal.onCustomPromptClicked);\n    window.addEventListener(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, OneSignal.onNativePromptChanged);\n    window.addEventListener(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, OneSignal._onSubscriptionChanged);\n    window.addEventListener(_database2.default.EVENTS.RETRIEVED, OneSignal._onDbValueRetrieved);\n    window.addEventListener(_database2.default.EVENTS.SET, OneSignal._onDbValueSet);\n    window.addEventListener(OneSignal.EVENTS.INTERNAL_SUBSCRIPTIONSET, OneSignal._onInternalSubscriptionSet);\n    window.addEventListener(OneSignal.EVENTS.SDK_INITIALIZED, OneSignal._onSdkInitialized);\n    window.addEventListener('focus', function (event) {\n      // Checks if permission changed everytime a user focuses on the page, since a user has to click out of and back on the page to check permissions\n      OneSignal._checkTrigger_nativePermissionChanged();\n    });\n\n    OneSignal._useHttpMode = !(0, _utils.isSupportedSafari)() && (!OneSignal._supportsDirectPermission() || OneSignal._initOptions.subdomainName);\n\n    if (OneSignal._useHttpMode) {\n      if (!OneSignal._initOptions.subdomainName) {\n        _loglevel2.default.error('Missing required init parameter %csubdomainName', (0, _utils.getConsoleStyle)('code'), '. You must supply a subdomain name to the SDK initialization options. (See: https://documentation.onesignal.com/docs/website-sdk-http-installation#2-include-and-initialize-onesignal)');\n        return;\n      }\n      OneSignal._initOneSignalHttp = 'https://' + OneSignal._initOptions.subdomainName + '.onesignal.com/sdks/initOneSignalHttp';\n    } else {\n      OneSignal._initOneSignalHttp = 'https://onesignal.com/sdks/initOneSignalHttps';\n    }\n\n    if (true) OneSignal._initOneSignalHttp = _vars.DEV_FRAME_HOST + '/dev_sdks/initOneSignalHttp';\n\n    // If Safari - add 'fetch' pollyfill if it isn't already added.\n    if ((0, _utils.isSupportedSafari)() && typeof window.fetch == \"undefined\") {\n      var s = document.createElement('script');\n      s.setAttribute('src', \"https://cdnjs.cloudflare.com/ajax/libs/fetch/0.9.0/fetch.js\");\n      document.head.appendChild(s);\n    }\n\n    if (document.readyState === \"complete\") OneSignal._internalInit();else window.addEventListener('load', OneSignal._internalInit);\n  },\n\n  _internalInit: function _internalInit() {\n    _loglevel2.default.debug('Called %c_internalInit()', (0, _utils.getConsoleStyle)('code'));\n    Promise.all([_database2.default.get('Ids', 'appId'), _database2.default.get('Ids', 'registrationId'), _database2.default.get('Options', 'subscription')]).then(function _internalInit_GotAppRegistrationSubscriptionIds(result) {\n      var appIdResult = result[0];\n      var registrationIdResult = result[1];\n      var subscriptionResult = result[2];\n\n      // If AppId changed delete playerId and continue.\n      if (appIdResult && appIdResult.id != OneSignal._initOptions.appId) {\n        _database2.default.remove(\"Ids\", \"userId\");\n        sessionStorage.removeItem(\"ONE_SIGNAL_SESSION\");\n      }\n\n      // HTTPS - Only register for push notifications once per session or if the user changes notification permission to Ask or Allow.\n      if (sessionStorage.getItem(\"ONE_SIGNAL_SESSION\") && !OneSignal._initOptions.subdomainName && (Notification.permission == \"denied\" || sessionStorage.getItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\") == Notification.permission)) {\n        _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n        return;\n      }\n\n      sessionStorage.setItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\", Notification.permission);\n\n      if (Browser.safari && OneSignal._initOptions.autoRegister === false) {\n        _loglevel2.default.debug('On Safari and autoregister is false, skipping sessionInit().');\n        _loglevel2.default.debug('Use http mode: ', OneSignal._useHttpMode);\n        // This *seems* to trigger on either Safari's autoregister false or Chrome HTTP\n        // Chrome HTTP gets an SDK_INITIALIZED event from the iFrame postMessage, so don't call it here\n        if (!OneSignal._useHttpMode) {\n          _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n        }\n        return;\n      }\n\n      if (OneSignal._initOptions.autoRegister === false && !registrationIdResult && !OneSignal._initOptions.subdomainName) {\n        _loglevel2.default.debug('No autoregister, no registration ID, no subdomain > skip _internalInit().');\n        _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n        return;\n      }\n\n      if (document.visibilityState !== \"visible\") {\n        (0, _utils.once)(document, 'visibilitychange', function (e, destroyEventListener) {\n          if (document.visibilityState === 'visible') {\n            destroyEventListener();\n            OneSignal._sessionInit({});\n          }\n        }, true);\n        return;\n      }\n\n      _loglevel2.default.debug('Calling _sessionInit() normally from _internalInit().');\n      OneSignal._sessionInit({});\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n  },\n\n  registerForPushNotifications: function registerForPushNotifications(options) {\n    if (!(0, _utils.isPushNotificationsSupported)()) {\n      _loglevel2.default.warn(\"Your browser does not support push notifications.\");\n      return;\n    }\n    // WARNING: Do NOT add callbacks that have to fire to get from here to window.open in _sessionInit.\n    //          Otherwise the pop-up to ask for push permission on HTTP connections will be blocked by Chrome.\n    if (!options) options = {};\n    options.fromRegisterFor = true;\n    OneSignal._sessionInit(options);\n  },\n\n  // Http only - Only called from iframe's init.js\n  _initHttp: function _initHttp(options) {\n    _loglevel2.default.debug('Called %c_initHttp(' + JSON.stringify(options, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n\n    if (_environment2.default.isBrowser() && window.localStorage[\"onesignal.debugger._initHttp\"]) {\n      debugger;\n    }\n\n    OneSignal._initOptions = options;\n\n    OneSignal._installNativePromptPermissionChangedHook();\n    if (options.continuePressed) {\n      OneSignal.setSubscription(true);\n    }\n\n    var isIframe = parent != null && parent != window;\n    var creator = opener || parent;\n\n    if (!creator) {\n      _loglevel2.default.error('_initHttp (from <iframe>):', 'No opener or parent found!');\n      return;\n    }\n    // Setting up message channel to receive message from host page.\n    var messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = function (event) {\n      _loglevel2.default.debug('%c' + _environment2.default.getEnv().capitalize() + ' ⬸ ' + event.data.from.capitalize() + ':', (0, _utils.getConsoleStyle)('postmessage'), event.data);\n\n      if (event.data.initOptions) {\n        OneSignal.setDefaultNotificationUrl(event.data.initOptions.defaultUrl);\n        OneSignal.setDefaultTitle(event.data.initOptions.defaultTitle);\n        if (event.data.initOptions.defaultIcon) OneSignal.setDefaultIcon(event.data.initOptions.defaultIcon);\n\n        _database2.default.get(\"NotificationOpened\", event.data.initOptions.parent_url).then(function registerForPushNotifications_GotNotificationOpened(notificationOpenedResult) {\n          if (notificationOpenedResult) {\n            _database2.default.remove(\"NotificationOpened\", event.data.initOptions.parent_url);\n            _loglevel2.default.debug(\"OneSignal._safePostMessage:targetOrigin:\", OneSignal._initOptions.origin);\n\n            OneSignal._safePostMessage(creator, { openedNotification: notificationOpenedResult.data, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, null);\n          }\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n        });\n        ;\n      } else if (event.data.getNotificationPermission) {\n        // This is not used for OneSignal._getNotificationPermission, even though the naming is similar\n        //log.info('%cIn the <iframe>: getNotificationPermission message was received.', getConsoleStyle('alert'));\n        OneSignal._getSubdomainState(function (curState) {\n          OneSignal._safePostMessage(creator, { currentNotificationPermission: curState, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, null);\n        });\n      } else if (event.data.remoteGetNotificationPermission) {\n        (function () {\n          var safariWebId = event.data.safariWebId;\n          var promiseId = event.data.promiseId;\n          OneSignal._getNotificationPermission(safariWebId).then(function (permission) {\n            OneSignal._safePostMessage(creator, { remoteGetNotificationPermissionResponse: permission, promiseId: promiseId, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, null);\n          }).catch(function (e) {\n            return _loglevel2.default.error(e);\n          });\n        })();\n      } else if (event.data.setSubdomainState) {\n        (function () {\n          var promiseId = event.data.promiseId;\n          OneSignal.setSubscription(event.data.setSubdomainState.setSubscription).then(function () {\n            // Let main page know setSubscription is complete so promise can be fulfilled\n            OneSignal._safePostMessage(creator, { setSubscriptionComplete: true, from: _environment2.default.getEnv(), promiseId: promiseId }, OneSignal._initOptions.origin, null);\n          }).catch(function () {\n            OneSignal._safePostMessage(creator, { setSubscriptionComplete: false, from: _environment2.default.getEnv(), promiseId: promiseId }, OneSignal._initOptions.origin, null);\n          });\n        })();\n      } else if (event.data.remoteGetDbValue) {\n        (function () {\n          var promiseId = event.data.promiseId;\n          var table = event.data.table;\n          var key = event.data.key;\n          if (!promiseId) {\n            _loglevel2.default.error('No promise ID set for remoteGetDbValue.');\n          }\n          if (!table) {\n            _loglevel2.default.error('Cannot remotely retrieve database value without being supplied the table to look in!');\n          }\n          if (!key) {\n            _loglevel2.default.error(\"Cannot remotely retrieve database value without being supplied the table's key!\");\n          }\n          _database2.default.get(table, key).then(function (result) {\n            OneSignal._safePostMessage(creator, { remoteGetDbValue: true, result: result, from: _environment2.default.getEnv(), promiseId: promiseId }, OneSignal._initOptions.origin, null);\n          }).catch(function (e) {\n            _loglevel2.default.error(e);\n            OneSignal._safePostMessage(creator, { remoteGetDbValue: false, error: e, from: _environment2.default.getEnv(), promiseId: promiseId }, OneSignal._initOptions.origin, null);\n          });\n        })();\n      }\n    };\n\n    OneSignal._getSubdomainState(function (curState) {\n      curState[\"isIframe\"] = isIframe;\n      OneSignal._safePostMessage(creator, { oneSignalInitPageReady: curState, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, [messageChannel.port2]);\n    });\n\n    OneSignal._initSaveState();\n    OneSignal._httpRegistration = true;\n    if (location.search.indexOf(\"?session=true\") == 0) return;\n\n    OneSignal._getPlayerId(null, function (player_id) {\n      if (!isIframe || player_id) {\n        navigator.serviceWorker.register(OneSignal.SERVICE_WORKER_PATH, OneSignal.SERVICE_WORKER_PARAM).then(OneSignal._enableNotifications, OneSignal._registerError);\n      }\n    });\n  },\n\n  _getSubdomainState: function _getSubdomainState(callback) {\n    var state = {};\n\n    Promise.all([_database2.default.get('Ids', 'userId'), _database2.default.get('Ids', 'registrationId'), _database2.default.get('Options', 'subscription')]).then(function _internalInit_GotAppRegistrationSubscriptionIds(result) {\n      var userIdResult = result[0];\n      var registrationIdResult = result[1];\n      var subscriptionResult = result[2];\n\n      callback({\n        userId: userIdResult ? userIdResult.id : null,\n        registrationId: registrationIdResult ? registrationIdResult.id : null,\n        notifPermssion: Notification.permission,\n        subscriptionSet: subscriptionResult ? subscriptionResult.value : null,\n        isPushEnabled: Notification.permission == \"granted\" && userIdResult && registrationIdResult && (subscriptionResult && subscriptionResult.value || subscriptionResult == null)\n      });\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  _initSaveState: function _initSaveState() {\n    OneSignal._app_id = OneSignal._initOptions.appId;\n    _database2.default.put(\"Ids\", { type: \"appId\", id: OneSignal._app_id });\n    _database2.default.put(\"Options\", { key: \"pageTitle\", value: document.title });\n  },\n\n  _supportsDirectPermission: function _supportsDirectPermission() {\n    return (0, _utils.isSupportedSafari)() || location.protocol == 'https:' || location.host.indexOf(\"localhost\") == 0 || location.host.indexOf(\"127.0.0.1\") == 0;\n  },\n\n  _getPromptOptionsQueryString: function _getPromptOptionsQueryString() {\n    var message_localization_opts = OneSignal._initOptions['promptOptions'];\n    var message_localization_opts_str = '';\n    if (message_localization_opts) {\n      var message_localization_params = ['actionMessage', 'exampleNotificationTitleDesktop', 'exampleNotificationMessageDesktop', 'exampleNotificationTitleMobile', 'exampleNotificationMessageMobile', 'exampleNotificationCaption', 'acceptButtonText', 'cancelButtonText', 'showCredit'];\n      for (var i = 0; i < message_localization_params.length; i++) {\n        var key = message_localization_params[i];\n        var value = message_localization_opts[key];\n        var encoded_value = encodeURIComponent(value);\n        if (value || value === false || value === '') {\n          message_localization_opts_str += '&' + key + '=' + encoded_value;\n        }\n      }\n    }\n    return message_localization_opts_str;\n  },\n\n  _storeInitialValues: function _storeInitialValues() {\n    _loglevel2.default.debug('Called %c_storeInitialValues()', (0, _utils.getConsoleStyle)('code'));\n    return OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id).then(function (permission) {\n      _limitStore2.default.put('notification.permission', permission);\n      OneSignal._installNativePromptPermissionChangedHook();\n\n      // Store the current value of Ids:registrationId, so that we can see if the value changes in the future\n      return _database2.default.get('Ids', 'userId');\n    }).then(function (result) {\n      if (result === undefined) {\n        OneSignal._isUninitiatedVisitor = true;\n      }\n      var storeValue = result ? result.id : null;\n      _limitStore2.default.put('db.ids.userId', storeValue);\n\n      // Store the current value of subscription, so that we can see if the value changes in the future\n      return OneSignal._getSubscription();\n    }).then(function (currentSubscription) {\n      _limitStore2.default.put('setsubscription.value', currentSubscription);\n    }).catch(function (e) {\n      return _loglevel2.default.error(e);\n    });\n  },\n\n  _sessionInit: function _sessionInit(options) {\n    _loglevel2.default.debug('Called %c_sessionInit(' + JSON.stringify(options) + ')', (0, _utils.getConsoleStyle)('code'));\n    OneSignal._initSaveState();\n\n    var hostPageProtocol = location.origin.match(/^http(s|):\\/\\/(www\\.|)/)[0];\n\n    // If HTTP or using subdomain mode\n    if (OneSignal._useHttpMode) {\n      if (options.fromRegisterFor) {\n        var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;\n        var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;\n\n        var thisWidth = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n        var thisHeight = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n        var childWidth = OneSignal._windowWidth;\n        var childHeight = OneSignal._windowHeight;\n\n        var left = thisWidth / 2 - childWidth / 2 + dualScreenLeft;\n        var top = thisHeight / 2 - childHeight / 2 + dualScreenTop;\n\n        _loglevel2.default.debug('Opening popup window.');\n        var message_localization_opts_str = OneSignal._getPromptOptionsQueryString();\n        var childWindow = window.open(OneSignal._initOneSignalHttp + \"?\" + message_localization_opts_str + \"&hostPageProtocol=\" + hostPageProtocol, \"_blank\", 'scrollbars=yes, width=' + childWidth + ', height=' + childHeight + ', top=' + top + ', left=' + left);\n\n        if (childWindow) childWindow.focus();\n      } else {\n        OneSignal._addSessionIframe(hostPageProtocol);\n      }\n    } else {\n      if ((0, _utils.isSupportedSafari)()) {\n        if (OneSignal._initOptions.safari_web_id) {\n          OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id).then(function (permission) {\n            window.safari.pushNotification.requestPermission(OneSignal._API_URL + 'safari', OneSignal._initOptions.safari_web_id, { app_id: OneSignal._app_id }, function (data) {\n              _loglevel2.default.info('Safari requestPermission() callback:', data);\n              var notificationPermissionAfterRequest = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);\n              if (data.deviceToken) {\n                OneSignal._registerWithOneSignal(OneSignal._app_id, data.deviceToken.toLowerCase(), 7);\n              } else {\n                sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n              }\n              OneSignal._triggerEvent_nativePromptPermissionChanged(permission);\n            });\n          }).catch(function (e) {\n            return _loglevel2.default.error(e);\n          });\n        }\n      } else if (options.modalPrompt && options.fromRegisterFor) {\n        // If HTTPS - Show modal\n        if (!(0, _utils.isPushNotificationsSupported)()) {\n          _loglevel2.default.warn('An attempt was made to open the HTTPS modal permission prompt, but push notifications are not supported on this browser. Opening canceled.');\n          return;\n        }\n        OneSignal.isPushNotificationsEnabled(function (pushEnabled) {\n          var element = document.createElement('div');\n          element.setAttribute('id', 'OneSignal-iframe-modal');\n          element.innerHTML = '<div id=\"notif-permission\" style=\"background: rgba(0, 0, 0, 0.7); position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 3000000000; display: block\"></div>';\n          document.body.appendChild(element);\n\n          var iframeStyle = document.createElement('style');\n          iframeStyle.innerHTML = \"@media (max-width: 560px) { .OneSignal-permission-iframe { width: 100%; height: 100%;} }\" + \"@media (min-width: 561px) { .OneSignal-permission-iframe { top: 50%; left: 50%; margin-left: -275px; margin-top: -248px;} }\";\n          document.getElementsByTagName('head')[0].appendChild(iframeStyle);\n\n          var message_localization_opts_str = OneSignal._getPromptOptionsQueryString();\n\n          var iframeNode = document.createElement(\"iframe\");\n          iframeNode.className = \"OneSignal-permission-iframe\";\n          iframeNode.style.cssText = \"background: rgba(255, 255, 255, 1); position: fixed;\";\n          iframeNode.src = OneSignal._initOneSignalHttp + '?' + message_localization_opts_str + '&id=' + OneSignal._app_id + '&httpsPrompt=true' + '&pushEnabled=' + pushEnabled + '&permissionBlocked=' + (typeof Notification === \"undefined\" || Notification.permission == \"denied\") + '&hostPageProtocol=' + hostPageProtocol;\n          iframeNode.setAttribute('frameborder', '0');\n          iframeNode.width = OneSignal._windowWidth.toString();\n          iframeNode.height = OneSignal._windowHeight.toString();\n\n          _loglevel2.default.debug('Opening HTTPS modal prompt.');\n          document.getElementById(\"notif-permission\").appendChild(iframeNode);\n        });\n      } else if ('serviceWorker' in navigator) // If HTTPS - Show native prompt\n        OneSignal._registerForW3CPush(options);else _loglevel2.default.debug('Service workers are not supported in this browser.');\n\n      _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n    }\n  },\n\n  _registerForW3CPush: function _registerForW3CPush(options) {\n\n    _database2.default.get('Ids', 'registrationId').then(function _registerForW3CPush_GotRegistrationId(registrationIdResult) {\n      if (!registrationIdResult || !options.fromRegisterFor || Notification.permission != \"granted\") {\n        navigator.serviceWorker.getRegistration().then(function (serviceWorkerRegistration) {\n          var sw_path = \"\";\n\n          if (OneSignal._initOptions.path) sw_path = OneSignal._initOptions.path;\n\n          if (typeof serviceWorkerRegistration === \"undefined\") // Nothing registered, very first run\n            OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);else {\n            if (serviceWorkerRegistration.active) {\n              if (serviceWorkerRegistration.active.scriptURL.indexOf(sw_path + OneSignal.SERVICE_WORKER_PATH) > -1) {\n\n                _database2.default.get('Ids', 'WORKER1_ONE_SIGNAL_SW_VERSION').then(function (versionResult) {\n                  if (versionResult) {\n                    if (versionResult.id != OneSignal._VERSION) OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\n                  } else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\n                }).catch(function (e) {\n                  _loglevel2.default.error(e);\n                });\n              } else if (serviceWorkerRegistration.active.scriptURL.indexOf(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH) > -1) {\n\n                _database2.default.get('Ids', 'WORKER2_ONE_SIGNAL_SW_VERSION').then(function (versionResult) {\n                  if (versionResult) {\n                    if (versionResult.id != OneSignal._VERSION) OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);\n                  } else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);\n                }).catch(function (e) {\n                  _loglevel2.default.error(e);\n                });\n              }\n            } else if (serviceWorkerRegistration.installing == null) OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\n          }\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  _registerServiceWorker: function _registerServiceWorker(full_sw_and_path) {\n    navigator.serviceWorker.register(full_sw_and_path, OneSignal.SERVICE_WORKER_PARAM).then(OneSignal._enableNotifications, OneSignal._registerError);\n  },\n\n  _addSessionIframe: function _addSessionIframe(hostPageProtocol) {\n    _loglevel2.default.debug('Called %c_addSessionIframe(' + JSON.stringify(hostPageProtocol, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n\n    var node = document.createElement(\"iframe\");\n    node.style.display = \"none\";\n    node.src = OneSignal._initOneSignalHttp + \"Iframe\";\n    if (sessionStorage.getItem(\"ONE_SIGNAL_SESSION\")) node.src += \"?session=true\" + \"&hostPageProtocol=\" + hostPageProtocol;else node.src += \"?hostPageProtocol=\" + hostPageProtocol;\n    document.body.appendChild(node);\n\n    OneSignal._sessionIframeAdded = true;\n  },\n\n  _registerError: function _registerError(err) {\n    _loglevel2.default.error(\"ServiceWorker registration\", err);\n  },\n\n  _enableNotifications: function _enableNotifications(existingServiceWorkerRegistration) {\n    // is ServiceWorkerRegistration type\n    if (existingServiceWorkerRegistration) _loglevel2.default.debug('An older ServiceWorker exists:', existingServiceWorkerRegistration);\n    if (!('PushManager' in window)) {\n      _loglevel2.default.error(\"Push messaging is not supported. No PushManager.\");\n      sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n      return;\n    }\n\n    if (!('showNotification' in ServiceWorkerRegistration.prototype)) {\n      _loglevel2.default.error(\"Notifications are not supported. showNotification not available in ServiceWorkerRegistration.\");\n      sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n      return;\n    }\n\n    if (Notification.permission === 'denied') {\n      _loglevel2.default.warn(\"The user has blocked notifications.\");\n      return;\n    }\n\n    navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {\n      _loglevel2.default.info('Service worker now active:', serviceWorkerRegistration);\n      OneSignal._subscribeForPush(serviceWorkerRegistration);\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  /*\n   Returns the current browser-agnostic notification permission as \"default\", \"granted\", \"denied\".\n   safariWebId: Used only to get the current notification permission state in Safari (required as part of the spec).\n   */\n  _getNotificationPermission: function _getNotificationPermission(safariWebId) {\n    /*\n     For the following conditions, get directly and return:\n     - Safari, because the permission property is not scoped by origin\n     - HTTPS without a subdomain, because the permission is then accessed directly\n      Otherwise use a postmessage for:\n     - HTTP, this one is obvious\n     - HTTPS with a subdomain, when someone wants to consolidate multiple HTTPS sites under a subdomain\n     */\n    return new Promise(function (resolve, reject) {\n      var isHttpsProtocol = location.protocol === 'https:';\n      var noSubdomain = !OneSignal._useHttpMode;\n      if (Browser.safari || isHttpsProtocol && noSubdomain) {\n        if (window.safari) {\n          // The user is on Safari\n          // A web ID is required to determine the current notificiation permission\n          if (safariWebId) {\n            resolve(window.safari.pushNotification.permission(safariWebId).permission);\n          } else {\n            // The user didn't set up Safari web push properly; notifications are unlikely to be enabled\n            resolve(\"default\");\n          }\n        } else {\n          // Identical API on Firefox and Chrome\n          resolve(Notification.permission);\n        }\n      } else {\n        var uid = (0, _utils.guid)();\n        _limitStore2.default.put('_getNotificationPermissionPromiseResolve.' + uid, resolve);\n        if (OneSignal._iframePort) {\n          OneSignal._iframePort.postMessage({ remoteGetNotificationPermission: true, safariWebId: safariWebId, promiseId: uid, from: _environment2.default.getEnv() });\n          // This promise will eventually be resolved by _listener_receiveMessage\n        } else {\n            // This entire function was called before an iFrame port is even available\n            resolve(\"default\");\n          }\n      }\n    });\n  },\n\n  _triggerEvent_customPromptClicked: function _triggerEvent_customPromptClicked(clickResult) {\n    var recentPermissions = _limitStore2.default.put('prompt.custom.permission', clickResult);\n    _events2.default.trigger(OneSignal.EVENTS.CUSTOM_PROMPT_CLICKED, {\n      result: clickResult\n    });\n  },\n\n  _triggerEvent_nativePromptPermissionChanged: function _triggerEvent_nativePromptPermissionChanged(from, to) {\n    var updateIfIdentical = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n    if (to === undefined) {\n      var promise = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id).then(function (permission) {\n        to = permission;\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      });\n    } else {\n      var promise = Promise.resolve();\n    }\n    promise.then(function () {\n      if (from !== to || updateIfIdentical) {\n        var recentPermissions = _limitStore2.default.put('notification.permission', to);\n        _events2.default.trigger(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, {\n          from: from,\n          to: to\n        });\n      }\n    });\n  },\n\n  _triggerEvent_subscriptionChanged: function _triggerEvent_subscriptionChanged(to) {\n    _events2.default.trigger(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, to);\n  },\n\n  _triggerEvent_dbValueRetrieved: function _triggerEvent_dbValueRetrieved(value) {\n    _events2.default.trigger(_database2.default.EVENTS.RETRIEVED, value);\n  },\n\n  _triggerEvent_dbValueSet: function _triggerEvent_dbValueSet(value) {\n    _events2.default.trigger(_database2.default.EVENTS.SET, value);\n  },\n\n  _triggerEvent_internalSubscriptionSet: function _triggerEvent_internalSubscriptionSet(value) {\n    _events2.default.trigger(OneSignal.EVENTS.INTERNAL_SUBSCRIPTIONSET, value);\n  },\n\n  _subscribeForPush: function _subscribeForPush(serviceWorkerRegistration) {\n    var notificationPermissionBeforeRequest = '';\n\n    OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id).then(function (permission) {\n      notificationPermissionBeforeRequest = permission;\n    }).then(function () {\n      return serviceWorkerRegistration.pushManager.subscribe({ userVisibleOnly: true });\n    }).then(function (subscription) {\n      sessionStorage.setItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\", Notification.permission);\n\n      _database2.default.get('Ids', 'appId').then(function _subscribeForPush_GotAppId(appIdResult) {\n        var appId = appIdResult.id;\n        _loglevel2.default.debug(\"Called OneSignal._subscribeForPush() -> serviceWorkerRegistration.pushManager.subscribe().\");\n\n        var registrationId = null;\n        if (subscription) {\n          if (typeof subscription.subscriptionId != \"undefined\") // Chrome 43 & 42\n            registrationId = subscription.subscriptionId;else // Chrome 44+ and FireFox\n            registrationId = subscription.endpoint.replace(new RegExp(\"^(https://android.googleapis.com/gcm/send/|https://updates.push.services.mozilla.com/push/)\"), \"\");\n        } else _loglevel2.default.warn('Could not subscribe your browser for push notifications.');\n\n        OneSignal._registerWithOneSignal(appId, registrationId, (0, _utils.isSupportedFireFox)() ? 8 : 5);\n\n        if (!OneSignal._usingNativePermissionHook) {\n          OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest);\n        }\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    }).catch(function (e) {\n      _loglevel2.default.error('Error while subscribing for push:', e);\n\n      // New addition (12/22/2015), adding support for detecting the cancel 'X'\n      // Chrome doesn't show when the user clicked 'X' for cancel\n      // We get the same error as if the user had clicked denied, but we can check Notification.permission to see if it is still 'default'\n      OneSignal._getNotificationPermission().then(function (permission) {\n        if (permission === 'default') {\n          // The user clicked 'X'\n          OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest, permission, true);\n        }\n\n        if (!OneSignal._usingNativePermissionHook) OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest, permission);\n\n        if (e.code == 20 && opener && OneSignal._httpRegistration) window.close();\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      });\n    });\n  },\n\n  sendTag: function sendTag(key, value) {\n    var jsonKeyValue = {};\n    jsonKeyValue[key] = value;\n    OneSignal.sendTags(jsonKeyValue);\n  },\n\n  sendTags: function sendTags(jsonPair) {\n    _database2.default.get('Ids', 'userId').then(function sendTags_GotUserId(userIdResult) {\n      if (userIdResult) OneSignal._sendToOneSignalApi(\"players/\" + userIdResult.id, \"PUT\", {\n        app_id: OneSignal._app_id,\n        tags: jsonPair\n      });else {\n        if (OneSignal._tagsToSendOnRegister == null) OneSignal._tagsToSendOnRegister = jsonPair;else {\n          var resultObj = {};\n          for (var _obj in OneSignal._tagsToSendOnRegister) {\n            resultObj[_obj] = OneSignal._tagsToSendOnRegister[_obj];\n          }for (var _obj in jsonPair) {\n            resultObj[_obj] = jsonPair[_obj];\n          }OneSignal._tagsToSendOnRegister = resultObj;\n        }\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error('sendTags:', e);\n    });\n  },\n\n  deleteTag: function deleteTag(key) {\n    OneSignal.deleteTags([key]);\n  },\n\n  deleteTags: function deleteTags(keyArray) {\n    var jsonPair = {};\n    var length = keyArray.length;\n    for (var i = 0; i < length; i++) {\n      jsonPair[keyArray[i]] = \"\";\n    }OneSignal.sendTags(jsonPair);\n  },\n\n  _handleNotificationOpened: function _handleNotificationOpened(event) {\n    var notificationData = JSON.parse(event.notification.tag);\n    event.notification.close();\n\n    Promise.all([_database2.default.get('Ids', 'appId'), _database2.default.get('Ids', 'userId')]).then(function _handleNotificationOpened_GotAppUserIds(results) {\n      var appIdResult = results[0];\n      var userIdResult = results[1];\n      if (appIdResult && userIdResult) {\n        OneSignal._sendToOneSignalApi(\"notifications/\" + notificationData.id, \"PUT\", {\n          app_id: appIdResult.id,\n          player_id: userIdResult.id,\n          opened: true\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n\n    event.waitUntil(clients.matchAll({ type: \"window\" }).then(function (clientList) {\n      var launchURL = registration.scope;\n      if (OneSignal._defaultLaunchURL) launchURL = OneSignal._defaultLaunchURL;\n      if (notificationData.launchURL) launchURL = notificationData.launchURL;\n\n      for (var i = 0; i < clientList.length; i++) {\n        var client = clientList[i];\n        if ('focus' in client && client.url == launchURL) {\n          client.focus();\n\n          // targetOrigin not valid here as the service worker owns the page.\n          client.postMessage(notificationData);\n          return;\n        }\n      }\n\n      if (launchURL !== 'javascript:void(0);' && launchURL !== 'do_not_open') {\n        _database2.default.put(\"NotificationOpened\", { url: launchURL, data: notificationData });\n        clients.openWindow(launchURL).catch(function (error) {\n          // Should only fall into here if going to an external URL on Chrome older than 43.\n          clients.openWindow(registration.scope + \"redirector.html?url=\" + launchURL);\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    }));\n  },\n\n  // HTTP & HTTPS - Runs on main page (receives events from iframe / popup)\n  _listener_receiveMessage: function receiveMessage(event) {\n    if (event.data.from) {\n      var from = event.data.from.capitalize();\n    } else {\n      var from = 'IFrame/Popup';\n    }\n    _loglevel2.default.debug('%c' + _environment2.default.getEnv().capitalize() + ' ⬸ ' + from + ':', (0, _utils.getConsoleStyle)('postmessage'), event.data);\n\n    if (OneSignal._initOptions == undefined) return;\n\n    if (false) return;\n\n    if (event.data.oneSignalInitPageReady) {\n      // Only called on HTTP pages.\n      var eventData = event.data.oneSignalInitPageReady;\n\n      if (eventData.isIframe) {\n        OneSignal._iframePort = event.ports[0];\n      }\n\n      if (eventData.userId) _database2.default.put(\"Ids\", { type: \"userId\", id: eventData.userId });\n      if (eventData.registrationId) _database2.default.put(\"Ids\", { type: \"registrationId\", id: eventData.registrationId });\n\n      OneSignal._fireNotificationEnabledCallback(eventData.isPushEnabled);\n      OneSignal._sendUnsentTags();\n\n      _database2.default.get(\"Options\").then(function _listener_receiveMessage(options) {\n        if (!options.defaultUrl) options.defaultUrl = document.URL;\n        if (!options.defaultTitle) options.defaultTitle = document.title;\n\n        options.parent_url = document.URL;\n        event.ports[0].postMessage({ initOptions: options, from: _environment2.default.getEnv() });\n\n        // For HTTP sites, only now is the SDK initialized and able to communicate with the iframe\n        _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n      }).catch(function (e) {\n        _loglevel2.default.error('_listener_receiveMessage:', e);\n      });\n    } else if (event.data.currentNotificationPermission) {\n      // Subdomain Only\n      OneSignal._fireNotificationEnabledCallback(event.data.currentNotificationPermission.isPushEnabled);\n    } else if (event.data.remoteGetDbValue) {\n      var promiseId = event.data.promiseId;\n      var result = event.data.result;\n      var promiseResolve = _limitStore2.default.getLast('getSubscriptionPromiseResolve.' + promiseId);\n      if (!promiseResolve) {\n        _loglevel2.default.warn('When getSubscription() was previously called, no Promise was stored to be called back now.');\n      } else {\n        _limitStore2.default.remove('getSubscriptionPromiseResolve.' + promiseId);\n        promiseResolve(result);\n      }\n    } else if (event.data.remoteGetNotificationPermissionResponse) {\n      var permission = event.data.remoteGetNotificationPermissionResponse;\n      var promiseId = event.data.promiseId;\n      var promiseResolve = _limitStore2.default.getLast('_getNotificationPermissionPromiseResolve.' + promiseId);\n      if (!promiseResolve) {\n        _loglevel2.default.warn('When _getNotificationPermission() was previously called, no Promise was stored to be called back now.');\n      } else {\n        _limitStore2.default.remove('_getNotificationPermissionPromiseResolve.' + promiseId);\n        promiseResolve(permission);\n      }\n    } else if (event.data.setSubscriptionComplete) {\n      // Subdomain to Host page notifying setSubscription(trueOrFalse) is complete\n      var promiseId = event.data.promiseId;\n      var promiseResolve = _limitStore2.default.getLast('setSubscriptionPromiseResolve.' + promiseId);\n      if (!promiseResolve) {\n        _loglevel2.default.warn('When setSubscription() was previously called, no Promise was stored to be called back now.');\n      } else {\n        _limitStore2.default.remove('setSubscriptionPromiseResolve.' + promiseId);\n        promiseResolve();\n      }\n    } else if (event.data.remoteEvent) {\n      // Subdomain to Host page notifying setSubscription(trueOrFalse) is complete\n      var name = event.data.remoteEvent;\n      var data = event.data.remoteEventData;\n      var remoteTriggerEnv = event.data.from;\n      if (!name || data === undefined) {\n        _loglevel2.default.warn('Received an event back from postMessage, but it was undefined!');\n      } else {\n        _events2.default.trigger(name, data, remoteTriggerEnv);\n      }\n    } else if (event.data.idsAvailable) {\n      // Only called on HTTP pages.\n      sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n      _database2.default.put(\"Ids\", { type: \"userId\", id: event.data.idsAvailable.userId });\n      _database2.default.put(\"Ids\", { type: \"registrationId\", id: event.data.idsAvailable.registrationId });\n\n      if (OneSignal._idsAvailable_callback.length > 0) {\n        while (OneSignal._idsAvailable_callback.length > 0) {\n          var curr_callback = OneSignal._idsAvailable_callback.pop();\n          curr_callback({\n            userId: event.data.idsAvailable.userId,\n            registrationId: event.data.idsAvailable.registrationId\n          });\n        }\n      }\n      OneSignal._sendUnsentTags();\n    } else if (event.data.httpsPromptAccepted) {\n      // HTTPS Only\n      OneSignal.registerForPushNotifications();\n      OneSignal.setSubscription(true);\n      var elem = document.getElementById('OneSignal-iframe-modal');\n      elem.parentNode.removeChild(elem);\n      OneSignal._triggerEvent_customPromptClicked('granted');\n    } else if (event.data.httpsPromptCanceled) {\n      // HTTPS Only\n      var elem = document.getElementById('OneSignal-iframe-modal');\n      elem.parentNode.removeChild(elem);\n      OneSignal._triggerEvent_customPromptClicked('denied');\n    } else if (event.data.httpPromptAccepted) {\n      // HTTP Only\n      OneSignal._triggerEvent_customPromptClicked('granted');\n    } else if (event.data.httpPromptCanceled) {\n      // HTTP Only\n      OneSignal._triggerEvent_customPromptClicked('denied');\n    } else if (event.data.httpNativePromptPermissionChanged) {\n      var recentPermissions = _limitStore2.default.get('notification.permission');\n      var permissionBeforePrompt = recentPermissions[0];\n      OneSignal._triggerEvent_nativePromptPermissionChanged(permissionBeforePrompt, event.data.httpNativePromptPermissionChanged);\n    } else if (OneSignal._notificationOpened_callback) {\n      // HTTP and HTTPS\n      while (OneSignal._notificationOpened_callback.length > 0) {\n        var callback = OneSignal._notificationOpened_callback.pop();\n        callback(event.data);\n      }\n    }\n  },\n\n  addListenerForNotificationOpened: function addListenerForNotificationOpened(callback) {\n    OneSignal._notificationOpened_callback.push(callback);\n    if (_environment2.default.isBrowser()) {\n      _database2.default.get(\"NotificationOpened\", document.URL).then(function (notificationOpenedResult) {\n        if (notificationOpenedResult) {\n          _database2.default.remove(\"NotificationOpened\", document.URL);\n          while (OneSignal._notificationOpened_callback.length > 0) {\n            var _callback = OneSignal._notificationOpened_callback.pop();\n            _callback(notificationOpenedResult.data);\n          }\n        }\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n      ;\n    }\n  },\n\n  // Subdomain - Fired from message received from iframe.\n  _fireNotificationEnabledCallback: function _fireNotificationEnabledCallback(newNotificationPermission) {\n    if (OneSignal._isNotificationEnabledCallback) {\n      while (OneSignal._isNotificationEnabledCallback.length > 0) {\n        var callback = OneSignal._isNotificationEnabledCallback.pop();\n        callback(newNotificationPermission);\n      }\n    }\n  },\n\n  getIdsAvailable: function getIdsAvailable(callback) {\n    if (callback === undefined) return;\n\n    OneSignal._idsAvailable_callback.push(callback);\n\n    Promise.all([_database2.default.get('Ids', 'userId'), _database2.default.get('Ids', 'registrationId')]).then(function getIdsAvailable_GotUserRegistrationIds(results) {\n      var userIdResult = results[0];\n      var registrationIdResult = results[1];\n\n      if (userIdResult) {\n        if (registrationIdResult) {\n          while (OneSignal._idsAvailable_callback.length > 0) {\n            var curr_callback = OneSignal._idsAvailable_callback.pop();\n            curr_callback({\n              userId: userIdResult.id,\n              registrationId: registrationIdResult.id\n            });\n          }\n        } else while (OneSignal._idsAvailable_callback.length > 0) {\n          var curr_callback = OneSignal._idsAvailable_callback.pop();\n          curr_callback({ userId: userIdResult.id, registrationId: null });\n        }\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  getTags: function getTags(callback) {\n    _database2.default.get('Ids', 'userId').then(function (userIdResult) {\n      if (userIdResult) {\n        OneSignal._sendToOneSignalApi(\"players/\" + userIdResult.id, 'GET', null, function (response) {\n          callback(response.tags);\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  isPushNotificationsEnabled: function isPushNotificationsEnabled(callback) {\n    if (!(0, _utils.isPushNotificationsSupported)()) {\n      _loglevel2.default.warn(\"Your browser does not support push notifications.\");\n      return;\n    }\n\n    // If Subdomain\n    if (OneSignal._initOptions.subdomainName && !(0, _utils.isBrowserSafari)()) {\n      OneSignal._isNotificationEnabledCallback.push(callback);\n      if (OneSignal._iframePort) {\n        OneSignal._iframePort.postMessage({ getNotificationPermission: true, from: _environment2.default.getEnv() });\n      }\n      return;\n    }\n\n    // If HTTPS\n\n    Promise.all([_database2.default.get('Ids', 'registrationId'), _database2.default.get('Options', 'subscription')]).then(function (results) {\n      var registrationIdResult = results[0];\n      var subscriptionResult = results[1];\n\n      if (registrationIdResult) {\n        if (subscriptionResult && !subscriptionResult.value) return callback(false);\n\n        callback(Notification.permission == \"granted\");\n      } else callback(false);\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n  },\n\n  _getNotificationTypes: function _getNotificationTypes(callback) {\n    return new Promise(function (resolve, reject) {\n      OneSignal._getSubscription().then(function (currentSubscription) {\n        var notificationType = currentSubscription ? 1 : -2;\n        resolve(notificationType);\n        callback(notificationType);\n      });\n    });\n  },\n\n  setSubscription: function setSubscription(newSubscription) {\n    return new Promise(function (resolve, reject) {\n      if (OneSignal._iframePort) {\n        var uid = (0, _utils.guid)();\n        _limitStore2.default.put('setSubscriptionPromiseResolve.' + uid, resolve);\n        OneSignal._iframePort.postMessage({ setSubdomainState: { setSubscription: newSubscription }, promiseId: uid, from: _environment2.default.getEnv() });\n        // This promise will eventually be resolved when the iFrame replies with setSubscriptionComplete\n      } else {\n          OneSignal._getSubscription().then(function (currentSubscription) {\n            if (currentSubscription != newSubscription) {\n              return _database2.default.put(\"Options\", { key: \"subscription\", value: newSubscription });\n            } else {\n              _loglevel2.default.debug('Called %csetSubscription(' + newSubscription + ')', (0, _utils.getConsoleStyle)('code'), 'but there was no change, so skipping call.');\n              resolve();\n            }\n          }).then(function () {\n            return _database2.default.get('Ids', 'userId');\n          }).then(function (userIdResult) {\n            if (userIdResult) {\n              return (0, _api.apiCall)(\"players/\" + userIdResult.id, \"PUT\", {\n                app_id: OneSignal._app_id,\n                notification_types: newSubscription ? 1 : -2\n              });\n            } else {\n              _loglevel2.default.warn('Called %csetSubscription(' + newSubscription + ')', (0, _utils.getConsoleStyle)('code'), 'but there was no user ID, so the result was not forwarded to OneSignal.');\n              return Promise.reject('No user ID.');\n            }\n          }).then(function () {\n            OneSignal._triggerEvent_internalSubscriptionSet(newSubscription);\n            resolve();\n          }).catch(function (e) {\n            if (e.constructor.name === 'Error') {\n              _loglevel2.default.error(e);\n              reject(e);\n            } else {\n              resolve(e);\n            }\n          });\n        }\n    });\n  },\n\n  /**\n   * Returns a promise that resolves to false if setSubscription(false) has been explicitly called at any point in time. Otherwise returns true.\n   * This means a return value of true does not mean the user is subscribed, only that the user did not call setSubcription(false).\n   * @private\n   * @returns {Promise}\n   */\n  _getSubscription: function _getSubscription() {\n    return new Promise(function (resolve, reject) {\n      _loglevel2.default.debug('Called %c_getSubscription()', (0, _utils.getConsoleStyle)('code'), '(from ' + _environment2.default.getEnv() + ')');\n      var promise;\n      if (OneSignal._iframePort) {\n        (function () {\n          var uid = (0, _utils.guid)();\n          promise = new Promise(function (resolve, reject) {\n            _limitStore2.default.put('getSubscriptionPromiseResolve.' + uid, resolve);\n            OneSignal._iframePort.postMessage({ remoteGetDbValue: true, table: 'Options', key: 'subscription', promiseId: uid, from: _environment2.default.getEnv() });\n            // This promise will eventually be resolved when the iFrame replies with remoteGetDbValue\n          });\n        })();\n      } else {\n          promise = _database2.default.get('Options', 'subscription');\n        }\n      promise.then(function (subscriptionResult) {\n        resolve(!(subscriptionResult && subscriptionResult.value == false));\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n        reject(e);\n      });\n    });\n  },\n\n  _safePostMessage: function _safePostMessage(creator, data, targetOrigin, receiver) {\n    var tOrigin = targetOrigin.toLowerCase();\n\n    // If we are trying to target a http site allow the https version. (w/ or w/o 'wwww.' too)\n    if (tOrigin.startsWith(\"http://\")) {\n      var queryDict = {};\n      location.search.substr(1).split(\"&\").forEach(function (item) {\n        queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1];\n      });\n      var validPreURLRegex = /^http(s|):\\/\\/(www\\.|)/;\n      tOrigin = tOrigin.replace(validPreURLRegex, queryDict[\"hostPageProtocol\"]);\n    }\n\n    if (!data.from) {\n      data['from'] = _environment2.default.getEnv();\n    }\n\n    if (receiver) creator.postMessage(data, tOrigin, receiver);else creator.postMessage(data, tOrigin);\n  },\n\n  _process_pushes: function _process_pushes(array) {\n    for (var i = 0; i < array.length; i++) {\n      OneSignal.push(array[i]);\n    }\n  },\n\n  push: function push(item) {\n    if (typeof item == \"function\") item();else {\n      var functionName = item.shift();\n      OneSignal[functionName].apply(null, item);\n    }\n  }\n};\n\nObject.defineProperty(OneSignal, 'LOGGING', {\n  get: function get() {\n    if (!OneSignal._LOGGING) {\n      OneSignal._LOGGING = false;\n    }\n    return OneSignal._LOGGING;\n  },\n  set: function set(logLevel) {\n    if (logLevel) {\n      _loglevel2.default.setDefaultLevel(_loglevel2.default.levels.TRACE);\n      OneSignal._LOGGING = true;\n    } else {\n      _loglevel2.default.setDefaultLevel(_loglevel2.default.levels.ERROR);\n      OneSignal._LOGGING = false;\n    }\n  },\n  enumerable: true,\n  configurable: true\n});\n\n// If imported on your page.\nif (_environment2.default.isBrowser()) {\n  window.addEventListener(\"message\", OneSignal._listener_receiveMessage, false);\n} else {// if imported from the service worker.\n\n}\n\nif (OneSignal.LOGGING) _loglevel2.default.setDefaultLevel(_loglevel2.default.levels.TRACE);else _loglevel2.default.setDefaultLevel(_loglevel2.default.levels.ERROR);\n\n_loglevel2.default.info('%cOneSignal Web SDK loaded (version ' + OneSignal._VERSION + ', ' + _environment2.default.getEnv() + ' environment).', (0, _utils.getConsoleStyle)('bold'));\n\nmodule.exports = OneSignal;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2RrLmpzPzZjMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQVNZLE9BQU87Ozs7Ozs7O0FBSW5CLElBQUksU0FBUyxHQUFHO0FBQ2QsVUFBUSxFQUFFLFVBQVc7QUFDckIsVUFBUSxRQWZvQyxPQWUzQjtBQUNqQixTQUFPLEVBQUUsSUFBSTtBQUNiLHVCQUFxQixFQUFFLElBQUk7QUFDM0IsOEJBQTRCLEVBQUUsRUFBRTtBQUNoQyx3QkFBc0IsRUFBRSxFQUFFO0FBQzFCLG1CQUFpQixFQUFFLElBQUk7QUFDdkIsY0FBWSxFQUFFLElBQUk7QUFDbEIsbUJBQWlCLEVBQUUsS0FBSztBQUN4QixpQkFBZSxFQUFFLElBQUk7QUFDckIsZ0NBQThCLEVBQUUsRUFBRTtBQUNsQyxrQkFBZ0IsRUFBRSxJQUFJO0FBQ3RCLG9CQUFrQixFQUFFLElBQUk7QUFDeEIscUJBQW1CLEVBQUUsS0FBSztBQUMxQixjQUFZLEVBQUUsSUFBSTtBQUNsQixjQUFZLEVBQUUsR0FBRztBQUNqQixlQUFhLEVBQUUsR0FBRztBQUNsQix1QkFBcUIsRUFBRSxLQUFLO0FBQzVCLGVBQWEsRUFBRSxLQUFLO0FBQ3BCLGFBQVcsRUFBRSxLQUFLO0FBQ2xCLGNBQVksRUFBRSxJQUFJO0FBQ2xCLE9BQUssc0JBQVk7QUFDakIsYUFBVyx1QkFBYTtBQUN4QixVQUFRLG9CQUFVO0FBQ2xCLE9BQUssa0JBQU87QUFDWixTQUFPLEVBQUUsT0FBTztBQUNoQixLQUFHLG9CQUFLO0FBQ1IsNkJBQTJCLEVBQUUsOEJBQThCO0FBQzNELHFCQUFtQixFQUFFLHVCQUF1QjtBQUM1QyxzQkFBb0IsRUFBRSxFQUFFOzs7QUFHeEIsUUFBTSxFQUFFO0FBQ04seUJBQXFCLEVBQUUsaUNBQWlDO0FBQ3hELG1DQUErQixFQUFFLDJDQUEyQztBQUM1RSx3QkFBb0IsRUFBRSxnQ0FBZ0M7QUFDdEQsNkJBQXlCLEVBQUUs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QyxDQUFDO0FBQ3RDLGVBQVMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0tBQzNCLE1BQ0k7QUFDSCx5QkFBSSxlQUFlLENBQUMsbUJBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3RDLGVBQVMsQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO0tBQzVCO0dBQ0Y7QUFDRCxZQUFVLEVBQUUsSUFBSTtBQUNoQixjQUFZLEVBQUUsSUFBSTtDQUNuQixDQUFDOzs7QUFHRixJQUFJLHNCQUFZLFNBQVMsRUFBRSxFQUFFO0FBQzNCLFFBQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLHdCQUF3QixFQUFFLEtBQUssQ0FBQyxDQUFDO0NBQy9FLE1BQ0k7O0NBRUo7O0FBRUQsSUFBSSxTQUFTLENBQUMsT0FBTyxFQUNuQixtQkFBSSxlQUFlLENBQUMsbUJBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBRXRDLG1CQUFJLGVBQWUsQ0FBQyxtQkFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRXhDLG1CQUFJLElBQUksMENBQXdDLFNBQVMsQ0FBQyxRQUFRLFVBQUssc0JBQVksTUFBTSxFQUFFLHFCQUFrQixXQXpsRHVCLGVBQWUsRUF5bER0QixNQUFNLENBQUMsQ0FBQyxDQUFDOztBQUV0SSxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsQyIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgREVWX0hPU1QsIERFVl9GUkFNRV9IT1NULCBQUk9EX0hPU1QsIEFQSV9VUkwgfSBmcm9tICcuL3ZhcnMuanMnO1xuaW1wb3J0IEVudmlyb25tZW50IGZyb20gJy4vZW52aXJvbm1lbnQuanMnXG5pbXBvcnQgJy4vc3RyaW5nLmpzJ1xuaW1wb3J0IHsgYXBpQ2FsbCwgc2VuZE5vdGlmaWNhdGlvbiB9IGZyb20gJy4vYXBpLmpzJztcbmltcG9ydCBsb2cgZnJvbSAnbG9nbGV2ZWwnO1xuaW1wb3J0IExpbWl0U3RvcmUgZnJvbSAnLi9saW1pdFN0b3JlLmpzJztcbmltcG9ydCBFdmVudCBmcm9tIFwiLi9ldmVudHMuanNcIjtcbmltcG9ydCBCZWxsIGZyb20gXCIuL2JlbGwvYmVsbC5qc1wiO1xuaW1wb3J0IERhdGFiYXNlIGZyb20gJy4vZGF0YWJhc2UuanMnO1xuaW1wb3J0ICogYXMgQnJvd3NlciBmcm9tICdib3dzZXInO1xuaW1wb3J0IHsgaXNQdXNoTm90aWZpY2F0aW9uc1N1cHBvcnRlZCwgaXNCcm93c2VyU2FmYXJpLCBpc1N1cHBvcnRlZEZpcmVGb3gsIGlzQnJvd3NlckZpcmVmb3gsIGdldEZpcmVmb3hWZXJzaW9uLCBpc1N1cHBvcnRlZFNhZmFyaSwgZ2V0Q29uc29sZVN0eWxlLCBvbmNlLCBndWlkIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cblxudmFyIE9uZVNpZ25hbCA9IHtcbiAgX1ZFUlNJT046IF9fVkVSU0lPTl9fLFxuICBfQVBJX1VSTDogQVBJX1VSTCxcbiAgX2FwcF9pZDogbnVsbCxcbiAgX3RhZ3NUb1NlbmRPblJlZ2lzdGVyOiBudWxsLFxuICBfbm90aWZpY2F0aW9uT3BlbmVkX2NhbGxiYWNrOiBbXSxcbiAgX2lkc0F2YWlsYWJsZV9jYWxsYmFjazogW10sXG4gIF9kZWZhdWx0TGF1bmNoVVJMOiBudWxsLFxuICBfaW5pdE9wdGlvbnM6IG51bGwsXG4gIF9odHRwUmVnaXN0cmF0aW9uOiBmYWxzZSxcbiAgX21haW5fcGFnZV9wb3J0OiBudWxsLFxuICBfaXNOb3RpZmljYXRpb25FbmFibGVkQ2FsbGJhY2s6IFtdLFxuICBfc3Vic2NyaXB0aW9uU2V0OiB0cnVlLFxuICBfaW5pdE9uZVNpZ25hbEh0dHA6IG51bGwsXG4gIF9zZXNzaW9uSWZyYW1lQWRkZWQ6IGZhbHNlLFxuICBfdXNlSHR0cE1vZGU6IG51bGwsXG4gIF93aW5kb3dXaWR0aDogNTUwLFxuICBfd2luZG93SGVpZ2h0OiA0ODAsXG4gIF9pc1VuaW5pdGlhdGVkVmlzaXRvcjogZmFsc2UsXG4gIF9pc05ld1Zpc2l0b3I6IGZhbHNlLFxuICBpbml0aWFsaXplZDogZmFsc2UsXG4gIG5vdGlmeUJ1dHRvbjogbnVsbCxcbiAgc3RvcmU6IExpbWl0U3RvcmUsXG4gIGVudmlyb25tZW50OiBFbnZpcm9ubWVudCxcbiAgZGF0YWJhc2U6IERhdGFiYXNlLFxuICBldmVudDogRXZlbnQsXG4gIGJyb3dzZXI6IEJyb3dzZXIsXG4gIGxvZzogbG9nLFxuICBTRVJWSUNFX1dPUktFUl9VUERBVEVSX1BBVEg6IFwiT25lU2lnbmFsU0RLVXBkYXRlcldvcmtlci5qc1wiLFxuICBTRVJWSUNFX1dPUktFUl9QQVRIOiBcIk9uZVNpZ25hbFNES1dvcmtlci5qc1wiLFxuICBTRVJWSUNFX1dPUktFUl9QQVJBTToge30sXG5cbiAgLyogRXZlbnQgRGVmaW5pdGlvbnMgKi9cbiAgRVZFTlRTOiB7XG4gICAgQ1VTVE9NX1BST01QVF9DTElDS0VEOiAnb25lc2lnbmFsLnByb21wdC5jdXN0b20uY2xpY2tlZCcsXG4gICAgTkFUSVZFX1BST01QVF9QRVJNSVNTSU9OQ0hBTkdFRDogJ29uZXNpZ25hbC5wcm9tcHQubmF0aXZlLnBlcm1pc3Npb25jaGFuZ2VkJyxcbiAgICBTVUJTQ1JJUFRJT05fQ0hBTkdFRDogJ29uZXNpZ25hbC5zdWJzY3JpcHRpb24uY2hhbmdlZCcsXG4gICAgV0VMQ09NRV9OT1RJRklDQVRJT05fU0VOVDogJ29uZXNpZ25hbC5hY3Rpb25zLndlbGNvbWVub3RpZmljYXRpb25zZW50JyxcbiAgICBJTlRFUk5BTF9TVUJTQ1JJUFRJT05TRVQ6ICdvbmVzaWduYWwuaW50ZXJuYWwuc3Vic2NyaXB0aW9uc2V0JyxcbiAgICBTREtfSU5JVElBTElaRUQ6ICdvbmVzaWduYWwuc2RrLmluaXRpYWxpemVkJ1xuICB9LFxuXG4gIF9zZW5kVG9PbmVTaWduYWxBcGk6IGZ1bmN0aW9uICh1cmwsIGFjdGlvbiwgaW5EYXRhLCBjYWxsYmFjaywgZmFpbGVkQ2FsbGJhY2spIHtcbiAgICBsb2cuZGVidWcoYENhbGxpbmcgJHthY3Rpb259ICR7T25lU2lnbmFsLl9BUElfVVJMICsgdXJsfSB3aXRoIGRhdGE6YCwgaW5EYXRhKTtcbiAgICB2YXIgY29udGVudHMgPSB7XG4gICAgICBtZXRob2Q6IGFjdGlvbixcbiAgICAgIC8vbW9kZTogJ25vLWNvcnMnLCAvLyBuby1jb3JzIGlzIGRpc2FibGVkIGZvciBub24tc2VydmljZXdvcmtlci5cbiAgICB9O1xuXG4gICAgaWYgKGluRGF0YSkge1xuICAgICAgY29udGVudHMuaGVhZGVycyA9IHtcIkNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOFwifTtcbiAgICAgIGNvbnRlbnRzLmJvZHkgPSBKU09OLnN0cmluZ2lmeShpbkRhdGEpO1xuICAgIH1cblxuICAgIGZldGNoKE9uZVNpZ25hbC5fQVBJX1VSTCArIHVybCwgY29udGVudHMpXG4gICAgICAudGhlbihmdW5jdGlvbiBzdGF0dXMocmVzcG9uc2UpIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA+PSAyMDAgJiYgcmVzcG9uc2Uuc3RhdHVzIDwgMzAwKVxuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXNUZXh0KSk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24gc3RhdHVzKHJlc3BvbnNlKSB7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24gKGpzb25EYXRhKSB7XG4gICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKVxuICAgICAgICAgIGNhbGxiYWNrKGpzb25EYXRhKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbG9nLmVycm9yKCdPbmVTaWduYWwuX3NlbmRUb09uZVNpZ25hbEFwaSgpIGZhaWxlZDonLCBlKTtcbiAgICAgICAgaWYgKGZhaWxlZENhbGxiYWNrICE9IG51bGwpXG4gICAgICAgICAgZmFpbGVkQ2FsbGJhY2soKTtcbiAgICAgIH0pO1xuICB9LFxuXG4gIF9nZXRMYW5ndWFnZTogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuYXZpZ2F0b3IubGFuZ3VhZ2UgPyAobmF2aWdhdG9yLmxhbmd1YWdlLmxlbmd0aCA+IDMgPyBuYXZpZ2F0b3IubGFuZ3VhZ2Uuc3Vic3RyaW5nKDAsIDIpIDogbmF2aWdhdG9yLmxhbmd1YWdlKSA6ICdlbic7XG4gIH0sXG5cbiAgX2dldFBsYXllcklkOiBmdW5jdGlvbiAodmFsdWUsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHZhbHVlKVxuICAgICAgY2FsbGJhY2sodmFsdWUpXG4gICAgZWxzZSB7XG4gICAgICBEYXRhYmFzZS5nZXQoJ0lkcycsICd1c2VySWQnKVxuICAgICAgICAudGhlbihmdW5jdGlvbiBfZ2V0UGxheWVySWRfZ290VXNlcklkKHJlc3VsdCkge1xuICAgICAgICAgIGlmIChyZXN1bHQpXG4gICAgICAgICAgICBjYWxsYmFjayhyZXN1bHQuaWQpO1xuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBsb2cuZXJyb3IoZSk7XG4gICAgICAgIH0pO1xuICAgICAgO1xuICAgIH1cbiAgfSxcblxuICBfcmVnaXN0ZXJXaXRoT25lU2lnbmFsOiBmdW5jdGlvbiAoYXBwSWQsIHJlZ2lzdHJhdGlvbklkLCBkZXZpY2VUeXBlKSB7XG5cbiAgICBEYXRhYmFzZS5nZXQoJ0lkcycsICd1c2VySWQnKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gX3JlZ2lzdGVyV2l0aE9uZVNpZ25hbF9Hb3RVc2VySWQodXNlcklkUmVzdWx0KSB7XG4gICAgICAgIE9uZVNpZ25hbC5fZ2V0Tm90aWZpY2F0aW9uVHlwZXMoZnVuY3Rpb24gKG5vdGlmX3R5cGVzKSB7XG4gICAgICAgICAgdmFyIHJlcXVlc3RVcmwgPSAncGxheWVycyc7XG5cbiAgICAgICAgICB2YXIganNvbkRhdGEgPSB7XG4gICAgICAgICAgICBhcHBfaWQ6IGFwcElkLFxuICAgICAgICAgICAgZGV2aWNlX3R5cGU6IGRldmljZVR5cGUsXG4gICAgICAgICAgICBsYW5ndWFnZTogT25lU2lnbmFsLl9nZXRMYW5ndWFnZSgpLFxuICAgICAgICAgICAgdGltZXpvbmU6IG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIC02MCxcbiAgICAgICAgICAgIGRldmljZV9tb2RlbDogbmF2aWdhdG9yLnBsYXRmb3JtICsgXCIgXCIgKyBCcm93c2VyLm5hbWUsXG4gICAgICAgICAgICBkZXZpY2Vfb3M6IEJyb3dzZXIudmVyc2lvbixcbiAgICAgICAgICAgIHNkazogT25lU2lnbmFsLl9WRVJTSU9OXG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGlmICh1c2VySWRSZXN1bHQpIHtcbiAgICAgICAgICAgIHJlcXVlc3RVcmwgPSAncGxheWVycy8nICsgdXNlcklkUmVzdWx0LmlkICsgJy9vbl9zZXNzaW9uJztcbiAgICAgICAgICAgIGpzb25EYXRhLm5vdGlmaWNhdGlvbl90eXBlcyA9IG5vdGlmX3R5cGVzXG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2UgaWYgKG5vdGlmX3R5cGVzICE9IDEpXG4gICAgICAgICAgICBqc29uRGF0YS5ub3RpZmljYXRpb25fdHlwZXMgPSBub3RpZl90eXBlc1xuXG4gICAgICAgICAgaWYgKHJlZ2lzdHJhdGlvbklkKSB7XG4gICAgICAgICAgICBqc29uRGF0YS5pZGVudGlmaWVyID0gcmVnaXN0cmF0aW9uSWQ7XG4gICAgICAgICAgICBEYXRhYmFzZS5wdXQoXCJJZHNcIiwge3R5cGU6IFwicmVnaXN0cmF0aW9uSWRcIiwgaWQ6IHJlZ2lzdHJhdGlvbklkfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgT25lU2lnbmFsLl9zZW5kVG9PbmVTaWduYWxBcGkocmVxdWVzdFVybCwgJ1BPU1QnLCBqc29uRGF0YSxcbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlZ2lzdGVyZWRDYWxsYmFjayhyZXNwb25zZUpTT04pIHtcbiAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcIk9ORV9TSUdOQUxfU0VTU0lPTlwiLCB0cnVlKTtcblxuICAgICAgICAgICAgICBpZiAocmVzcG9uc2VKU09OLmlkKSB7XG4gICAgICAgICAgICAgICAgRGF0YWJhc2UucHV0KFwiSWRzXCIsIHt0eXBlOiBcInVzZXJJZFwiLCBpZDogcmVzcG9uc2VKU09OLmlkfSk7XG4gICAgICAgICAgICAgICAgT25lU2lnbmFsLl9zZW5kVW5zZW50VGFncygpO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgT25lU2lnbmFsLl9nZXRQbGF5ZXJJZChyZXNwb25zZUpTT04uaWQsIGZ1bmN0aW9uICh1c2VySWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoT25lU2lnbmFsLl9pZHNBdmFpbGFibGVfY2FsbGJhY2subGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgd2hpbGUgKE9uZVNpZ25hbC5faWRzQXZhaWxhYmxlX2NhbGxiYWNrLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJfY2FsbGJhY2sgPSBPbmVTaWduYWwuX2lkc0F2YWlsYWJsZV9jYWxsYmFjay5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgY3Vycl9jYWxsYmFjayh7dXNlcklkOiB1c2VySWQsIHJlZ2lzdHJhdGlvbklkOiByZWdpc3RyYXRpb25JZH0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChPbmVTaWduYWwuX2h0dHBSZWdpc3RyYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgIC8vIDEyLzE2LzIwMTUgLS0gQXQgdGhpcyBwb2ludCwgdGhlIHVzZXIgaGFzIGp1c3QgY2xpY2tlZCBBbGxvdyBvbiB0aGUgSFRUUCBwcm9tcHQhIVxuICAgICAgICAgICAgICAgICAgT25lU2lnbmFsLl9nZXROb3RpZmljYXRpb25QZXJtaXNzaW9uKClcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHBlcm1pc3Npb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBsb2cuZGVidWcoXCJTZW5kaW5nIHBsYXllciBJZCBhbmQgcmVnaXN0cmF0aW9uSWQgYmFjayB0byBob3N0IHBhZ2VcIik7XG4gICAgICAgICAgICAgICAgICAgICAgbG9nLmRlYnVnKE9uZVNpZ25hbC5faW5pdE9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICAgIHZhciBjcmVhdG9yID0gb3BlbmVyIHx8IHBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgICBPbmVTaWduYWwuX3NhZmVQb3N0TWVzc2FnZShjcmVhdG9yLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZHNBdmFpbGFibGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lzdHJhdGlvbklkOiByZWdpc3RyYXRpb25JZFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyb206IEVudmlyb25tZW50LmdldEVudigpXG4gICAgICAgICAgICAgICAgICAgICAgfSwgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5vcmlnaW4sIG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgIE9uZVNpZ25hbC5fc2FmZVBvc3RNZXNzYWdlKGNyZWF0b3IsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGh0dHBOYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZDogcGVybWlzc2lvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyb206IEVudmlyb25tZW50LmdldEVudigpXG4gICAgICAgICAgICAgICAgICAgICAgfSwgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5vcmlnaW4sIG51bGwpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgaWYgKG9wZW5lcilcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZSA9PiBsb2cuZXJyb3IoZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgKTtcblxuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgfSk7XG4gICAgO1xuICB9LFxuXG4gIF9zZW5kVW5zZW50VGFnczogZnVuY3Rpb24gKCkge1xuICAgIGlmIChPbmVTaWduYWwuX3RhZ3NUb1NlbmRPblJlZ2lzdGVyKSB7XG4gICAgICBPbmVTaWduYWwuc2VuZFRhZ3MoT25lU2lnbmFsLl90YWdzVG9TZW5kT25SZWdpc3Rlcik7XG4gICAgICBPbmVTaWduYWwuX3RhZ3NUb1NlbmRPblJlZ2lzdGVyID0gbnVsbDtcbiAgICB9XG4gIH0sXG5cbiAgc2V0RGVmYXVsdE5vdGlmaWNhdGlvblVybDogZnVuY3Rpb24gKHVybCkge1xuICAgIERhdGFiYXNlLnB1dChcIk9wdGlvbnNcIiwge2tleTogXCJkZWZhdWx0VXJsXCIsIHZhbHVlOiB1cmx9KTtcbiAgfSxcblxuICBzZXREZWZhdWx0SWNvbjogZnVuY3Rpb24gKGljb24pIHtcbiAgICBEYXRhYmFzZS5wdXQoXCJPcHRpb25zXCIsIHtrZXk6IFwiZGVmYXVsdEljb25cIiwgdmFsdWU6IGljb259KTtcbiAgfSxcblxuICBzZXREZWZhdWx0VGl0bGU6IGZ1bmN0aW9uICh0aXRsZSkge1xuICAgIERhdGFiYXNlLnB1dChcIk9wdGlvbnNcIiwge2tleTogXCJkZWZhdWx0VGl0bGVcIiwgdmFsdWU6IHRpdGxlfSk7XG4gIH0sXG5cbiAgb25DdXN0b21Qcm9tcHRDbGlja2VkOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgfSxcblxuICBvbk5hdGl2ZVByb21wdENoYW5nZWQ6IGZ1bmN0aW9uIChldmVudCkge1xuICAgIE9uZVNpZ25hbC5fY2hlY2tUcmlnZ2VyX2V2ZW50U3Vic2NyaXB0aW9uQ2hhbmdlZCgpO1xuICB9LFxuXG4gIF9zZW5kU2VsZk5vdGlmaWNhdGlvbjogZnVuY3Rpb24odGl0bGUsIG1lc3NhZ2UsIHVybCkge1xuICAgIGlmICghdGl0bGUpIHtcbiAgICAgIHRpdGxlID0gJ09uZVNpZ25hbCBUZXN0IE1lc3NhZ2UnO1xuICAgIH1cbiAgICBpZiAoIW1lc3NhZ2UpIHtcbiAgICAgIG1lc3NhZ2UgPSAnVGhpcyBpcyBhbiBleGFtcGxlIG5vdGlmaWNhdGlvbi4nO1xuICAgIH1cbiAgICBpZiAoIXVybCkge1xuICAgICAgdXJsID0gbmV3IFVSTChsb2NhdGlvbi5ocmVmKS5vcmlnaW4gKyAnP19vc3A9ZG9fbm90X29wZW4nO1xuICAgIH1cbiAgICBEYXRhYmFzZS5nZXQoJ0lkcycsICd1c2VySWQnKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC5pZCkge1xuICAgICAgICAgIHNlbmROb3RpZmljYXRpb24oT25lU2lnbmFsLl9hcHBfaWQsIFtyZXN1bHQuaWRdLCB7J2VuJzogdGl0bGV9LCB7J2VuJzogbWVzc2FnZX0sIHVybClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsb2cud2FybignQ291bGQgbm90IHNlbmQgc2VsZiBhIHRlc3Qgbm90aWZpY2F0aW9uIGJlY2F1c2UgdGhlcmUgaXMgbm8gdmFsaWQgdXNlciBJRC4nKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH0sXG5cbiAgX29uU3Vic2NyaXB0aW9uQ2hhbmdlZDogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgaWYgKE9uZVNpZ25hbC5faXNVbmluaXRpYXRlZFZpc2l0b3IgJiYgZXZlbnQuZGV0YWlsID09PSB0cnVlKSB7XG4gICAgICBEYXRhYmFzZS5nZXQoJ0lkcycsICd1c2VySWQnKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgbGV0IHdlbGNvbWVfbm90aWZpY2F0aW9uX29wdHMgPSBPbmVTaWduYWwuX2luaXRPcHRpb25zWyd3ZWxjb21lTm90aWZpY2F0aW9uJ107XG4gICAgICAgICAgbGV0IHdlbGNvbWVfbm90aWZpY2F0aW9uX2Rpc2FibGVkID0gKHdlbGNvbWVfbm90aWZpY2F0aW9uX29wdHMgIT09IHVuZGVmaW5lZCAmJiB3ZWxjb21lX25vdGlmaWNhdGlvbl9vcHRzWydkaXNhYmxlJ10gPT09IHRydWUpO1xuICAgICAgICAgIGxldCB0aXRsZSA9ICh3ZWxjb21lX25vdGlmaWNhdGlvbl9vcHRzICE9PSB1bmRlZmluZWQgJiYgd2VsY29tZV9ub3RpZmljYXRpb25fb3B0c1sndGl0bGUnXSAhPT0gdW5kZWZpbmVkICYmIHdlbGNvbWVfbm90aWZpY2F0aW9uX29wdHNbJ3RpdGxlJ10gIT09IG51bGwpID8gd2VsY29tZV9ub3RpZmljYXRpb25fb3B0c1sndGl0bGUnXSA6ICcnO1xuICAgICAgICAgIGxldCBtZXNzYWdlID0gKHdlbGNvbWVfbm90aWZpY2F0aW9uX29wdHMgIT09IHVuZGVmaW5lZCAmJiB3ZWxjb21lX25vdGlmaWNhdGlvbl9vcHRzWydtZXNzYWdlJ10gIT09IHVuZGVmaW5lZCAmJiB3ZWxjb21lX25vdGlmaWNhdGlvbl9vcHRzWydtZXNzYWdlJ10gIT09IG51bGwgJiYgd2VsY29tZV9ub3RpZmljYXRpb25fb3B0c1snbWVzc2FnZSddLmxlbmd0aCA+IDApID8gd2VsY29tZV9ub3RpZmljYXRpb25fb3B0c1snbWVzc2FnZSddIDogJ1RoYW5rcyBmb3Igc3Vic2NyaWJpbmchJztcbiAgICAgICAgICBpZiAoIXdlbGNvbWVfbm90aWZpY2F0aW9uX2Rpc2FibGVkKSB7XG4gICAgICAgICAgICBsb2cuZGVidWcoJ0JlY2F1c2UgdGhpcyB1c2VyIGlzIGEgbmV3IHNpdGUgdmlzaXRvciwgYSB3ZWxjb21lIG5vdGlmaWNhdGlvbiB3aWxsIGJlIHNlbnQuJyk7XG4gICAgICAgICAgICBsZXQgd2VsY29tZU5vdGlmaWNhdGlvblVybCA9IG5ldyBVUkwobG9jYXRpb24uaHJlZik7XG4gICAgICAgICAgICB3ZWxjb21lTm90aWZpY2F0aW9uVXJsID0gd2VsY29tZU5vdGlmaWNhdGlvblVybC5vcmlnaW4gKyAnP19vc3A9ZG9fbm90X29wZW4nO1xuICAgICAgICAgICAgc2VuZE5vdGlmaWNhdGlvbihPbmVTaWduYWwuX2FwcF9pZCwgW3Jlc3VsdC5pZF0sIHsnZW4nOiB0aXRsZX0sIHsnZW4nOiBtZXNzYWdlfSwgd2VsY29tZU5vdGlmaWNhdGlvblVybClcbiAgICAgICAgICAgIEV2ZW50LnRyaWdnZXIoT25lU2lnbmFsLkVWRU5UUy5XRUxDT01FX05PVElGSUNBVElPTl9TRU5ULCB7dGl0bGU6IHRpdGxlLCBtZXNzYWdlOiBtZXNzYWdlfSk7XG4gICAgICAgICAgICBPbmVTaWduYWwuX2lzVW5pbml0aWF0ZWRWaXNpdG9yID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBsb2cuZXJyb3IoZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBMaW1pdFN0b3JlLnB1dCgnc3Vic2NyaXB0aW9uLnZhbHVlJywgZXZlbnQuZGV0YWlsKTtcbiAgfSxcblxuICBfb25EYlZhbHVlUmV0cmlldmVkOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgfSxcblxuICBfb25EYlZhbHVlU2V0OiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgaW5mbyA9IGV2ZW50LmRldGFpbDtcbiAgICBpZiAoaW5mby50eXBlID09PSAndXNlcklkJykge1xuICAgICAgTGltaXRTdG9yZS5wdXQoJ2RiLmlkcy51c2VySWQnLCBpbmZvLmlkKTtcbiAgICAgIE9uZVNpZ25hbC5fY2hlY2tUcmlnZ2VyX2V2ZW50U3Vic2NyaXB0aW9uQ2hhbmdlZCgpO1xuICAgIH1cbiAgfSxcblxuICBfb25JbnRlcm5hbFN1YnNjcmlwdGlvblNldDogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgdmFyIG5ld1N1YnNjcmlwdGlvblZhbHVlID0gZXZlbnQuZGV0YWlsO1xuICAgIExpbWl0U3RvcmUucHV0KCdzZXRzdWJzY3JpcHRpb24udmFsdWUnLCBuZXdTdWJzY3JpcHRpb25WYWx1ZSk7XG4gICAgT25lU2lnbmFsLl9jaGVja1RyaWdnZXJfZXZlbnRTdWJzY3JpcHRpb25DaGFuZ2VkKCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFRoaXMgZXZlbnQgb2NjdXJzIGFmdGVyIGluaXQuXG4gICAqIEZvciBIVFRQUyBzaXRlcywgdGhpcyBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgaW5pdC5cbiAgICogRm9yIEhUVFAgc2l0ZXMsIHRoaXMgZXZlbnQgaXMgY2FsbGVkIGFmdGVyIHRoZSBpRnJhbWUgaXMgY3JlYXRlZCwgYW5kIGEgbWVzc2FnZSBpcyByZWNlaXZlZCBmcm9tIHRoZSBpRnJhbWUgc2lnbmFsaW5nIGNyb3NzLW9yaWdpbiBtZXNzYWdpbmcgaXMgcmVhZHkuXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBfb25TZGtJbml0aWFsaXplZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKE9uZVNpZ25hbC5pbml0aWFsaXplZCkge1xuICAgICAgbG9nLndhcm4oJ1NESyBpbml0aWFsaXplZCBldmVudCBvY2N1cmVkIG1vcmUgdGhhbiBvbmNlLCBzbyBza2lwcGluZyBydW5uaW5nIGluaXQgdHJpZ2dlciBjb2RlLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFN0b3JlIGluaXRpYWwgdmFsdWVzIG9mIG5vdGlmaWNhdGlvbiBwZXJtaXNzaW9uLCB1c2VyIElELCBhbmQgbWFudWFsIHN1YnNjcmlwdGlvbiBzdGF0dXNcbiAgICAvLyBUaGlzIGlzIGRvbmUgc28gdGhhdCB0aGUgdmFsdWVzIGNhbiBiZSBsYXRlciBjb21wYXJlZCB0byBzZWUgaWYgYW55dGhpbmcgY2hhbmdlZFxuICAgIC8vIFRoaXMgaXMgZG9uZSBoZXJlIGZvciBIVFRQUywgaXQgaXMgZG9uZSBhZnRlciB0aGUgY2FsbCB0byBfYWRkU2Vzc2lvbklmcmFtZSBpbiBfc2Vzc2lvbkluaXQgZm9yIEhUVFAgc2l0ZXMsIHNpbmNlIHRoZSBpZnJhbWUgaXMgbmVlZGVkIGZvciBjb21tdW5pY2F0aW9uXG4gICAgT25lU2lnbmFsLl9zdG9yZUluaXRpYWxWYWx1ZXMoKTtcblxuICAgIGlmIChFbnZpcm9ubWVudC5pc0Jyb3dzZXIoKSAmJiAhT25lU2lnbmFsLm5vdGlmeUJ1dHRvbikge1xuICAgICAgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5ub3RpZnlCdXR0b24gPSBPbmVTaWduYWwuX2luaXRPcHRpb25zLm5vdGlmeUJ1dHRvbiB8fCB7fTtcbiAgICAgIGlmIChPbmVTaWduYWwuX2luaXRPcHRpb25zLmJlbGwpIHtcbiAgICAgICAgLy8gSWYgYm90aCBiZWxsIGFuZCBub3RpZnlCdXR0b24sIG5vdGlmeUJ1dHRvbidzIG9wdGlvbnMgdGFrZSBwcmVjZWRlbmNlXG4gICAgICAgIE9iamVjdC5hc3NpZ24oT25lU2lnbmFsLl9pbml0T3B0aW9ucy5iZWxsLCBPbmVTaWduYWwuX2luaXRPcHRpb25zLm5vdGlmeUJ1dHRvbik7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oT25lU2lnbmFsLl9pbml0T3B0aW9ucy5ub3RpZnlCdXR0b24sIE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuYmVsbCk7XG4gICAgICB9XG4gICAgICBPbmVTaWduYWwubm90aWZ5QnV0dG9uID0gbmV3IEJlbGwoT25lU2lnbmFsLl9pbml0T3B0aW9ucy5ub3RpZnlCdXR0b24pO1xuICAgICAgT25lU2lnbmFsLm5vdGlmeUJ1dHRvbi5jcmVhdGUoKTtcbiAgICAgIE9uZVNpZ25hbC5pbml0aWFsaXplZCA9IHRydWU7XG4gICAgfVxuICB9LFxuXG4gIF9vbkRhdGFiYXNlUmVidWlsdDogZnVuY3Rpb24oKSB7XG4gICAgT25lU2lnbmFsLl9pc05ld1Zpc2l0b3IgPSB0cnVlO1xuICB9LFxuXG4gIF9jaGVja1RyaWdnZXJfbmF0aXZlUGVybWlzc2lvbkNoYW5nZWQ6IGZ1bmN0aW9uKCkge1xuICAgIE9uZVNpZ25hbC5fZ2V0Tm90aWZpY2F0aW9uUGVybWlzc2lvbihPbmVTaWduYWwuX2luaXRPcHRpb25zLnNhZmFyaV93ZWJfaWQpXG4gICAgICAudGhlbigocGVybWlzc2lvbikgPT4ge1xuICAgICAgICBsZXQgY3VycmVudFBlcm1pc3Npb24gPSBwZXJtaXNzaW9uO1xuICAgICAgICBsZXQgbGFzdFBlcm1pc3Npb24gPSBMaW1pdFN0b3JlLmdldExhc3QoJ25vdGlmaWNhdGlvbi5wZXJtaXNzaW9uJyk7XG4gICAgICAgIGlmIChsYXN0UGVybWlzc2lvbiAhPT0gY3VycmVudFBlcm1pc3Npb24pIHtcbiAgICAgICAgICBPbmVTaWduYWwuX3RyaWdnZXJFdmVudF9uYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZChsYXN0UGVybWlzc2lvbiwgY3VycmVudFBlcm1pc3Npb24pO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGUgPT4gbG9nLmVycm9yKGUpKTtcbiAgfSxcblxuICBfY2hlY2tUcmlnZ2VyX2V2ZW50U3Vic2NyaXB0aW9uQ2hhbmdlZDogZnVuY3Rpb24gKCkge1xuICAgIGxvZy5kZWJ1ZygnQ2FsbGVkICVjX2NoZWNrVHJpZ2dlcl9ldmVudFN1YnNjcmlwdGlvbkNoYW5nZWQoKScsIGdldENvbnNvbGVTdHlsZSgnY29kZScpLCAnaW4nLCBFbnZpcm9ubWVudC5nZXRFbnYoKSk7XG4gICAgdmFyIHBlcm1pc3Npb25zID0gTGltaXRTdG9yZS5nZXQoJ25vdGlmaWNhdGlvbi5wZXJtaXNzaW9uJyk7XG4gICAgdmFyIGxhc3RQZXJtaXNzaW9uID0gcGVybWlzc2lvbnNbcGVybWlzc2lvbnMubGVuZ3RoIC0gMl07XG4gICAgdmFyIGN1cnJlbnRQZXJtaXNzaW9uID0gcGVybWlzc2lvbnNbcGVybWlzc2lvbnMubGVuZ3RoIC0gMV07XG4gICAgbG9nLmRlYnVnKCclY19jaGVja1RyaWdnZXJfZXZlbnRTdWJzY3JpcHRpb25DaGFuZ2VkKCk6JywgZ2V0Q29uc29sZVN0eWxlKCdjb2RlJyksICdQZXJtaXNzaW9uczonLCB7bGFzdFBlcm1pc3Npb24sIGN1cnJlbnRQZXJtaXNzaW9ufSk7XG5cbiAgICB2YXIgaWRzID0gTGltaXRTdG9yZS5nZXQoJ2RiLmlkcy51c2VySWQnKTtcbiAgICB2YXIgbGFzdElkID0gaWRzW2lkcy5sZW5ndGggLSAyXTtcbiAgICB2YXIgY3VycmVudElkID0gaWRzW2lkcy5sZW5ndGggLSAxXTtcbiAgICBsb2cuZGVidWcoJyVjX2NoZWNrVHJpZ2dlcl9ldmVudFN1YnNjcmlwdGlvbkNoYW5nZWQoKTonLCBnZXRDb25zb2xlU3R5bGUoJ2NvZGUnKSwgJ0lkczonLCB7bGFzdElkLCBjdXJyZW50SWR9KTtcblxuICAgIHZhciBzdWJzY3JpcHRpb25TdGF0ZXMgPSBMaW1pdFN0b3JlLmdldCgnc2V0c3Vic2NyaXB0aW9uLnZhbHVlJyk7XG4gICAgdmFyIGxhc3RTdWJzY3JpcHRpb25TdGF0ZSA9IHN1YnNjcmlwdGlvblN0YXRlc1tzdWJzY3JpcHRpb25TdGF0ZXMubGVuZ3RoIC0gMl07XG4gICAgdmFyIGN1cnJlbnRTdWJzY3JpcHRpb25TdGF0ZSA9IHN1YnNjcmlwdGlvblN0YXRlc1tzdWJzY3JpcHRpb25TdGF0ZXMubGVuZ3RoIC0gMV07XG4gICAgbG9nLmRlYnVnKCclY19jaGVja1RyaWdnZXJfZXZlbnRTdWJzY3JpcHRpb25DaGFuZ2VkKCk6JywgZ2V0Q29uc29sZVN0eWxlKCdjb2RlJyksICdTdWJzY3JpcHRpb25zOicsIHtsYXN0U3Vic2NyaXB0aW9uU3RhdGUsIGN1cnJlbnRTdWJzY3JpcHRpb25TdGF0ZX0pO1xuXG5cbiAgICB2YXIgbmV3U3Vic2NyaXB0aW9uU3RhdGUgPSAndW5jaGFuZ2VkJztcblxuICAgIGlmICgoKGxhc3RQZXJtaXNzaW9uID09PSAnZGVmYXVsdCcgfHwgbGFzdFBlcm1pc3Npb24gPT09ICdkZW5pZWQnIHx8IGxhc3RQZXJtaXNzaW9uID09PSBudWxsKSAmJiBjdXJyZW50UGVybWlzc2lvbiA9PT0gJ2dyYW50ZWQnICYmXG4gICAgICAgIGN1cnJlbnRJZCAhPT0gbnVsbCAmJlxuICAgICAgICBjdXJyZW50U3Vic2NyaXB0aW9uU3RhdGUgPT09IHRydWVcbiAgICAgICkgfHxcbiAgICAgIChcbiAgICAgICAgKGxhc3RTdWJzY3JpcHRpb25TdGF0ZSA9PT0gZmFsc2UgJiYgY3VycmVudFN1YnNjcmlwdGlvblN0YXRlID09PSB0cnVlKSAmJlxuICAgICAgICBjdXJyZW50SWQgIT0gbnVsbCAmJlxuICAgICAgICBjdXJyZW50UGVybWlzc2lvbiA9PT0gJ2dyYW50ZWQnXG4gICAgICApKSB7XG4gICAgICBuZXdTdWJzY3JpcHRpb25TdGF0ZSA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKChsYXN0UGVybWlzc2lvbiAhPT0gJ2RlbmllZCcgJiYgY3VycmVudFBlcm1pc3Npb24gPT09ICdkZW5pZWQnKSB8fFxuICAgICAgKGxhc3RQZXJtaXNzaW9uID09PSAnZ3JhbnRlZCcgJiYgY3VycmVudFBlcm1pc3Npb24gIT09ICdncmFudGVkJykgfHxcbiAgICAgIChsYXN0SWQgIT09IG51bGwgJiYgY3VycmVudElkID09PSBudWxsKSB8fFxuICAgICAgKGxhc3RTdWJzY3JpcHRpb25TdGF0ZSAhPT0gZmFsc2UgJiYgY3VycmVudFN1YnNjcmlwdGlvblN0YXRlID09PSBmYWxzZSkpIHtcbiAgICAgIG5ld1N1YnNjcmlwdGlvblN0YXRlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKG5ld1N1YnNjcmlwdGlvblN0YXRlICE9PSBcInVuY2hhbmdlZFwiKSB7XG4gICAgICB2YXIgbGFzdFRyaWdnZXJUaW1lcyA9IExpbWl0U3RvcmUucHV0KCdldmVudC5zdWJzY3JpcHRpb25jaGFuZ2VkLmxhc3RyaWdnZXJlZCcsIERhdGUubm93KCkpO1xuICAgICAgdmFyIGN1cnJlbnRUaW1lID0gbGFzdFRyaWdnZXJUaW1lc1tsYXN0VHJpZ2dlclRpbWVzLmxlbmd0aCAtIDFdO1xuICAgICAgdmFyIGxhc3RUcmlnZ2VyVGltZSA9IGxhc3RUcmlnZ2VyVGltZXNbbGFzdFRyaWdnZXJUaW1lcy5sZW5ndGggLSAyXTtcbiAgICAgIHZhciBlbGFwc2VkVGltZVNlY29uZHMgPSAoY3VycmVudFRpbWUgLSBsYXN0VHJpZ2dlclRpbWUpIC8gMTAwMDtcblxuICAgICAgdmFyIGxhc3RFdmVudFN0YXRlcyA9IExpbWl0U3RvcmUucHV0KCdldmVudC5zdWJzY3JpcHRpb25jaGFuZ2VkLmxhc3RzdGF0ZXMnLCBuZXdTdWJzY3JpcHRpb25TdGF0ZSk7XG4gICAgICB2YXIgY3VycmVudFN0YXRlID0gbGFzdEV2ZW50U3RhdGVzW2xhc3RFdmVudFN0YXRlcy5sZW5ndGggLSAxXTtcbiAgICAgIHZhciBsYXN0U3RhdGUgPSBsYXN0RXZlbnRTdGF0ZXNbbGFzdEV2ZW50U3RhdGVzLmxlbmd0aCAtIDJdO1xuXG4gICAgICAvLyBJZiBldmVudCBhbHJlYWR5IHRyaWdnZXJlZCB3aXRoaW4gdGhlIGxhc3Qgc2Vjb25kLCBkb24ndCByZS10cmlnZ2VyLlxuICAgICAgdmFyIHNob3VsZE5vdFRyaWdnZXJFdmVudCA9IChsYXN0VHJpZ2dlclRpbWUgIT0gbnVsbCAmJiAoZWxhcHNlZFRpbWVTZWNvbmRzIDw9IDEpKSB8fCAoY3VycmVudFN0YXRlID09PSBsYXN0U3RhdGUpO1xuICAgICAgaWYgKHNob3VsZE5vdFRyaWdnZXJFdmVudCA9PT0gZmFsc2UpIHtcbiAgICAgICAgT25lU2lnbmFsLl90cmlnZ2VyRXZlbnRfc3Vic2NyaXB0aW9uQ2hhbmdlZChuZXdTdWJzY3JpcHRpb25TdGF0ZSlcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgaXNQdXNoTm90aWZpY2F0aW9uc1N1cHBvcnRlZDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGlzUHVzaE5vdGlmaWNhdGlvbnNTdXBwb3J0ZWQoKTtcbiAgfSxcblxuICBfaW5zdGFsbE5hdGl2ZVByb21wdFBlcm1pc3Npb25DaGFuZ2VkSG9vazogZnVuY3Rpb24oKSB7XG4gICAgaWYgKG5hdmlnYXRvci5wZXJtaXNzaW9ucyAmJiAhKGlzQnJvd3NlckZpcmVmb3goKSAmJiBnZXRGaXJlZm94VmVyc2lvbigpIDw9IDQ1KSkge1xuICAgICAgT25lU2lnbmFsLl91c2luZ05hdGl2ZVBlcm1pc3Npb25Ib29rID0gdHJ1ZTtcbiAgICAgIC8vIElmIHRoZSBicm93c2VyIG5hdGl2ZWx5IHN1cHBvcnRzIGhvb2tpbmcgdGhlIHN1YnNjcmlwdGlvbiBwcm9tcHQgcGVybWlzc2lvbiBjaGFuZ2UgZXZlbnRcbiAgICAgIC8vICAgICB1c2UgaXQgaW5zdGVhZCBvZiBvdXIgU0RLIG1ldGhvZFxuICAgICAgbmF2aWdhdG9yLnBlcm1pc3Npb25zLnF1ZXJ5KHtuYW1lOiAnbm90aWZpY2F0aW9ucyd9KS50aGVuKGZ1bmN0aW9uIChwZXJtaXNzaW9uU3RhdHVzKSB7XG4gICAgICAgIHBlcm1pc3Npb25TdGF0dXMub25jaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIHBlcm1pc3Npb25CZWZvcmVQcm9tcHQgPSBMaW1pdFN0b3JlLmdldEZpcnN0KCdub3RpZmljYXRpb24ucGVybWlzc2lvbicpO1xuICAgICAgICAgIE9uZVNpZ25hbC5fdHJpZ2dlckV2ZW50X25hdGl2ZVByb21wdFBlcm1pc3Npb25DaGFuZ2VkKHBlcm1pc3Npb25CZWZvcmVQcm9tcHQpO1xuICAgICAgICB9O1xuICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgaW5pdDogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICBsb2cuZGVidWcoYENhbGxlZCAlY2luaXQoJHtKU09OLnN0cmluZ2lmeShvcHRpb25zLCBudWxsLCA0KX0pYCwgZ2V0Q29uc29sZVN0eWxlKCdjb2RlJykpO1xuXG4gICAgaWYgKEVudmlyb25tZW50LmlzQnJvd3NlcigpICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2VbXCJvbmVzaWduYWwuZGVidWdnZXIuaW5pdFwiXSkge1xuICAgICAgZGVidWdnZXI7XG4gICAgfVxuXG4gICAgaWYgKE9uZVNpZ25hbC5pbml0aWFsaXplZCkge1xuICAgICAgbG9nLndhcm4oJ09uZVNpZ25hbC5pbml0KCkgd2FzIGNhbGxlZCBhZ2FpbiwgYnV0IHRoZSBTREsgaXMgYWxyZWFkeSBpbml0aWFsaXplZC4gU2tpcHBpbmcgaW5pdGlhbGl6YXRpb24uJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFvcHRpb25zLnBhdGgpIHtcbiAgICAgIG9wdGlvbnMucGF0aCA9ICcvJztcbiAgICB9XG5cbiAgICBPbmVTaWduYWwuX2luaXRPcHRpb25zID0gb3B0aW9ucztcbiAgICBPbmVTaWduYWwuX2FwcF9pZCA9IE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuYXBwSWQ7XG5cbiAgICBpZiAoIWlzUHVzaE5vdGlmaWNhdGlvbnNTdXBwb3J0ZWQoKSkge1xuICAgICAgbG9nLndhcm4oXCJZb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBwdXNoIG5vdGlmaWNhdGlvbnMuXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKERhdGFiYXNlLkVWRU5UUy5SRUJVSUxULCBPbmVTaWduYWwuX29uRGF0YWJhc2VSZWJ1aWx0KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihPbmVTaWduYWwuRVZFTlRTLkNVU1RPTV9QUk9NUFRfQ0xJQ0tFRCwgT25lU2lnbmFsLm9uQ3VzdG9tUHJvbXB0Q2xpY2tlZCk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoT25lU2lnbmFsLkVWRU5UUy5OQVRJVkVfUFJPTVBUX1BFUk1JU1NJT05DSEFOR0VELCBPbmVTaWduYWwub25OYXRpdmVQcm9tcHRDaGFuZ2VkKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihPbmVTaWduYWwuRVZFTlRTLlNVQlNDUklQVElPTl9DSEFOR0VELCBPbmVTaWduYWwuX29uU3Vic2NyaXB0aW9uQ2hhbmdlZCk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoRGF0YWJhc2UuRVZFTlRTLlJFVFJJRVZFRCwgT25lU2lnbmFsLl9vbkRiVmFsdWVSZXRyaWV2ZWQpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKERhdGFiYXNlLkVWRU5UUy5TRVQsIE9uZVNpZ25hbC5fb25EYlZhbHVlU2V0KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihPbmVTaWduYWwuRVZFTlRTLklOVEVSTkFMX1NVQlNDUklQVElPTlNFVCwgT25lU2lnbmFsLl9vbkludGVybmFsU3Vic2NyaXB0aW9uU2V0KTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihPbmVTaWduYWwuRVZFTlRTLlNES19JTklUSUFMSVpFRCwgT25lU2lnbmFsLl9vblNka0luaXRpYWxpemVkKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCAoZXZlbnQpID0+IHtcbiAgICAgIC8vIENoZWNrcyBpZiBwZXJtaXNzaW9uIGNoYW5nZWQgZXZlcnl0aW1lIGEgdXNlciBmb2N1c2VzIG9uIHRoZSBwYWdlLCBzaW5jZSBhIHVzZXIgaGFzIHRvIGNsaWNrIG91dCBvZiBhbmQgYmFjayBvbiB0aGUgcGFnZSB0byBjaGVjayBwZXJtaXNzaW9uc1xuICAgICAgT25lU2lnbmFsLl9jaGVja1RyaWdnZXJfbmF0aXZlUGVybWlzc2lvbkNoYW5nZWQoKTtcbiAgICB9KTtcblxuICAgIE9uZVNpZ25hbC5fdXNlSHR0cE1vZGUgPSAhaXNTdXBwb3J0ZWRTYWZhcmkoKSAmJiAoIU9uZVNpZ25hbC5fc3VwcG9ydHNEaXJlY3RQZXJtaXNzaW9uKCkgfHwgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5zdWJkb21haW5OYW1lKTtcblxuICAgIGlmIChPbmVTaWduYWwuX3VzZUh0dHBNb2RlKSB7XG4gICAgICBpZiAoIU9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc3ViZG9tYWluTmFtZSkge1xuICAgICAgICBsb2cuZXJyb3IoJ01pc3NpbmcgcmVxdWlyZWQgaW5pdCBwYXJhbWV0ZXIgJWNzdWJkb21haW5OYW1lJywgZ2V0Q29uc29sZVN0eWxlKCdjb2RlJyksICcuIFlvdSBtdXN0IHN1cHBseSBhIHN1YmRvbWFpbiBuYW1lIHRvIHRoZSBTREsgaW5pdGlhbGl6YXRpb24gb3B0aW9ucy4gKFNlZTogaHR0cHM6Ly9kb2N1bWVudGF0aW9uLm9uZXNpZ25hbC5jb20vZG9jcy93ZWJzaXRlLXNkay1odHRwLWluc3RhbGxhdGlvbiMyLWluY2x1ZGUtYW5kLWluaXRpYWxpemUtb25lc2lnbmFsKScpXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIE9uZVNpZ25hbC5faW5pdE9uZVNpZ25hbEh0dHAgPSAnaHR0cHM6Ly8nICsgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5zdWJkb21haW5OYW1lICsgJy5vbmVzaWduYWwuY29tL3Nka3MvaW5pdE9uZVNpZ25hbEh0dHAnO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIE9uZVNpZ25hbC5faW5pdE9uZVNpZ25hbEh0dHAgPSAnaHR0cHM6Ly9vbmVzaWduYWwuY29tL3Nka3MvaW5pdE9uZVNpZ25hbEh0dHBzJztcbiAgICB9XG5cbiAgICBpZiAoX19ERVZfXylcbiAgICAgIE9uZVNpZ25hbC5faW5pdE9uZVNpZ25hbEh0dHAgPSBERVZfRlJBTUVfSE9TVCArICcvZGV2X3Nka3MvaW5pdE9uZVNpZ25hbEh0dHAnO1xuXG4gICAgLy8gSWYgU2FmYXJpIC0gYWRkICdmZXRjaCcgcG9sbHlmaWxsIGlmIGl0IGlzbid0IGFscmVhZHkgYWRkZWQuXG4gICAgaWYgKGlzU3VwcG9ydGVkU2FmYXJpKCkgJiYgdHlwZW9mIHdpbmRvdy5mZXRjaCA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB2YXIgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgICAgcy5zZXRBdHRyaWJ1dGUoJ3NyYycsIFwiaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZmV0Y2gvMC45LjAvZmV0Y2guanNcIik7XG4gICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHMpO1xuICAgIH1cblxuICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIpXG4gICAgICBPbmVTaWduYWwuX2ludGVybmFsSW5pdCgpO1xuICAgIGVsc2VcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgT25lU2lnbmFsLl9pbnRlcm5hbEluaXQpO1xuICB9LFxuXG4gIF9pbnRlcm5hbEluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBsb2cuZGVidWcoJ0NhbGxlZCAlY19pbnRlcm5hbEluaXQoKScsIGdldENvbnNvbGVTdHlsZSgnY29kZScpKTtcbiAgICBQcm9taXNlLmFsbChbRGF0YWJhc2UuZ2V0KCdJZHMnLCAnYXBwSWQnKSxcbiAgICAgIERhdGFiYXNlLmdldCgnSWRzJywgJ3JlZ2lzdHJhdGlvbklkJyksXG4gICAgICBEYXRhYmFzZS5nZXQoJ09wdGlvbnMnLCAnc3Vic2NyaXB0aW9uJyldKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gX2ludGVybmFsSW5pdF9Hb3RBcHBSZWdpc3RyYXRpb25TdWJzY3JpcHRpb25JZHMocmVzdWx0KSB7XG4gICAgICAgIHZhciBhcHBJZFJlc3VsdCA9IHJlc3VsdFswXTtcbiAgICAgICAgdmFyIHJlZ2lzdHJhdGlvbklkUmVzdWx0ID0gcmVzdWx0WzFdO1xuICAgICAgICB2YXIgc3Vic2NyaXB0aW9uUmVzdWx0ID0gcmVzdWx0WzJdO1xuXG4gICAgICAgIC8vIElmIEFwcElkIGNoYW5nZWQgZGVsZXRlIHBsYXllcklkIGFuZCBjb250aW51ZS5cbiAgICAgICAgaWYgKGFwcElkUmVzdWx0ICYmIGFwcElkUmVzdWx0LmlkICE9IE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuYXBwSWQpIHtcbiAgICAgICAgICBEYXRhYmFzZS5yZW1vdmUoXCJJZHNcIiwgXCJ1c2VySWRcIik7XG4gICAgICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShcIk9ORV9TSUdOQUxfU0VTU0lPTlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEhUVFBTIC0gT25seSByZWdpc3RlciBmb3IgcHVzaCBub3RpZmljYXRpb25zIG9uY2UgcGVyIHNlc3Npb24gb3IgaWYgdGhlIHVzZXIgY2hhbmdlcyBub3RpZmljYXRpb24gcGVybWlzc2lvbiB0byBBc2sgb3IgQWxsb3cuXG4gICAgICAgIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwiT05FX1NJR05BTF9TRVNTSU9OXCIpXG4gICAgICAgICAgJiYgIU9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc3ViZG9tYWluTmFtZVxuICAgICAgICAgICYmIChOb3RpZmljYXRpb24ucGVybWlzc2lvbiA9PSBcImRlbmllZFwiXG4gICAgICAgICAgfHwgc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShcIk9ORV9TSUdOQUxfTk9USUZJQ0FUSU9OX1BFUk1JU1NJT05cIikgPT0gTm90aWZpY2F0aW9uLnBlcm1pc3Npb24pKSB7XG4gICAgICAgICAgRXZlbnQudHJpZ2dlcihPbmVTaWduYWwuRVZFTlRTLlNES19JTklUSUFMSVpFRCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcIk9ORV9TSUdOQUxfTk9USUZJQ0FUSU9OX1BFUk1JU1NJT05cIiwgTm90aWZpY2F0aW9uLnBlcm1pc3Npb24pO1xuXG4gICAgICAgIGlmIChCcm93c2VyLnNhZmFyaSAmJiBPbmVTaWduYWwuX2luaXRPcHRpb25zLmF1dG9SZWdpc3RlciA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBsb2cuZGVidWcoJ09uIFNhZmFyaSBhbmQgYXV0b3JlZ2lzdGVyIGlzIGZhbHNlLCBza2lwcGluZyBzZXNzaW9uSW5pdCgpLicpO1xuICAgICAgICAgIGxvZy5kZWJ1ZygnVXNlIGh0dHAgbW9kZTogJywgT25lU2lnbmFsLl91c2VIdHRwTW9kZSk7XG4gICAgICAgICAgLy8gVGhpcyAqc2VlbXMqIHRvIHRyaWdnZXIgb24gZWl0aGVyIFNhZmFyaSdzIGF1dG9yZWdpc3RlciBmYWxzZSBvciBDaHJvbWUgSFRUUFxuICAgICAgICAgIC8vIENocm9tZSBIVFRQIGdldHMgYW4gU0RLX0lOSVRJQUxJWkVEIGV2ZW50IGZyb20gdGhlIGlGcmFtZSBwb3N0TWVzc2FnZSwgc28gZG9uJ3QgY2FsbCBpdCBoZXJlXG4gICAgICAgICAgaWYgKCFPbmVTaWduYWwuX3VzZUh0dHBNb2RlKSB7XG4gICAgICAgICAgICBFdmVudC50cmlnZ2VyKE9uZVNpZ25hbC5FVkVOVFMuU0RLX0lOSVRJQUxJWkVEKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuYXV0b1JlZ2lzdGVyID09PSBmYWxzZSAmJiAhcmVnaXN0cmF0aW9uSWRSZXN1bHQgJiYgIU9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc3ViZG9tYWluTmFtZSkge1xuICAgICAgICAgIGxvZy5kZWJ1ZygnTm8gYXV0b3JlZ2lzdGVyLCBubyByZWdpc3RyYXRpb24gSUQsIG5vIHN1YmRvbWFpbiA+IHNraXAgX2ludGVybmFsSW5pdCgpLicpXG4gICAgICAgICAgRXZlbnQudHJpZ2dlcihPbmVTaWduYWwuRVZFTlRTLlNES19JTklUSUFMSVpFRCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSAhPT0gXCJ2aXNpYmxlXCIpIHtcbiAgICAgICAgICBvbmNlKGRvY3VtZW50LCAndmlzaWJpbGl0eWNoYW5nZScsIChlLCBkZXN0cm95RXZlbnRMaXN0ZW5lcikgPT4ge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA9PT0gJ3Zpc2libGUnKSB7XG4gICAgICAgICAgICAgIGRlc3Ryb3lFdmVudExpc3RlbmVyKCk7XG4gICAgICAgICAgICAgIE9uZVNpZ25hbC5fc2Vzc2lvbkluaXQoe30pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHRydWUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxvZy5kZWJ1ZygnQ2FsbGluZyBfc2Vzc2lvbkluaXQoKSBub3JtYWxseSBmcm9tIF9pbnRlcm5hbEluaXQoKS4nKTtcbiAgICAgICAgT25lU2lnbmFsLl9zZXNzaW9uSW5pdCh7fSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGxvZy5lcnJvcihlKTtcbiAgICAgIH0pO1xuICB9LFxuXG4gIHJlZ2lzdGVyRm9yUHVzaE5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgaWYgKCFpc1B1c2hOb3RpZmljYXRpb25zU3VwcG9ydGVkKCkpIHtcbiAgICAgIGxvZy53YXJuKFwiWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgcHVzaCBub3RpZmljYXRpb25zLlwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gV0FSTklORzogRG8gTk9UIGFkZCBjYWxsYmFja3MgdGhhdCBoYXZlIHRvIGZpcmUgdG8gZ2V0IGZyb20gaGVyZSB0byB3aW5kb3cub3BlbiBpbiBfc2Vzc2lvbkluaXQuXG4gICAgLy8gICAgICAgICAgT3RoZXJ3aXNlIHRoZSBwb3AtdXAgdG8gYXNrIGZvciBwdXNoIHBlcm1pc3Npb24gb24gSFRUUCBjb25uZWN0aW9ucyB3aWxsIGJlIGJsb2NrZWQgYnkgQ2hyb21lLlxuICAgIGlmICghb3B0aW9ucylcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICBvcHRpb25zLmZyb21SZWdpc3RlckZvciA9IHRydWU7XG4gICAgT25lU2lnbmFsLl9zZXNzaW9uSW5pdChvcHRpb25zKTtcbiAgfSxcblxuICAvLyBIdHRwIG9ubHkgLSBPbmx5IGNhbGxlZCBmcm9tIGlmcmFtZSdzIGluaXQuanNcbiAgX2luaXRIdHRwOiBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgIGxvZy5kZWJ1ZyhgQ2FsbGVkICVjX2luaXRIdHRwKCR7SlNPTi5zdHJpbmdpZnkob3B0aW9ucywgbnVsbCwgNCl9KWAsIGdldENvbnNvbGVTdHlsZSgnY29kZScpKTtcblxuICAgIGlmIChFbnZpcm9ubWVudC5pc0Jyb3dzZXIoKSAmJiB3aW5kb3cubG9jYWxTdG9yYWdlW1wib25lc2lnbmFsLmRlYnVnZ2VyLl9pbml0SHR0cFwiXSkge1xuICAgICAgZGVidWdnZXI7XG4gICAgfVxuXG4gICAgT25lU2lnbmFsLl9pbml0T3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgICBPbmVTaWduYWwuX2luc3RhbGxOYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZEhvb2soKTtcbiAgICBpZiAob3B0aW9ucy5jb250aW51ZVByZXNzZWQpIHtcbiAgICAgIE9uZVNpZ25hbC5zZXRTdWJzY3JpcHRpb24odHJ1ZSk7XG4gICAgfVxuXG4gICAgdmFyIGlzSWZyYW1lID0gKHBhcmVudCAhPSBudWxsICYmIHBhcmVudCAhPSB3aW5kb3cpO1xuICAgIHZhciBjcmVhdG9yID0gb3BlbmVyIHx8IHBhcmVudDtcblxuICAgIGlmICghY3JlYXRvcikge1xuICAgICAgbG9nLmVycm9yKCdfaW5pdEh0dHAgKGZyb20gPGlmcmFtZT4pOicsICdObyBvcGVuZXIgb3IgcGFyZW50IGZvdW5kIScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBTZXR0aW5nIHVwIG1lc3NhZ2UgY2hhbm5lbCB0byByZWNlaXZlIG1lc3NhZ2UgZnJvbSBob3N0IHBhZ2UuXG4gICAgdmFyIG1lc3NhZ2VDaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4gICAgbWVzc2FnZUNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBsb2cuZGVidWcoYCVjJHtFbnZpcm9ubWVudC5nZXRFbnYoKS5jYXBpdGFsaXplKCl9IOKsuCAke2V2ZW50LmRhdGEuZnJvbS5jYXBpdGFsaXplKCl9OmAsIGdldENvbnNvbGVTdHlsZSgncG9zdG1lc3NhZ2UnKSwgZXZlbnQuZGF0YSk7XG5cbiAgICAgIGlmIChldmVudC5kYXRhLmluaXRPcHRpb25zKSB7XG4gICAgICAgIE9uZVNpZ25hbC5zZXREZWZhdWx0Tm90aWZpY2F0aW9uVXJsKGV2ZW50LmRhdGEuaW5pdE9wdGlvbnMuZGVmYXVsdFVybCk7XG4gICAgICAgIE9uZVNpZ25hbC5zZXREZWZhdWx0VGl0bGUoZXZlbnQuZGF0YS5pbml0T3B0aW9ucy5kZWZhdWx0VGl0bGUpO1xuICAgICAgICBpZiAoZXZlbnQuZGF0YS5pbml0T3B0aW9ucy5kZWZhdWx0SWNvbilcbiAgICAgICAgICBPbmVTaWduYWwuc2V0RGVmYXVsdEljb24oZXZlbnQuZGF0YS5pbml0T3B0aW9ucy5kZWZhdWx0SWNvbik7XG5cbiAgICAgICAgRGF0YWJhc2UuZ2V0KFwiTm90aWZpY2F0aW9uT3BlbmVkXCIsIGV2ZW50LmRhdGEuaW5pdE9wdGlvbnMucGFyZW50X3VybClcbiAgICAgICAgICAudGhlbihmdW5jdGlvbiByZWdpc3RlckZvclB1c2hOb3RpZmljYXRpb25zX0dvdE5vdGlmaWNhdGlvbk9wZW5lZChub3RpZmljYXRpb25PcGVuZWRSZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChub3RpZmljYXRpb25PcGVuZWRSZXN1bHQpIHtcbiAgICAgICAgICAgICAgRGF0YWJhc2UucmVtb3ZlKFwiTm90aWZpY2F0aW9uT3BlbmVkXCIsIGV2ZW50LmRhdGEuaW5pdE9wdGlvbnMucGFyZW50X3VybCk7XG4gICAgICAgICAgICAgIGxvZy5kZWJ1ZyhcIk9uZVNpZ25hbC5fc2FmZVBvc3RNZXNzYWdlOnRhcmdldE9yaWdpbjpcIiwgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5vcmlnaW4pO1xuXG4gICAgICAgICAgICAgIE9uZVNpZ25hbC5fc2FmZVBvc3RNZXNzYWdlKGNyZWF0b3IsIHtvcGVuZWROb3RpZmljYXRpb246IG5vdGlmaWNhdGlvbk9wZW5lZFJlc3VsdC5kYXRhLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0sIE9uZVNpZ25hbC5faW5pdE9wdGlvbnMub3JpZ2luLCBudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgICAgIH0pO1xuICAgICAgICA7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChldmVudC5kYXRhLmdldE5vdGlmaWNhdGlvblBlcm1pc3Npb24pIHsgLy8gVGhpcyBpcyBub3QgdXNlZCBmb3IgT25lU2lnbmFsLl9nZXROb3RpZmljYXRpb25QZXJtaXNzaW9uLCBldmVuIHRob3VnaCB0aGUgbmFtaW5nIGlzIHNpbWlsYXJcbiAgICAgICAgLy9sb2cuaW5mbygnJWNJbiB0aGUgPGlmcmFtZT46IGdldE5vdGlmaWNhdGlvblBlcm1pc3Npb24gbWVzc2FnZSB3YXMgcmVjZWl2ZWQuJywgZ2V0Q29uc29sZVN0eWxlKCdhbGVydCcpKTtcbiAgICAgICAgT25lU2lnbmFsLl9nZXRTdWJkb21haW5TdGF0ZShmdW5jdGlvbiAoY3VyU3RhdGUpIHtcbiAgICAgICAgICBPbmVTaWduYWwuX3NhZmVQb3N0TWVzc2FnZShjcmVhdG9yLCB7Y3VycmVudE5vdGlmaWNhdGlvblBlcm1pc3Npb246IGN1clN0YXRlLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0sIE9uZVNpZ25hbC5faW5pdE9wdGlvbnMub3JpZ2luLCBudWxsKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChldmVudC5kYXRhLnJlbW90ZUdldE5vdGlmaWNhdGlvblBlcm1pc3Npb24pIHtcbiAgICAgICAgbGV0IHNhZmFyaVdlYklkID0gZXZlbnQuZGF0YS5zYWZhcmlXZWJJZDtcbiAgICAgICAgbGV0IHByb21pc2VJZCA9IGV2ZW50LmRhdGEucHJvbWlzZUlkO1xuICAgICAgICBPbmVTaWduYWwuX2dldE5vdGlmaWNhdGlvblBlcm1pc3Npb24oc2FmYXJpV2ViSWQpXG4gICAgICAgICAgLnRoZW4oKHBlcm1pc3Npb24pID0+IHtcbiAgICAgICAgICAgIE9uZVNpZ25hbC5fc2FmZVBvc3RNZXNzYWdlKGNyZWF0b3IsIHtyZW1vdGVHZXROb3RpZmljYXRpb25QZXJtaXNzaW9uUmVzcG9uc2U6IHBlcm1pc3Npb24sIHByb21pc2VJZDogcHJvbWlzZUlkLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0sIE9uZVNpZ25hbC5faW5pdE9wdGlvbnMub3JpZ2luLCBudWxsKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaChlID0+IGxvZy5lcnJvcihlKSk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChldmVudC5kYXRhLnNldFN1YmRvbWFpblN0YXRlKSB7XG4gICAgICAgIGxldCBwcm9taXNlSWQgPSBldmVudC5kYXRhLnByb21pc2VJZDtcbiAgICAgICAgT25lU2lnbmFsLnNldFN1YnNjcmlwdGlvbihldmVudC5kYXRhLnNldFN1YmRvbWFpblN0YXRlLnNldFN1YnNjcmlwdGlvbilcbiAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAvLyBMZXQgbWFpbiBwYWdlIGtub3cgc2V0U3Vic2NyaXB0aW9uIGlzIGNvbXBsZXRlIHNvIHByb21pc2UgY2FuIGJlIGZ1bGZpbGxlZFxuICAgICAgICAgICAgT25lU2lnbmFsLl9zYWZlUG9zdE1lc3NhZ2UoY3JlYXRvciwge3NldFN1YnNjcmlwdGlvbkNvbXBsZXRlOiB0cnVlLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKSwgcHJvbWlzZUlkOiBwcm9taXNlSWR9LCBPbmVTaWduYWwuX2luaXRPcHRpb25zLm9yaWdpbiwgbnVsbCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgICAgICAgT25lU2lnbmFsLl9zYWZlUG9zdE1lc3NhZ2UoY3JlYXRvciwge3NldFN1YnNjcmlwdGlvbkNvbXBsZXRlOiBmYWxzZSwgZnJvbTogRW52aXJvbm1lbnQuZ2V0RW52KCksIHByb21pc2VJZDogcHJvbWlzZUlkfSwgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5vcmlnaW4sIG51bGwpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoZXZlbnQuZGF0YS5yZW1vdGVHZXREYlZhbHVlKSB7XG4gICAgICAgIGxldCBwcm9taXNlSWQgPSBldmVudC5kYXRhLnByb21pc2VJZDtcbiAgICAgICAgbGV0IHRhYmxlID0gZXZlbnQuZGF0YS50YWJsZTtcbiAgICAgICAgbGV0IGtleSA9IGV2ZW50LmRhdGEua2V5O1xuICAgICAgICBpZiAoIXByb21pc2VJZCkge1xuICAgICAgICAgIGxvZy5lcnJvcignTm8gcHJvbWlzZSBJRCBzZXQgZm9yIHJlbW90ZUdldERiVmFsdWUuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0YWJsZSkge1xuICAgICAgICAgIGxvZy5lcnJvcignQ2Fubm90IHJlbW90ZWx5IHJldHJpZXZlIGRhdGFiYXNlIHZhbHVlIHdpdGhvdXQgYmVpbmcgc3VwcGxpZWQgdGhlIHRhYmxlIHRvIGxvb2sgaW4hJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFrZXkpIHtcbiAgICAgICAgICBsb2cuZXJyb3IoXCJDYW5ub3QgcmVtb3RlbHkgcmV0cmlldmUgZGF0YWJhc2UgdmFsdWUgd2l0aG91dCBiZWluZyBzdXBwbGllZCB0aGUgdGFibGUncyBrZXkhXCIpO1xuICAgICAgICB9XG4gICAgICAgIERhdGFiYXNlLmdldCh0YWJsZSwga2V5KS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgT25lU2lnbmFsLl9zYWZlUG9zdE1lc3NhZ2UoY3JlYXRvciwge3JlbW90ZUdldERiVmFsdWU6IHRydWUsIHJlc3VsdDogcmVzdWx0LCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKSwgcHJvbWlzZUlkOiBwcm9taXNlSWR9LCBPbmVTaWduYWwuX2luaXRPcHRpb25zLm9yaWdpbiwgbnVsbCk7XG4gICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgICAgICAgT25lU2lnbmFsLl9zYWZlUG9zdE1lc3NhZ2UoY3JlYXRvciwge3JlbW90ZUdldERiVmFsdWU6IGZhbHNlLCBlcnJvcjogZSwgZnJvbTogRW52aXJvbm1lbnQuZ2V0RW52KCksIHByb21pc2VJZDogcHJvbWlzZUlkfSwgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5vcmlnaW4sIG51bGwpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBPbmVTaWduYWwuX2dldFN1YmRvbWFpblN0YXRlKGZ1bmN0aW9uIChjdXJTdGF0ZSkge1xuICAgICAgY3VyU3RhdGVbXCJpc0lmcmFtZVwiXSA9IGlzSWZyYW1lO1xuICAgICAgT25lU2lnbmFsLl9zYWZlUG9zdE1lc3NhZ2UoY3JlYXRvciwge29uZVNpZ25hbEluaXRQYWdlUmVhZHk6IGN1clN0YXRlLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0sIE9uZVNpZ25hbC5faW5pdE9wdGlvbnMub3JpZ2luLCBbbWVzc2FnZUNoYW5uZWwucG9ydDJdKTtcbiAgICB9KTtcblxuICAgIE9uZVNpZ25hbC5faW5pdFNhdmVTdGF0ZSgpO1xuICAgIE9uZVNpZ25hbC5faHR0cFJlZ2lzdHJhdGlvbiA9IHRydWU7XG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5pbmRleE9mKFwiP3Nlc3Npb249dHJ1ZVwiKSA9PSAwKVxuICAgICAgcmV0dXJuO1xuXG4gICAgT25lU2lnbmFsLl9nZXRQbGF5ZXJJZChudWxsLCBmdW5jdGlvbiAocGxheWVyX2lkKSB7XG4gICAgICBpZiAoIWlzSWZyYW1lIHx8IHBsYXllcl9pZCkge1xuICAgICAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3RlcihPbmVTaWduYWwuU0VSVklDRV9XT1JLRVJfUEFUSCwgT25lU2lnbmFsLlNFUlZJQ0VfV09SS0VSX1BBUkFNKS50aGVuKE9uZVNpZ25hbC5fZW5hYmxlTm90aWZpY2F0aW9ucywgT25lU2lnbmFsLl9yZWdpc3RlckVycm9yKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICBfZ2V0U3ViZG9tYWluU3RhdGU6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIHZhciBzdGF0ZSA9IHt9O1xuXG4gICAgUHJvbWlzZS5hbGwoW0RhdGFiYXNlLmdldCgnSWRzJywgJ3VzZXJJZCcpLFxuICAgICAgRGF0YWJhc2UuZ2V0KCdJZHMnLCAncmVnaXN0cmF0aW9uSWQnKSxcbiAgICAgIERhdGFiYXNlLmdldCgnT3B0aW9ucycsICdzdWJzY3JpcHRpb24nKV0pXG4gICAgICAudGhlbihmdW5jdGlvbiBfaW50ZXJuYWxJbml0X0dvdEFwcFJlZ2lzdHJhdGlvblN1YnNjcmlwdGlvbklkcyhyZXN1bHQpIHtcbiAgICAgICAgdmFyIHVzZXJJZFJlc3VsdCA9IHJlc3VsdFswXTtcbiAgICAgICAgdmFyIHJlZ2lzdHJhdGlvbklkUmVzdWx0ID0gcmVzdWx0WzFdO1xuICAgICAgICB2YXIgc3Vic2NyaXB0aW9uUmVzdWx0ID0gcmVzdWx0WzJdO1xuXG4gICAgICAgIGNhbGxiYWNrKHtcbiAgICAgICAgICB1c2VySWQ6IHVzZXJJZFJlc3VsdCA/IHVzZXJJZFJlc3VsdC5pZCA6IG51bGwsXG4gICAgICAgICAgcmVnaXN0cmF0aW9uSWQ6IHJlZ2lzdHJhdGlvbklkUmVzdWx0ID8gcmVnaXN0cmF0aW9uSWRSZXN1bHQuaWQgOiBudWxsLFxuICAgICAgICAgIG5vdGlmUGVybXNzaW9uOiBOb3RpZmljYXRpb24ucGVybWlzc2lvbixcbiAgICAgICAgICBzdWJzY3JpcHRpb25TZXQ6IHN1YnNjcmlwdGlvblJlc3VsdCA/IHN1YnNjcmlwdGlvblJlc3VsdC52YWx1ZSA6IG51bGwsXG4gICAgICAgICAgaXNQdXNoRW5hYmxlZDogKCBOb3RpZmljYXRpb24ucGVybWlzc2lvbiA9PSBcImdyYW50ZWRcIlxuICAgICAgICAgICYmIHVzZXJJZFJlc3VsdFxuICAgICAgICAgICYmIHJlZ2lzdHJhdGlvbklkUmVzdWx0XG4gICAgICAgICAgJiYgKChzdWJzY3JpcHRpb25SZXN1bHQgJiYgc3Vic2NyaXB0aW9uUmVzdWx0LnZhbHVlKSB8fCBzdWJzY3JpcHRpb25SZXN1bHQgPT0gbnVsbCkpXG4gICAgICAgIH0pO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICBsb2cuZXJyb3IoZSk7XG4gICAgICB9KTtcbiAgICA7XG4gIH0sXG5cbiAgX2luaXRTYXZlU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICBPbmVTaWduYWwuX2FwcF9pZCA9IE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuYXBwSWQ7XG4gICAgRGF0YWJhc2UucHV0KFwiSWRzXCIsIHt0eXBlOiBcImFwcElkXCIsIGlkOiBPbmVTaWduYWwuX2FwcF9pZH0pO1xuICAgIERhdGFiYXNlLnB1dChcIk9wdGlvbnNcIiwge2tleTogXCJwYWdlVGl0bGVcIiwgdmFsdWU6IGRvY3VtZW50LnRpdGxlfSk7XG4gIH0sXG5cbiAgX3N1cHBvcnRzRGlyZWN0UGVybWlzc2lvbjogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBpc1N1cHBvcnRlZFNhZmFyaSgpXG4gICAgICB8fCBsb2NhdGlvbi5wcm90b2NvbCA9PSAnaHR0cHM6J1xuICAgICAgfHwgbG9jYXRpb24uaG9zdC5pbmRleE9mKFwibG9jYWxob3N0XCIpID09IDBcbiAgICAgIHx8IGxvY2F0aW9uLmhvc3QuaW5kZXhPZihcIjEyNy4wLjAuMVwiKSA9PSAwO1xuICB9LFxuXG4gIF9nZXRQcm9tcHRPcHRpb25zUXVlcnlTdHJpbmc6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbWVzc2FnZV9sb2NhbGl6YXRpb25fb3B0cyA9IE9uZVNpZ25hbC5faW5pdE9wdGlvbnNbJ3Byb21wdE9wdGlvbnMnXTtcbiAgICB2YXIgbWVzc2FnZV9sb2NhbGl6YXRpb25fb3B0c19zdHIgPSAnJztcbiAgICBpZiAobWVzc2FnZV9sb2NhbGl6YXRpb25fb3B0cykge1xuICAgICAgdmFyIG1lc3NhZ2VfbG9jYWxpemF0aW9uX3BhcmFtcyA9IFsnYWN0aW9uTWVzc2FnZScsXG4gICAgICAgICdleGFtcGxlTm90aWZpY2F0aW9uVGl0bGVEZXNrdG9wJyxcbiAgICAgICAgJ2V4YW1wbGVOb3RpZmljYXRpb25NZXNzYWdlRGVza3RvcCcsXG4gICAgICAgICdleGFtcGxlTm90aWZpY2F0aW9uVGl0bGVNb2JpbGUnLFxuICAgICAgICAnZXhhbXBsZU5vdGlmaWNhdGlvbk1lc3NhZ2VNb2JpbGUnLFxuICAgICAgICAnZXhhbXBsZU5vdGlmaWNhdGlvbkNhcHRpb24nLFxuICAgICAgICAnYWNjZXB0QnV0dG9uVGV4dCcsXG4gICAgICAgICdjYW5jZWxCdXR0b25UZXh0JyxcbiAgICAgICAgJ3Nob3dDcmVkaXQnXTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWVzc2FnZV9sb2NhbGl6YXRpb25fcGFyYW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBrZXkgPSBtZXNzYWdlX2xvY2FsaXphdGlvbl9wYXJhbXNbaV07XG4gICAgICAgIHZhciB2YWx1ZSA9IG1lc3NhZ2VfbG9jYWxpemF0aW9uX29wdHNba2V5XTtcbiAgICAgICAgdmFyIGVuY29kZWRfdmFsdWUgPSBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpO1xuICAgICAgICBpZiAodmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSAnJykge1xuICAgICAgICAgIG1lc3NhZ2VfbG9jYWxpemF0aW9uX29wdHNfc3RyICs9ICcmJyArIGtleSArICc9JyArIGVuY29kZWRfdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1lc3NhZ2VfbG9jYWxpemF0aW9uX29wdHNfc3RyO1xuICB9LFxuXG4gIF9zdG9yZUluaXRpYWxWYWx1ZXM6IGZ1bmN0aW9uKCkge1xuICAgIGxvZy5kZWJ1ZyhgQ2FsbGVkICVjX3N0b3JlSW5pdGlhbFZhbHVlcygpYCwgZ2V0Q29uc29sZVN0eWxlKCdjb2RlJykpO1xuICAgIHJldHVybiBPbmVTaWduYWwuX2dldE5vdGlmaWNhdGlvblBlcm1pc3Npb24oT25lU2lnbmFsLl9pbml0T3B0aW9ucy5zYWZhcmlfd2ViX2lkKVxuICAgICAgLnRoZW4ocGVybWlzc2lvbiA9PiB7XG4gICAgICAgIExpbWl0U3RvcmUucHV0KCdub3RpZmljYXRpb24ucGVybWlzc2lvbicsIHBlcm1pc3Npb24pO1xuICAgICAgICBPbmVTaWduYWwuX2luc3RhbGxOYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZEhvb2soKTtcblxuICAgICAgICAvLyBTdG9yZSB0aGUgY3VycmVudCB2YWx1ZSBvZiBJZHM6cmVnaXN0cmF0aW9uSWQsIHNvIHRoYXQgd2UgY2FuIHNlZSBpZiB0aGUgdmFsdWUgY2hhbmdlcyBpbiB0aGUgZnV0dXJlXG4gICAgICAgIHJldHVybiBEYXRhYmFzZS5nZXQoJ0lkcycsICd1c2VySWQnKTtcbiAgICAgIH0pXG4gICAgICAudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIE9uZVNpZ25hbC5faXNVbmluaXRpYXRlZFZpc2l0b3IgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzdG9yZVZhbHVlID0gcmVzdWx0ID8gcmVzdWx0LmlkIDogbnVsbDtcbiAgICAgICAgTGltaXRTdG9yZS5wdXQoJ2RiLmlkcy51c2VySWQnLCBzdG9yZVZhbHVlKTtcblxuICAgICAgICAvLyBTdG9yZSB0aGUgY3VycmVudCB2YWx1ZSBvZiBzdWJzY3JpcHRpb24sIHNvIHRoYXQgd2UgY2FuIHNlZSBpZiB0aGUgdmFsdWUgY2hhbmdlcyBpbiB0aGUgZnV0dXJlXG4gICAgICAgIHJldHVybiBPbmVTaWduYWwuX2dldFN1YnNjcmlwdGlvbigpO1xuICAgICAgfSlcbiAgICAgIC50aGVuKChjdXJyZW50U3Vic2NyaXB0aW9uKSA9PiB7XG4gICAgICAgIExpbWl0U3RvcmUucHV0KCdzZXRzdWJzY3JpcHRpb24udmFsdWUnLCBjdXJyZW50U3Vic2NyaXB0aW9uKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZSA9PiBsb2cuZXJyb3IoZSkpO1xuICB9LFxuXG4gIF9zZXNzaW9uSW5pdDogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICBsb2cuZGVidWcoYENhbGxlZCAlY19zZXNzaW9uSW5pdCgke0pTT04uc3RyaW5naWZ5KG9wdGlvbnMpfSlgLCBnZXRDb25zb2xlU3R5bGUoJ2NvZGUnKSk7XG4gICAgT25lU2lnbmFsLl9pbml0U2F2ZVN0YXRlKCk7XG5cbiAgICB2YXIgaG9zdFBhZ2VQcm90b2NvbCA9IGxvY2F0aW9uLm9yaWdpbi5tYXRjaCgvXmh0dHAoc3wpOlxcL1xcLyh3d3dcXC58KS8pWzBdO1xuXG4gICAgLy8gSWYgSFRUUCBvciB1c2luZyBzdWJkb21haW4gbW9kZVxuICAgIGlmIChPbmVTaWduYWwuX3VzZUh0dHBNb2RlKSB7XG4gICAgICBpZiAob3B0aW9ucy5mcm9tUmVnaXN0ZXJGb3IpIHtcbiAgICAgICAgdmFyIGR1YWxTY3JlZW5MZWZ0ID0gd2luZG93LnNjcmVlbkxlZnQgIT0gdW5kZWZpbmVkID8gd2luZG93LnNjcmVlbkxlZnQgOiBzY3JlZW4ubGVmdDtcbiAgICAgICAgdmFyIGR1YWxTY3JlZW5Ub3AgPSB3aW5kb3cuc2NyZWVuVG9wICE9IHVuZGVmaW5lZCA/IHdpbmRvdy5zY3JlZW5Ub3AgOiBzY3JlZW4udG9wO1xuXG4gICAgICAgIHZhciB0aGlzV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCA/IHdpbmRvdy5pbm5lcldpZHRoIDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoIDogc2NyZWVuLndpZHRoO1xuICAgICAgICB2YXIgdGhpc0hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCA/IHdpbmRvdy5pbm5lckhlaWdodCA6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgPyBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IDogc2NyZWVuLmhlaWdodDtcbiAgICAgICAgdmFyIGNoaWxkV2lkdGggPSBPbmVTaWduYWwuX3dpbmRvd1dpZHRoO1xuICAgICAgICB2YXIgY2hpbGRIZWlnaHQgPSBPbmVTaWduYWwuX3dpbmRvd0hlaWdodDtcblxuICAgICAgICB2YXIgbGVmdCA9ICgodGhpc1dpZHRoIC8gMikgLSAoY2hpbGRXaWR0aCAvIDIpKSArIGR1YWxTY3JlZW5MZWZ0O1xuICAgICAgICB2YXIgdG9wID0gKCh0aGlzSGVpZ2h0IC8gMikgLSAoY2hpbGRIZWlnaHQgLyAyKSkgKyBkdWFsU2NyZWVuVG9wO1xuXG4gICAgICAgIGxvZy5kZWJ1ZygnT3BlbmluZyBwb3B1cCB3aW5kb3cuJyk7XG4gICAgICAgIHZhciBtZXNzYWdlX2xvY2FsaXphdGlvbl9vcHRzX3N0ciA9IE9uZVNpZ25hbC5fZ2V0UHJvbXB0T3B0aW9uc1F1ZXJ5U3RyaW5nKCk7XG4gICAgICAgIHZhciBjaGlsZFdpbmRvdyA9IHdpbmRvdy5vcGVuKE9uZVNpZ25hbC5faW5pdE9uZVNpZ25hbEh0dHAgKyBcIj9cIiArIG1lc3NhZ2VfbG9jYWxpemF0aW9uX29wdHNfc3RyICsgXCImaG9zdFBhZ2VQcm90b2NvbD1cIiArIGhvc3RQYWdlUHJvdG9jb2wsIFwiX2JsYW5rXCIsICdzY3JvbGxiYXJzPXllcywgd2lkdGg9JyArIGNoaWxkV2lkdGggKyAnLCBoZWlnaHQ9JyArIGNoaWxkSGVpZ2h0ICsgJywgdG9wPScgKyB0b3AgKyAnLCBsZWZ0PScgKyBsZWZ0KTtcblxuICAgICAgICBpZiAoY2hpbGRXaW5kb3cpXG4gICAgICAgICAgY2hpbGRXaW5kb3cuZm9jdXMoKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBPbmVTaWduYWwuX2FkZFNlc3Npb25JZnJhbWUoaG9zdFBhZ2VQcm90b2NvbCk7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgaWYgKGlzU3VwcG9ydGVkU2FmYXJpKCkpIHtcbiAgICAgICAgaWYgKE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc2FmYXJpX3dlYl9pZCkge1xuICAgICAgICAgIE9uZVNpZ25hbC5fZ2V0Tm90aWZpY2F0aW9uUGVybWlzc2lvbihPbmVTaWduYWwuX2luaXRPcHRpb25zLnNhZmFyaV93ZWJfaWQpXG4gICAgICAgICAgICAudGhlbihwZXJtaXNzaW9uID0+IHtcbiAgICAgICAgICAgICAgd2luZG93LnNhZmFyaS5wdXNoTm90aWZpY2F0aW9uLnJlcXVlc3RQZXJtaXNzaW9uKFxuICAgICAgICAgICAgICAgIE9uZVNpZ25hbC5fQVBJX1VSTCArICdzYWZhcmknLFxuICAgICAgICAgICAgICAgIE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc2FmYXJpX3dlYl9pZCxcbiAgICAgICAgICAgICAgICB7YXBwX2lkOiBPbmVTaWduYWwuX2FwcF9pZH0sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIGxvZy5pbmZvKCdTYWZhcmkgcmVxdWVzdFBlcm1pc3Npb24oKSBjYWxsYmFjazonLCBkYXRhKTtcbiAgICAgICAgICAgICAgICAgIHZhciBub3RpZmljYXRpb25QZXJtaXNzaW9uQWZ0ZXJSZXF1ZXN0ID0gT25lU2lnbmFsLl9nZXROb3RpZmljYXRpb25QZXJtaXNzaW9uKE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc2FmYXJpX3dlYl9pZCk7XG4gICAgICAgICAgICAgICAgICBpZiAoZGF0YS5kZXZpY2VUb2tlbikge1xuICAgICAgICAgICAgICAgICAgICBPbmVTaWduYWwuX3JlZ2lzdGVyV2l0aE9uZVNpZ25hbChPbmVTaWduYWwuX2FwcF9pZCwgZGF0YS5kZXZpY2VUb2tlbi50b0xvd2VyQ2FzZSgpLCA3KTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwiT05FX1NJR05BTF9TRVNTSU9OXCIsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgT25lU2lnbmFsLl90cmlnZ2VyRXZlbnRfbmF0aXZlUHJvbXB0UGVybWlzc2lvbkNoYW5nZWQocGVybWlzc2lvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChlID0+IGxvZy5lcnJvcihlKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKG9wdGlvbnMubW9kYWxQcm9tcHQgJiYgb3B0aW9ucy5mcm9tUmVnaXN0ZXJGb3IpIHsgLy8gSWYgSFRUUFMgLSBTaG93IG1vZGFsXG4gICAgICAgIGlmICghaXNQdXNoTm90aWZpY2F0aW9uc1N1cHBvcnRlZCgpKSB7XG4gICAgICAgICAgbG9nLndhcm4oJ0FuIGF0dGVtcHQgd2FzIG1hZGUgdG8gb3BlbiB0aGUgSFRUUFMgbW9kYWwgcGVybWlzc2lvbiBwcm9tcHQsIGJ1dCBwdXNoIG5vdGlmaWNhdGlvbnMgYXJlIG5vdCBzdXBwb3J0ZWQgb24gdGhpcyBicm93c2VyLiBPcGVuaW5nIGNhbmNlbGVkLicpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBPbmVTaWduYWwuaXNQdXNoTm90aWZpY2F0aW9uc0VuYWJsZWQoZnVuY3Rpb24gKHB1c2hFbmFibGVkKSB7XG4gICAgICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnaWQnLCAnT25lU2lnbmFsLWlmcmFtZS1tb2RhbCcpO1xuICAgICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gJzxkaXYgaWQ9XCJub3RpZi1wZXJtaXNzaW9uXCIgc3R5bGU9XCJiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNyk7IHBvc2l0aW9uOiBmaXhlZDsgdG9wOiAwOyBsZWZ0OiAwOyByaWdodDogMDsgYm90dG9tOiAwOyB6LWluZGV4OiAzMDAwMDAwMDAwOyBkaXNwbGF5OiBibG9ja1wiPjwvZGl2Pic7XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50KTtcblxuICAgICAgICAgIHZhciBpZnJhbWVTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgICAgICAgaWZyYW1lU3R5bGUuaW5uZXJIVE1MID0gXCJAbWVkaWEgKG1heC13aWR0aDogNTYwcHgpIHsgLk9uZVNpZ25hbC1wZXJtaXNzaW9uLWlmcmFtZSB7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7fSB9XCJcbiAgICAgICAgICAgICsgXCJAbWVkaWEgKG1pbi13aWR0aDogNTYxcHgpIHsgLk9uZVNpZ25hbC1wZXJtaXNzaW9uLWlmcmFtZSB7IHRvcDogNTAlOyBsZWZ0OiA1MCU7IG1hcmdpbi1sZWZ0OiAtMjc1cHg7IG1hcmdpbi10b3A6IC0yNDhweDt9IH1cIjtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdLmFwcGVuZENoaWxkKGlmcmFtZVN0eWxlKTtcblxuICAgICAgICAgIHZhciBtZXNzYWdlX2xvY2FsaXphdGlvbl9vcHRzX3N0ciA9IE9uZVNpZ25hbC5fZ2V0UHJvbXB0T3B0aW9uc1F1ZXJ5U3RyaW5nKCk7XG5cbiAgICAgICAgICB2YXIgaWZyYW1lTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XG4gICAgICAgICAgaWZyYW1lTm9kZS5jbGFzc05hbWUgPSBcIk9uZVNpZ25hbC1wZXJtaXNzaW9uLWlmcmFtZVwiXG4gICAgICAgICAgaWZyYW1lTm9kZS5zdHlsZS5jc3NUZXh0ID0gXCJiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpOyBwb3NpdGlvbjogZml4ZWQ7XCI7XG4gICAgICAgICAgaWZyYW1lTm9kZS5zcmMgPSBPbmVTaWduYWwuX2luaXRPbmVTaWduYWxIdHRwXG4gICAgICAgICAgICArICc/J1xuICAgICAgICAgICAgKyBtZXNzYWdlX2xvY2FsaXphdGlvbl9vcHRzX3N0clxuICAgICAgICAgICAgKyAnJmlkPScgKyBPbmVTaWduYWwuX2FwcF9pZFxuICAgICAgICAgICAgKyAnJmh0dHBzUHJvbXB0PXRydWUnXG4gICAgICAgICAgICArICcmcHVzaEVuYWJsZWQ9JyArIHB1c2hFbmFibGVkXG4gICAgICAgICAgICArICcmcGVybWlzc2lvbkJsb2NrZWQ9JyArICh0eXBlb2YgTm90aWZpY2F0aW9uID09PSBcInVuZGVmaW5lZFwiIHx8IE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uID09IFwiZGVuaWVkXCIpXG4gICAgICAgICAgICArICcmaG9zdFBhZ2VQcm90b2NvbD0nICsgaG9zdFBhZ2VQcm90b2NvbDtcbiAgICAgICAgICBpZnJhbWVOb2RlLnNldEF0dHJpYnV0ZSgnZnJhbWVib3JkZXInLCAnMCcpO1xuICAgICAgICAgIGlmcmFtZU5vZGUud2lkdGggPSBPbmVTaWduYWwuX3dpbmRvd1dpZHRoLnRvU3RyaW5nKCk7XG4gICAgICAgICAgaWZyYW1lTm9kZS5oZWlnaHQgPSBPbmVTaWduYWwuX3dpbmRvd0hlaWdodC50b1N0cmluZygpO1xuXG4gICAgICAgICAgbG9nLmRlYnVnKCdPcGVuaW5nIEhUVFBTIG1vZGFsIHByb21wdC4nKTtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5vdGlmLXBlcm1pc3Npb25cIikuYXBwZW5kQ2hpbGQoaWZyYW1lTm9kZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoJ3NlcnZpY2VXb3JrZXInIGluIG5hdmlnYXRvcikgLy8gSWYgSFRUUFMgLSBTaG93IG5hdGl2ZSBwcm9tcHRcbiAgICAgICAgT25lU2lnbmFsLl9yZWdpc3RlckZvclczQ1B1c2gob3B0aW9ucyk7XG4gICAgICBlbHNlXG4gICAgICAgIGxvZy5kZWJ1ZygnU2VydmljZSB3b3JrZXJzIGFyZSBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3Nlci4nKTtcblxuICAgICAgRXZlbnQudHJpZ2dlcihPbmVTaWduYWwuRVZFTlRTLlNES19JTklUSUFMSVpFRCk7XG4gICAgfVxuICB9LFxuXG4gIF9yZWdpc3RlckZvclczQ1B1c2g6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICBEYXRhYmFzZS5nZXQoJ0lkcycsICdyZWdpc3RyYXRpb25JZCcpXG4gICAgICAudGhlbihmdW5jdGlvbiBfcmVnaXN0ZXJGb3JXM0NQdXNoX0dvdFJlZ2lzdHJhdGlvbklkKHJlZ2lzdHJhdGlvbklkUmVzdWx0KSB7XG4gICAgICAgIGlmICghcmVnaXN0cmF0aW9uSWRSZXN1bHQgfHwgIW9wdGlvbnMuZnJvbVJlZ2lzdGVyRm9yIHx8IE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uICE9IFwiZ3JhbnRlZFwiKSB7XG4gICAgICAgICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9uKCkudGhlbihmdW5jdGlvbiAoc2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbikge1xuICAgICAgICAgICAgdmFyIHN3X3BhdGggPSBcIlwiO1xuXG4gICAgICAgICAgICBpZiAoT25lU2lnbmFsLl9pbml0T3B0aW9ucy5wYXRoKVxuICAgICAgICAgICAgICBzd19wYXRoID0gT25lU2lnbmFsLl9pbml0T3B0aW9ucy5wYXRoO1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIHNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24gPT09IFwidW5kZWZpbmVkXCIpIC8vIE5vdGhpbmcgcmVnaXN0ZXJlZCwgdmVyeSBmaXJzdCBydW5cbiAgICAgICAgICAgICAgT25lU2lnbmFsLl9yZWdpc3RlclNlcnZpY2VXb3JrZXIoc3dfcGF0aCArIE9uZVNpZ25hbC5TRVJWSUNFX1dPUktFUl9QQVRIKTtcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBpZiAoc2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbi5hY3RpdmUpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbi5hY3RpdmUuc2NyaXB0VVJMLmluZGV4T2Yoc3dfcGF0aCArIE9uZVNpZ25hbC5TRVJWSUNFX1dPUktFUl9QQVRIKSA+IC0xKSB7XG5cbiAgICAgICAgICAgICAgICAgIERhdGFiYXNlLmdldCgnSWRzJywgJ1dPUktFUjFfT05FX1NJR05BTF9TV19WRVJTSU9OJylcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHZlcnNpb25SZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAodmVyc2lvblJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZlcnNpb25SZXN1bHQuaWQgIT0gT25lU2lnbmFsLl9WRVJTSU9OKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBPbmVTaWduYWwuX3JlZ2lzdGVyU2VydmljZVdvcmtlcihzd19wYXRoICsgT25lU2lnbmFsLlNFUlZJQ0VfV09SS0VSX1VQREFURVJfUEFUSCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIE9uZVNpZ25hbC5fcmVnaXN0ZXJTZXJ2aWNlV29ya2VyKHN3X3BhdGggKyBPbmVTaWduYWwuU0VSVklDRV9XT1JLRVJfUEFUSCk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIE9uZVNpZ25hbC5fcmVnaXN0ZXJTZXJ2aWNlV29ya2VyKHN3X3BhdGggKyBPbmVTaWduYWwuU0VSVklDRV9XT1JLRVJfUEFUSCk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoc2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbi5hY3RpdmUuc2NyaXB0VVJMLmluZGV4T2Yoc3dfcGF0aCArIE9uZVNpZ25hbC5TRVJWSUNFX1dPUktFUl9VUERBVEVSX1BBVEgpID4gLTEpIHtcblxuICAgICAgICAgICAgICAgICAgRGF0YWJhc2UuZ2V0KCdJZHMnLCAnV09SS0VSMl9PTkVfU0lHTkFMX1NXX1ZFUlNJT04nKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodmVyc2lvblJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgIGlmICh2ZXJzaW9uUmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmVyc2lvblJlc3VsdC5pZCAhPSBPbmVTaWduYWwuX1ZFUlNJT04pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIE9uZVNpZ25hbC5fcmVnaXN0ZXJTZXJ2aWNlV29ya2VyKHN3X3BhdGggKyBPbmVTaWduYWwuU0VSVklDRV9XT1JLRVJfUEFUSCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIE9uZVNpZ25hbC5fcmVnaXN0ZXJTZXJ2aWNlV29ya2VyKHN3X3BhdGggKyBPbmVTaWduYWwuU0VSVklDRV9XT1JLRVJfVVBEQVRFUl9QQVRIKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgT25lU2lnbmFsLl9yZWdpc3RlclNlcnZpY2VXb3JrZXIoc3dfcGF0aCArIE9uZVNpZ25hbC5TRVJWSUNFX1dPUktFUl9VUERBVEVSX1BBVEgpO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBsb2cuZXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBlbHNlIGlmIChzZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uLmluc3RhbGxpbmcgPT0gbnVsbClcbiAgICAgICAgICAgICAgICBPbmVTaWduYWwuX3JlZ2lzdGVyU2VydmljZVdvcmtlcihzd19wYXRoICsgT25lU2lnbmFsLlNFUlZJQ0VfV09SS0VSX1BBVEgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgfSk7XG4gICAgO1xuICB9LFxuXG4gIF9yZWdpc3RlclNlcnZpY2VXb3JrZXI6IGZ1bmN0aW9uKGZ1bGxfc3dfYW5kX3BhdGgpIHtcbiAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3RlcihmdWxsX3N3X2FuZF9wYXRoLCBPbmVTaWduYWwuU0VSVklDRV9XT1JLRVJfUEFSQU0pLnRoZW4oT25lU2lnbmFsLl9lbmFibGVOb3RpZmljYXRpb25zLCBPbmVTaWduYWwuX3JlZ2lzdGVyRXJyb3IpO1xuICB9LFxuXG4gIF9hZGRTZXNzaW9uSWZyYW1lOiBmdW5jdGlvbiAoaG9zdFBhZ2VQcm90b2NvbCkge1xuICAgIGxvZy5kZWJ1ZyhgQ2FsbGVkICVjX2FkZFNlc3Npb25JZnJhbWUoJHtKU09OLnN0cmluZ2lmeShob3N0UGFnZVByb3RvY29sLCBudWxsLCA0KX0pYCwgZ2V0Q29uc29sZVN0eWxlKCdjb2RlJykpO1xuXG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xuICAgIG5vZGUuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIG5vZGUuc3JjID0gT25lU2lnbmFsLl9pbml0T25lU2lnbmFsSHR0cCArIFwiSWZyYW1lXCI7XG4gICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJPTkVfU0lHTkFMX1NFU1NJT05cIikpXG4gICAgICBub2RlLnNyYyArPSBcIj9zZXNzaW9uPXRydWVcIlxuICAgICAgICArIFwiJmhvc3RQYWdlUHJvdG9jb2w9XCIgKyBob3N0UGFnZVByb3RvY29sO1xuICAgIGVsc2VcbiAgICAgIG5vZGUuc3JjICs9IFwiP2hvc3RQYWdlUHJvdG9jb2w9XCIgKyBob3N0UGFnZVByb3RvY29sXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub2RlKTtcblxuICAgIE9uZVNpZ25hbC5fc2Vzc2lvbklmcmFtZUFkZGVkID0gdHJ1ZTtcbiAgfSxcblxuICBfcmVnaXN0ZXJFcnJvcjogZnVuY3Rpb24gKGVycikge1xuICAgIGxvZy5lcnJvcihcIlNlcnZpY2VXb3JrZXIgcmVnaXN0cmF0aW9uXCIsIGVycik7XG4gIH0sXG5cbiAgX2VuYWJsZU5vdGlmaWNhdGlvbnM6IGZ1bmN0aW9uIChleGlzdGluZ1NlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24pIHsgLy8gaXMgU2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbiB0eXBlXG4gICAgaWYgKGV4aXN0aW5nU2VydmljZVdvcmtlclJlZ2lzdHJhdGlvbilcbiAgICAgIGxvZy5kZWJ1ZygnQW4gb2xkZXIgU2VydmljZVdvcmtlciBleGlzdHM6JywgZXhpc3RpbmdTZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uKTtcbiAgICBpZiAoISgnUHVzaE1hbmFnZXInIGluIHdpbmRvdykpIHtcbiAgICAgIGxvZy5lcnJvcihcIlB1c2ggbWVzc2FnaW5nIGlzIG5vdCBzdXBwb3J0ZWQuIE5vIFB1c2hNYW5hZ2VyLlwiKTtcbiAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXCJPTkVfU0lHTkFMX1NFU1NJT05cIiwgdHJ1ZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCEoJ3Nob3dOb3RpZmljYXRpb24nIGluIFNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24ucHJvdG90eXBlKSkge1xuICAgICAgbG9nLmVycm9yKFwiTm90aWZpY2F0aW9ucyBhcmUgbm90IHN1cHBvcnRlZC4gc2hvd05vdGlmaWNhdGlvbiBub3QgYXZhaWxhYmxlIGluIFNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24uXCIpO1xuICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcIk9ORV9TSUdOQUxfU0VTU0lPTlwiLCB0cnVlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoTm90aWZpY2F0aW9uLnBlcm1pc3Npb24gPT09ICdkZW5pZWQnKSB7XG4gICAgICBsb2cud2FybihcIlRoZSB1c2VyIGhhcyBibG9ja2VkIG5vdGlmaWNhdGlvbnMuXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlYWR5LnRoZW4oZnVuY3Rpb24gKHNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24pIHtcbiAgICAgIGxvZy5pbmZvKCdTZXJ2aWNlIHdvcmtlciBub3cgYWN0aXZlOicsIHNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24pO1xuICAgICAgT25lU2lnbmFsLl9zdWJzY3JpYmVGb3JQdXNoKHNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24pO1xuICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgfSk7XG4gICAgO1xuICB9LFxuXG4gIC8qXG4gICBSZXR1cm5zIHRoZSBjdXJyZW50IGJyb3dzZXItYWdub3N0aWMgbm90aWZpY2F0aW9uIHBlcm1pc3Npb24gYXMgXCJkZWZhdWx0XCIsIFwiZ3JhbnRlZFwiLCBcImRlbmllZFwiLlxuICAgc2FmYXJpV2ViSWQ6IFVzZWQgb25seSB0byBnZXQgdGhlIGN1cnJlbnQgbm90aWZpY2F0aW9uIHBlcm1pc3Npb24gc3RhdGUgaW4gU2FmYXJpIChyZXF1aXJlZCBhcyBwYXJ0IG9mIHRoZSBzcGVjKS5cbiAgICovXG4gIF9nZXROb3RpZmljYXRpb25QZXJtaXNzaW9uOiBmdW5jdGlvbiAoc2FmYXJpV2ViSWQpIHtcbiAgICAvKlxuICAgICBGb3IgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zLCBnZXQgZGlyZWN0bHkgYW5kIHJldHVybjpcbiAgICAgLSBTYWZhcmksIGJlY2F1c2UgdGhlIHBlcm1pc3Npb24gcHJvcGVydHkgaXMgbm90IHNjb3BlZCBieSBvcmlnaW5cbiAgICAgLSBIVFRQUyB3aXRob3V0IGEgc3ViZG9tYWluLCBiZWNhdXNlIHRoZSBwZXJtaXNzaW9uIGlzIHRoZW4gYWNjZXNzZWQgZGlyZWN0bHlcblxuICAgICBPdGhlcndpc2UgdXNlIGEgcG9zdG1lc3NhZ2UgZm9yOlxuICAgICAtIEhUVFAsIHRoaXMgb25lIGlzIG9idmlvdXNcbiAgICAgLSBIVFRQUyB3aXRoIGEgc3ViZG9tYWluLCB3aGVuIHNvbWVvbmUgd2FudHMgdG8gY29uc29saWRhdGUgbXVsdGlwbGUgSFRUUFMgc2l0ZXMgdW5kZXIgYSBzdWJkb21haW5cbiAgICAgKi9cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgbGV0IGlzSHR0cHNQcm90b2NvbCA9IChsb2NhdGlvbi5wcm90b2NvbCA9PT0gJ2h0dHBzOicpO1xuICAgICAgbGV0IG5vU3ViZG9tYWluID0gIU9uZVNpZ25hbC5fdXNlSHR0cE1vZGU7XG4gICAgICBpZiAoQnJvd3Nlci5zYWZhcmkgfHxcbiAgICAgICAgKGlzSHR0cHNQcm90b2NvbCAmJiBub1N1YmRvbWFpbikpIHtcbiAgICAgICAgaWYgKHdpbmRvdy5zYWZhcmkpIHtcbiAgICAgICAgICAvLyBUaGUgdXNlciBpcyBvbiBTYWZhcmlcbiAgICAgICAgICAvLyBBIHdlYiBJRCBpcyByZXF1aXJlZCB0byBkZXRlcm1pbmUgdGhlIGN1cnJlbnQgbm90aWZpY2lhdGlvbiBwZXJtaXNzaW9uXG4gICAgICAgICAgaWYgKHNhZmFyaVdlYklkKSB7XG4gICAgICAgICAgICByZXNvbHZlKHdpbmRvdy5zYWZhcmkucHVzaE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uKHNhZmFyaVdlYklkKS5wZXJtaXNzaW9uKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBUaGUgdXNlciBkaWRuJ3Qgc2V0IHVwIFNhZmFyaSB3ZWIgcHVzaCBwcm9wZXJseTsgbm90aWZpY2F0aW9ucyBhcmUgdW5saWtlbHkgdG8gYmUgZW5hYmxlZFxuICAgICAgICAgICAgcmVzb2x2ZShcImRlZmF1bHRcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIC8vIElkZW50aWNhbCBBUEkgb24gRmlyZWZveCBhbmQgQ2hyb21lXG4gICAgICAgICAgcmVzb2x2ZShOb3RpZmljYXRpb24ucGVybWlzc2lvbik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCB1aWQgPSBndWlkKCk7XG4gICAgICAgIExpbWl0U3RvcmUucHV0KGBfZ2V0Tm90aWZpY2F0aW9uUGVybWlzc2lvblByb21pc2VSZXNvbHZlLiR7dWlkfWAsIHJlc29sdmUpO1xuICAgICAgICBpZiAoT25lU2lnbmFsLl9pZnJhbWVQb3J0KSB7XG4gICAgICAgICAgT25lU2lnbmFsLl9pZnJhbWVQb3J0LnBvc3RNZXNzYWdlKHtyZW1vdGVHZXROb3RpZmljYXRpb25QZXJtaXNzaW9uOiB0cnVlLCBzYWZhcmlXZWJJZDogc2FmYXJpV2ViSWQsIHByb21pc2VJZDogdWlkLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0pO1xuICAgICAgICAgIC8vIFRoaXMgcHJvbWlzZSB3aWxsIGV2ZW50dWFsbHkgYmUgcmVzb2x2ZWQgYnkgX2xpc3RlbmVyX3JlY2VpdmVNZXNzYWdlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gVGhpcyBlbnRpcmUgZnVuY3Rpb24gd2FzIGNhbGxlZCBiZWZvcmUgYW4gaUZyYW1lIHBvcnQgaXMgZXZlbiBhdmFpbGFibGVcbiAgICAgICAgICByZXNvbHZlKFwiZGVmYXVsdFwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG4gIF90cmlnZ2VyRXZlbnRfY3VzdG9tUHJvbXB0Q2xpY2tlZDogZnVuY3Rpb24gKGNsaWNrUmVzdWx0KSB7XG4gICAgdmFyIHJlY2VudFBlcm1pc3Npb25zID0gTGltaXRTdG9yZS5wdXQoJ3Byb21wdC5jdXN0b20ucGVybWlzc2lvbicsIGNsaWNrUmVzdWx0KTtcbiAgICBFdmVudC50cmlnZ2VyKE9uZVNpZ25hbC5FVkVOVFMuQ1VTVE9NX1BST01QVF9DTElDS0VELCB7XG4gICAgICByZXN1bHQ6IGNsaWNrUmVzdWx0XG4gICAgfSk7XG4gIH0sXG5cbiAgX3RyaWdnZXJFdmVudF9uYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZDogZnVuY3Rpb24gKGZyb20sIHRvLCB1cGRhdGVJZklkZW50aWNhbCA9IGZhbHNlKSB7XG4gICAgaWYgKHRvID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHZhciBwcm9taXNlID0gT25lU2lnbmFsLl9nZXROb3RpZmljYXRpb25QZXJtaXNzaW9uKE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc2FmYXJpX3dlYl9pZCkudGhlbigocGVybWlzc2lvbikgPT4ge1xuICAgICAgICB0byA9IHBlcm1pc3Npb247XG4gICAgICB9KVxuICAgICAgICAuY2F0Y2goZSA9PiBsb2cuZXJyb3IoZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICBwcm9taXNlLnRoZW4oKCkgPT4ge1xuICAgICAgaWYgKGZyb20gIT09IHRvIHx8IHVwZGF0ZUlmSWRlbnRpY2FsKSB7XG4gICAgICAgIHZhciByZWNlbnRQZXJtaXNzaW9ucyA9IExpbWl0U3RvcmUucHV0KCdub3RpZmljYXRpb24ucGVybWlzc2lvbicsIHRvKTtcbiAgICAgICAgRXZlbnQudHJpZ2dlcihPbmVTaWduYWwuRVZFTlRTLk5BVElWRV9QUk9NUFRfUEVSTUlTU0lPTkNIQU5HRUQsIHtcbiAgICAgICAgICBmcm9tOiBmcm9tLFxuICAgICAgICAgIHRvOiB0b1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICBfdHJpZ2dlckV2ZW50X3N1YnNjcmlwdGlvbkNoYW5nZWQ6IGZ1bmN0aW9uICh0bykge1xuICAgIEV2ZW50LnRyaWdnZXIoT25lU2lnbmFsLkVWRU5UUy5TVUJTQ1JJUFRJT05fQ0hBTkdFRCwgdG8pO1xuICB9LFxuXG4gIF90cmlnZ2VyRXZlbnRfZGJWYWx1ZVJldHJpZXZlZDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgRXZlbnQudHJpZ2dlcihEYXRhYmFzZS5FVkVOVFMuUkVUUklFVkVELCB2YWx1ZSk7XG4gIH0sXG5cbiAgX3RyaWdnZXJFdmVudF9kYlZhbHVlU2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBFdmVudC50cmlnZ2VyKERhdGFiYXNlLkVWRU5UUy5TRVQsIHZhbHVlKTtcbiAgfSxcblxuICBfdHJpZ2dlckV2ZW50X2ludGVybmFsU3Vic2NyaXB0aW9uU2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICBFdmVudC50cmlnZ2VyKE9uZVNpZ25hbC5FVkVOVFMuSU5URVJOQUxfU1VCU0NSSVBUSU9OU0VULCB2YWx1ZSk7XG4gIH0sXG5cbiAgX3N1YnNjcmliZUZvclB1c2g6IGZ1bmN0aW9uIChzZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uKSB7XG4gICAgdmFyIG5vdGlmaWNhdGlvblBlcm1pc3Npb25CZWZvcmVSZXF1ZXN0ID0gJyc7XG5cbiAgICBPbmVTaWduYWwuX2dldE5vdGlmaWNhdGlvblBlcm1pc3Npb24oT25lU2lnbmFsLl9pbml0T3B0aW9ucy5zYWZhcmlfd2ViX2lkKS50aGVuKChwZXJtaXNzaW9uKSA9PiB7XG4gICAgICAgIG5vdGlmaWNhdGlvblBlcm1pc3Npb25CZWZvcmVSZXF1ZXN0ID0gcGVybWlzc2lvbjtcbiAgICAgIH0pXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIHJldHVybiBzZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uLnB1c2hNYW5hZ2VyLnN1YnNjcmliZSh7dXNlclZpc2libGVPbmx5OiB0cnVlfSk7XG4gICAgICB9KVxuICAgICAgLnRoZW4oZnVuY3Rpb24gKHN1YnNjcmlwdGlvbikge1xuICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwiT05FX1NJR05BTF9OT1RJRklDQVRJT05fUEVSTUlTU0lPTlwiLCBOb3RpZmljYXRpb24ucGVybWlzc2lvbik7XG5cbiAgICAgICAgRGF0YWJhc2UuZ2V0KCdJZHMnLCAnYXBwSWQnKVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIF9zdWJzY3JpYmVGb3JQdXNoX0dvdEFwcElkKGFwcElkUmVzdWx0KSB7XG4gICAgICAgICAgICB2YXIgYXBwSWQgPSBhcHBJZFJlc3VsdC5pZDtcbiAgICAgICAgICAgIGxvZy5kZWJ1ZyhcIkNhbGxlZCBPbmVTaWduYWwuX3N1YnNjcmliZUZvclB1c2goKSAtPiBzZXJ2aWNlV29ya2VyUmVnaXN0cmF0aW9uLnB1c2hNYW5hZ2VyLnN1YnNjcmliZSgpLlwiKTtcblxuICAgICAgICAgICAgdmFyIHJlZ2lzdHJhdGlvbklkID0gbnVsbDtcbiAgICAgICAgICAgIGlmIChzdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBzdWJzY3JpcHRpb24uc3Vic2NyaXB0aW9uSWQgIT0gXCJ1bmRlZmluZWRcIikgLy8gQ2hyb21lIDQzICYgNDJcbiAgICAgICAgICAgICAgICByZWdpc3RyYXRpb25JZCA9IHN1YnNjcmlwdGlvbi5zdWJzY3JpcHRpb25JZDtcbiAgICAgICAgICAgICAgZWxzZSAgLy8gQ2hyb21lIDQ0KyBhbmQgRmlyZUZveFxuICAgICAgICAgICAgICAgIHJlZ2lzdHJhdGlvbklkID0gc3Vic2NyaXB0aW9uLmVuZHBvaW50LnJlcGxhY2UobmV3IFJlZ0V4cChcIl4oaHR0cHM6Ly9hbmRyb2lkLmdvb2dsZWFwaXMuY29tL2djbS9zZW5kL3xodHRwczovL3VwZGF0ZXMucHVzaC5zZXJ2aWNlcy5tb3ppbGxhLmNvbS9wdXNoLylcIiksIFwiXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICBsb2cud2FybignQ291bGQgbm90IHN1YnNjcmliZSB5b3VyIGJyb3dzZXIgZm9yIHB1c2ggbm90aWZpY2F0aW9ucy4nKTtcblxuICAgICAgICAgICAgT25lU2lnbmFsLl9yZWdpc3RlcldpdGhPbmVTaWduYWwoYXBwSWQsIHJlZ2lzdHJhdGlvbklkLCBpc1N1cHBvcnRlZEZpcmVGb3goKSA/IDggOiA1KTtcblxuICAgICAgICAgICAgaWYgKCFPbmVTaWduYWwuX3VzaW5nTmF0aXZlUGVybWlzc2lvbkhvb2spIHtcbiAgICAgICAgICAgICAgT25lU2lnbmFsLl90cmlnZ2VyRXZlbnRfbmF0aXZlUHJvbXB0UGVybWlzc2lvbkNoYW5nZWQobm90aWZpY2F0aW9uUGVybWlzc2lvbkJlZm9yZVJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBsb2cuZXJyb3IoZSk7XG4gICAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGxvZy5lcnJvcignRXJyb3Igd2hpbGUgc3Vic2NyaWJpbmcgZm9yIHB1c2g6JywgZSk7XG5cbiAgICAgICAgLy8gTmV3IGFkZGl0aW9uICgxMi8yMi8yMDE1KSwgYWRkaW5nIHN1cHBvcnQgZm9yIGRldGVjdGluZyB0aGUgY2FuY2VsICdYJ1xuICAgICAgICAvLyBDaHJvbWUgZG9lc24ndCBzaG93IHdoZW4gdGhlIHVzZXIgY2xpY2tlZCAnWCcgZm9yIGNhbmNlbFxuICAgICAgICAvLyBXZSBnZXQgdGhlIHNhbWUgZXJyb3IgYXMgaWYgdGhlIHVzZXIgaGFkIGNsaWNrZWQgZGVuaWVkLCBidXQgd2UgY2FuIGNoZWNrIE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uIHRvIHNlZSBpZiBpdCBpcyBzdGlsbCAnZGVmYXVsdCdcbiAgICAgICAgT25lU2lnbmFsLl9nZXROb3RpZmljYXRpb25QZXJtaXNzaW9uKCkudGhlbigocGVybWlzc2lvbikgPT4ge1xuICAgICAgICAgIGlmIChwZXJtaXNzaW9uID09PSAnZGVmYXVsdCcpIHtcbiAgICAgICAgICAgIC8vIFRoZSB1c2VyIGNsaWNrZWQgJ1gnXG4gICAgICAgICAgICBPbmVTaWduYWwuX3RyaWdnZXJFdmVudF9uYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZChub3RpZmljYXRpb25QZXJtaXNzaW9uQmVmb3JlUmVxdWVzdCwgcGVybWlzc2lvbiwgdHJ1ZSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKCFPbmVTaWduYWwuX3VzaW5nTmF0aXZlUGVybWlzc2lvbkhvb2spXG4gICAgICAgICAgICBPbmVTaWduYWwuX3RyaWdnZXJFdmVudF9uYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZChub3RpZmljYXRpb25QZXJtaXNzaW9uQmVmb3JlUmVxdWVzdCwgcGVybWlzc2lvbik7XG5cbiAgICAgICAgICBpZiAoZS5jb2RlID09IDIwICYmIG9wZW5lciAmJiBPbmVTaWduYWwuX2h0dHBSZWdpc3RyYXRpb24pXG4gICAgICAgICAgICB3aW5kb3cuY2xvc2UoKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGUgPT4gbG9nLmVycm9yKGUpKTtcbiAgICAgIH0pO1xuICB9LFxuXG4gIHNlbmRUYWc6IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgdmFyIGpzb25LZXlWYWx1ZSA9IHt9O1xuICAgIGpzb25LZXlWYWx1ZVtrZXldID0gdmFsdWU7XG4gICAgT25lU2lnbmFsLnNlbmRUYWdzKGpzb25LZXlWYWx1ZSk7XG4gIH0sXG5cbiAgc2VuZFRhZ3M6IGZ1bmN0aW9uIChqc29uUGFpcikge1xuICAgIERhdGFiYXNlLmdldCgnSWRzJywgJ3VzZXJJZCcpXG4gICAgICAudGhlbihmdW5jdGlvbiBzZW5kVGFnc19Hb3RVc2VySWQodXNlcklkUmVzdWx0KSB7XG4gICAgICAgIGlmICh1c2VySWRSZXN1bHQpXG4gICAgICAgICAgT25lU2lnbmFsLl9zZW5kVG9PbmVTaWduYWxBcGkoXCJwbGF5ZXJzL1wiICsgdXNlcklkUmVzdWx0LmlkLCBcIlBVVFwiLCB7XG4gICAgICAgICAgICBhcHBfaWQ6IE9uZVNpZ25hbC5fYXBwX2lkLFxuICAgICAgICAgICAgdGFnczoganNvblBhaXJcbiAgICAgICAgICB9KTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgaWYgKE9uZVNpZ25hbC5fdGFnc1RvU2VuZE9uUmVnaXN0ZXIgPT0gbnVsbClcbiAgICAgICAgICAgIE9uZVNpZ25hbC5fdGFnc1RvU2VuZE9uUmVnaXN0ZXIgPSBqc29uUGFpcjtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciByZXN1bHRPYmogPSB7fTtcbiAgICAgICAgICAgIGZvciAodmFyIF9vYmogaW4gT25lU2lnbmFsLl90YWdzVG9TZW5kT25SZWdpc3RlcikgcmVzdWx0T2JqW19vYmpdID0gT25lU2lnbmFsLl90YWdzVG9TZW5kT25SZWdpc3Rlcltfb2JqXTtcbiAgICAgICAgICAgIGZvciAodmFyIF9vYmogaW4ganNvblBhaXIpIHJlc3VsdE9ialtfb2JqXSA9IGpzb25QYWlyW19vYmpdO1xuICAgICAgICAgICAgT25lU2lnbmFsLl90YWdzVG9TZW5kT25SZWdpc3RlciA9IHJlc3VsdE9iajtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbG9nLmVycm9yKCdzZW5kVGFnczonLCBlKTtcbiAgICAgIH0pO1xuICB9LFxuXG4gIGRlbGV0ZVRhZzogZnVuY3Rpb24gKGtleSkge1xuICAgIE9uZVNpZ25hbC5kZWxldGVUYWdzKFtrZXldKTtcbiAgfSxcblxuICBkZWxldGVUYWdzOiBmdW5jdGlvbiAoa2V5QXJyYXkpIHtcbiAgICB2YXIganNvblBhaXIgPSB7fTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5QXJyYXkubGVuZ3RoO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspXG4gICAgICBqc29uUGFpcltrZXlBcnJheVtpXV0gPSBcIlwiO1xuXG4gICAgT25lU2lnbmFsLnNlbmRUYWdzKGpzb25QYWlyKTtcbiAgfSxcblxuICBfaGFuZGxlTm90aWZpY2F0aW9uT3BlbmVkOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgbm90aWZpY2F0aW9uRGF0YSA9IEpTT04ucGFyc2UoZXZlbnQubm90aWZpY2F0aW9uLnRhZyk7XG4gICAgZXZlbnQubm90aWZpY2F0aW9uLmNsb3NlKCk7XG5cbiAgICBQcm9taXNlLmFsbChbRGF0YWJhc2UuZ2V0KCdJZHMnLCAnYXBwSWQnKSwgRGF0YWJhc2UuZ2V0KCdJZHMnLCAndXNlcklkJyldKVxuICAgICAgLnRoZW4oZnVuY3Rpb24gX2hhbmRsZU5vdGlmaWNhdGlvbk9wZW5lZF9Hb3RBcHBVc2VySWRzKHJlc3VsdHMpIHtcbiAgICAgICAgdmFyIGFwcElkUmVzdWx0ID0gcmVzdWx0c1swXTtcbiAgICAgICAgdmFyIHVzZXJJZFJlc3VsdCA9IHJlc3VsdHNbMV07XG4gICAgICAgIGlmIChhcHBJZFJlc3VsdCAmJiB1c2VySWRSZXN1bHQpIHtcbiAgICAgICAgICBPbmVTaWduYWwuX3NlbmRUb09uZVNpZ25hbEFwaShcIm5vdGlmaWNhdGlvbnMvXCIgKyBub3RpZmljYXRpb25EYXRhLmlkLCBcIlBVVFwiLCB7XG4gICAgICAgICAgICBhcHBfaWQ6IGFwcElkUmVzdWx0LmlkLFxuICAgICAgICAgICAgcGxheWVyX2lkOiB1c2VySWRSZXN1bHQuaWQsXG4gICAgICAgICAgICBvcGVuZWQ6IHRydWVcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICBsb2cuZXJyb3IoZSk7XG4gICAgICB9KTtcbiAgICA7XG5cbiAgICBldmVudC53YWl0VW50aWwoXG4gICAgICBjbGllbnRzLm1hdGNoQWxsKHt0eXBlOiBcIndpbmRvd1wifSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGNsaWVudExpc3QpIHtcbiAgICAgICAgICB2YXIgbGF1bmNoVVJMID0gcmVnaXN0cmF0aW9uLnNjb3BlO1xuICAgICAgICAgIGlmIChPbmVTaWduYWwuX2RlZmF1bHRMYXVuY2hVUkwpXG4gICAgICAgICAgICBsYXVuY2hVUkwgPSBPbmVTaWduYWwuX2RlZmF1bHRMYXVuY2hVUkw7XG4gICAgICAgICAgaWYgKG5vdGlmaWNhdGlvbkRhdGEubGF1bmNoVVJMKVxuICAgICAgICAgICAgbGF1bmNoVVJMID0gbm90aWZpY2F0aW9uRGF0YS5sYXVuY2hVUkw7XG5cbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsaWVudExpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBjbGllbnQgPSBjbGllbnRMaXN0W2ldO1xuICAgICAgICAgICAgaWYgKCdmb2N1cycgaW4gY2xpZW50ICYmIGNsaWVudC51cmwgPT0gbGF1bmNoVVJMKSB7XG4gICAgICAgICAgICAgIGNsaWVudC5mb2N1cygpO1xuXG4gICAgICAgICAgICAgIC8vIHRhcmdldE9yaWdpbiBub3QgdmFsaWQgaGVyZSBhcyB0aGUgc2VydmljZSB3b3JrZXIgb3ducyB0aGUgcGFnZS5cbiAgICAgICAgICAgICAgY2xpZW50LnBvc3RNZXNzYWdlKG5vdGlmaWNhdGlvbkRhdGEpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGxhdW5jaFVSTCAhPT0gJ2phdmFzY3JpcHQ6dm9pZCgwKTsnICYmIGxhdW5jaFVSTCAhPT0gJ2RvX25vdF9vcGVuJykge1xuICAgICAgICAgICAgRGF0YWJhc2UucHV0KFwiTm90aWZpY2F0aW9uT3BlbmVkXCIsIHt1cmw6IGxhdW5jaFVSTCwgZGF0YTogbm90aWZpY2F0aW9uRGF0YX0pO1xuICAgICAgICAgICAgY2xpZW50cy5vcGVuV2luZG93KGxhdW5jaFVSTCkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgIC8vIFNob3VsZCBvbmx5IGZhbGwgaW50byBoZXJlIGlmIGdvaW5nIHRvIGFuIGV4dGVybmFsIFVSTCBvbiBDaHJvbWUgb2xkZXIgdGhhbiA0My5cbiAgICAgICAgICAgICAgY2xpZW50cy5vcGVuV2luZG93KHJlZ2lzdHJhdGlvbi5zY29wZSArIFwicmVkaXJlY3Rvci5odG1sP3VybD1cIiArIGxhdW5jaFVSTCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGxvZy5lcnJvcihlKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9LFxuXG4gIC8vIEhUVFAgJiBIVFRQUyAtIFJ1bnMgb24gbWFpbiBwYWdlIChyZWNlaXZlcyBldmVudHMgZnJvbSBpZnJhbWUgLyBwb3B1cClcbiAgX2xpc3RlbmVyX3JlY2VpdmVNZXNzYWdlOiBmdW5jdGlvbiByZWNlaXZlTWVzc2FnZShldmVudCkge1xuICAgIGlmIChldmVudC5kYXRhLmZyb20pIHtcbiAgICAgIHZhciBmcm9tID0gZXZlbnQuZGF0YS5mcm9tLmNhcGl0YWxpemUoKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZnJvbSA9ICdJRnJhbWUvUG9wdXAnO1xuICAgIH1cbiAgICBsb2cuZGVidWcoYCVjJHtFbnZpcm9ubWVudC5nZXRFbnYoKS5jYXBpdGFsaXplKCl9IOKsuCAke2Zyb219OmAsIGdldENvbnNvbGVTdHlsZSgncG9zdG1lc3NhZ2UnKSwgZXZlbnQuZGF0YSk7XG5cbiAgICBpZiAoT25lU2lnbmFsLl9pbml0T3B0aW9ucyA9PSB1bmRlZmluZWQpXG4gICAgICByZXR1cm47XG5cbiAgICBpZiAoIV9fREVWX18gJiYgZXZlbnQub3JpZ2luICE9PSBcIlwiICYmIGV2ZW50Lm9yaWdpbiAhPT0gXCJodHRwczovL29uZXNpZ25hbC5jb21cIiAmJiBldmVudC5vcmlnaW4gIT09IFwiaHR0cHM6Ly9cIiArIE9uZVNpZ25hbC5faW5pdE9wdGlvbnMuc3ViZG9tYWluTmFtZSArIFwiLm9uZXNpZ25hbC5jb21cIilcbiAgICAgIHJldHVybjtcblxuICAgIGlmIChldmVudC5kYXRhLm9uZVNpZ25hbEluaXRQYWdlUmVhZHkpIHsgLy8gT25seSBjYWxsZWQgb24gSFRUUCBwYWdlcy5cbiAgICAgIHZhciBldmVudERhdGEgPSBldmVudC5kYXRhLm9uZVNpZ25hbEluaXRQYWdlUmVhZHk7XG5cbiAgICAgIGlmIChldmVudERhdGEuaXNJZnJhbWUpIHtcbiAgICAgICAgT25lU2lnbmFsLl9pZnJhbWVQb3J0ID0gZXZlbnQucG9ydHNbMF07XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudERhdGEudXNlcklkKVxuICAgICAgICBEYXRhYmFzZS5wdXQoXCJJZHNcIiwge3R5cGU6IFwidXNlcklkXCIsIGlkOiBldmVudERhdGEudXNlcklkfSk7XG4gICAgICBpZiAoZXZlbnREYXRhLnJlZ2lzdHJhdGlvbklkKVxuICAgICAgICBEYXRhYmFzZS5wdXQoXCJJZHNcIiwge3R5cGU6IFwicmVnaXN0cmF0aW9uSWRcIiwgaWQ6IGV2ZW50RGF0YS5yZWdpc3RyYXRpb25JZH0pO1xuXG4gICAgICBPbmVTaWduYWwuX2ZpcmVOb3RpZmljYXRpb25FbmFibGVkQ2FsbGJhY2soZXZlbnREYXRhLmlzUHVzaEVuYWJsZWQpO1xuICAgICAgT25lU2lnbmFsLl9zZW5kVW5zZW50VGFncygpO1xuXG4gICAgICBEYXRhYmFzZS5nZXQoXCJPcHRpb25zXCIpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uIF9saXN0ZW5lcl9yZWNlaXZlTWVzc2FnZShvcHRpb25zKSB7XG4gICAgICAgICAgaWYgKCFvcHRpb25zLmRlZmF1bHRVcmwpXG4gICAgICAgICAgICBvcHRpb25zLmRlZmF1bHRVcmwgPSBkb2N1bWVudC5VUkw7XG4gICAgICAgICAgaWYgKCFvcHRpb25zLmRlZmF1bHRUaXRsZSlcbiAgICAgICAgICAgIG9wdGlvbnMuZGVmYXVsdFRpdGxlID0gZG9jdW1lbnQudGl0bGU7XG5cbiAgICAgICAgICBvcHRpb25zLnBhcmVudF91cmwgPSBkb2N1bWVudC5VUkw7XG4gICAgICAgICAgZXZlbnQucG9ydHNbMF0ucG9zdE1lc3NhZ2Uoe2luaXRPcHRpb25zOiBvcHRpb25zLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0pO1xuXG4gICAgICAgICAgLy8gRm9yIEhUVFAgc2l0ZXMsIG9ubHkgbm93IGlzIHRoZSBTREsgaW5pdGlhbGl6ZWQgYW5kIGFibGUgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgaWZyYW1lXG4gICAgICAgICAgRXZlbnQudHJpZ2dlcihPbmVTaWduYWwuRVZFTlRTLlNES19JTklUSUFMSVpFRCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGxvZy5lcnJvcignX2xpc3RlbmVyX3JlY2VpdmVNZXNzYWdlOicsIGUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZXZlbnQuZGF0YS5jdXJyZW50Tm90aWZpY2F0aW9uUGVybWlzc2lvbikgeyAvLyBTdWJkb21haW4gT25seVxuICAgICAgT25lU2lnbmFsLl9maXJlTm90aWZpY2F0aW9uRW5hYmxlZENhbGxiYWNrKGV2ZW50LmRhdGEuY3VycmVudE5vdGlmaWNhdGlvblBlcm1pc3Npb24uaXNQdXNoRW5hYmxlZCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGV2ZW50LmRhdGEucmVtb3RlR2V0RGJWYWx1ZSkge1xuICAgICAgbGV0IHByb21pc2VJZCA9IGV2ZW50LmRhdGEucHJvbWlzZUlkO1xuICAgICAgbGV0IHJlc3VsdCA9IGV2ZW50LmRhdGEucmVzdWx0O1xuICAgICAgbGV0IHByb21pc2VSZXNvbHZlID0gTGltaXRTdG9yZS5nZXRMYXN0KGBnZXRTdWJzY3JpcHRpb25Qcm9taXNlUmVzb2x2ZS4ke3Byb21pc2VJZH1gKTtcbiAgICAgIGlmICghcHJvbWlzZVJlc29sdmUpIHtcbiAgICAgICAgbG9nLndhcm4oJ1doZW4gZ2V0U3Vic2NyaXB0aW9uKCkgd2FzIHByZXZpb3VzbHkgY2FsbGVkLCBubyBQcm9taXNlIHdhcyBzdG9yZWQgdG8gYmUgY2FsbGVkIGJhY2sgbm93LicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgTGltaXRTdG9yZS5yZW1vdmUoYGdldFN1YnNjcmlwdGlvblByb21pc2VSZXNvbHZlLiR7cHJvbWlzZUlkfWApO1xuICAgICAgICBwcm9taXNlUmVzb2x2ZShyZXN1bHQpO1xuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChldmVudC5kYXRhLnJlbW90ZUdldE5vdGlmaWNhdGlvblBlcm1pc3Npb25SZXNwb25zZSkge1xuICAgICAgbGV0IHBlcm1pc3Npb24gPSBldmVudC5kYXRhLnJlbW90ZUdldE5vdGlmaWNhdGlvblBlcm1pc3Npb25SZXNwb25zZTtcbiAgICAgIGxldCBwcm9taXNlSWQgPSBldmVudC5kYXRhLnByb21pc2VJZDtcbiAgICAgIGxldCBwcm9taXNlUmVzb2x2ZSA9IExpbWl0U3RvcmUuZ2V0TGFzdChgX2dldE5vdGlmaWNhdGlvblBlcm1pc3Npb25Qcm9taXNlUmVzb2x2ZS4ke3Byb21pc2VJZH1gKTtcbiAgICAgIGlmICghcHJvbWlzZVJlc29sdmUpIHtcbiAgICAgICAgbG9nLndhcm4oJ1doZW4gX2dldE5vdGlmaWNhdGlvblBlcm1pc3Npb24oKSB3YXMgcHJldmlvdXNseSBjYWxsZWQsIG5vIFByb21pc2Ugd2FzIHN0b3JlZCB0byBiZSBjYWxsZWQgYmFjayBub3cuJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBMaW1pdFN0b3JlLnJlbW92ZShgX2dldE5vdGlmaWNhdGlvblBlcm1pc3Npb25Qcm9taXNlUmVzb2x2ZS4ke3Byb21pc2VJZH1gKTtcbiAgICAgICAgcHJvbWlzZVJlc29sdmUocGVybWlzc2lvbik7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGV2ZW50LmRhdGEuc2V0U3Vic2NyaXB0aW9uQ29tcGxldGUpIHsgLy8gU3ViZG9tYWluIHRvIEhvc3QgcGFnZSBub3RpZnlpbmcgc2V0U3Vic2NyaXB0aW9uKHRydWVPckZhbHNlKSBpcyBjb21wbGV0ZVxuICAgICAgbGV0IHByb21pc2VJZCA9IGV2ZW50LmRhdGEucHJvbWlzZUlkO1xuICAgICAgbGV0IHByb21pc2VSZXNvbHZlID0gTGltaXRTdG9yZS5nZXRMYXN0KGBzZXRTdWJzY3JpcHRpb25Qcm9taXNlUmVzb2x2ZS4ke3Byb21pc2VJZH1gKTtcbiAgICAgIGlmICghcHJvbWlzZVJlc29sdmUpIHtcbiAgICAgICAgbG9nLndhcm4oJ1doZW4gc2V0U3Vic2NyaXB0aW9uKCkgd2FzIHByZXZpb3VzbHkgY2FsbGVkLCBubyBQcm9taXNlIHdhcyBzdG9yZWQgdG8gYmUgY2FsbGVkIGJhY2sgbm93LicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgTGltaXRTdG9yZS5yZW1vdmUoYHNldFN1YnNjcmlwdGlvblByb21pc2VSZXNvbHZlLiR7cHJvbWlzZUlkfWApO1xuICAgICAgICBwcm9taXNlUmVzb2x2ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChldmVudC5kYXRhLnJlbW90ZUV2ZW50KSB7IC8vIFN1YmRvbWFpbiB0byBIb3N0IHBhZ2Ugbm90aWZ5aW5nIHNldFN1YnNjcmlwdGlvbih0cnVlT3JGYWxzZSkgaXMgY29tcGxldGVcbiAgICAgIGxldCBuYW1lID0gZXZlbnQuZGF0YS5yZW1vdGVFdmVudDtcbiAgICAgIGxldCBkYXRhID0gZXZlbnQuZGF0YS5yZW1vdGVFdmVudERhdGE7XG4gICAgICBsZXQgcmVtb3RlVHJpZ2dlckVudiA9IGV2ZW50LmRhdGEuZnJvbTtcbiAgICAgIGlmICghbmFtZSB8fCBkYXRhID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbG9nLndhcm4oYFJlY2VpdmVkIGFuIGV2ZW50IGJhY2sgZnJvbSBwb3N0TWVzc2FnZSwgYnV0IGl0IHdhcyB1bmRlZmluZWQhYCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBFdmVudC50cmlnZ2VyKG5hbWUsIGRhdGEsIHJlbW90ZVRyaWdnZXJFbnYpO1xuICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChldmVudC5kYXRhLmlkc0F2YWlsYWJsZSkgeyAvLyBPbmx5IGNhbGxlZCBvbiBIVFRQIHBhZ2VzLlxuICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbShcIk9ORV9TSUdOQUxfU0VTU0lPTlwiLCB0cnVlKTtcbiAgICAgIERhdGFiYXNlLnB1dChcIklkc1wiLCB7dHlwZTogXCJ1c2VySWRcIiwgaWQ6IGV2ZW50LmRhdGEuaWRzQXZhaWxhYmxlLnVzZXJJZH0pO1xuICAgICAgRGF0YWJhc2UucHV0KFwiSWRzXCIsIHt0eXBlOiBcInJlZ2lzdHJhdGlvbklkXCIsIGlkOiBldmVudC5kYXRhLmlkc0F2YWlsYWJsZS5yZWdpc3RyYXRpb25JZH0pO1xuXG4gICAgICBpZiAoT25lU2lnbmFsLl9pZHNBdmFpbGFibGVfY2FsbGJhY2subGVuZ3RoID4gMCkge1xuICAgICAgICB3aGlsZSAoT25lU2lnbmFsLl9pZHNBdmFpbGFibGVfY2FsbGJhY2subGVuZ3RoID4gMCkge1xuICAgICAgICAgIHZhciBjdXJyX2NhbGxiYWNrID0gT25lU2lnbmFsLl9pZHNBdmFpbGFibGVfY2FsbGJhY2sucG9wKClcbiAgICAgICAgICBjdXJyX2NhbGxiYWNrKHtcbiAgICAgICAgICAgIHVzZXJJZDogZXZlbnQuZGF0YS5pZHNBdmFpbGFibGUudXNlcklkLFxuICAgICAgICAgICAgcmVnaXN0cmF0aW9uSWQ6IGV2ZW50LmRhdGEuaWRzQXZhaWxhYmxlLnJlZ2lzdHJhdGlvbklkXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIE9uZVNpZ25hbC5fc2VuZFVuc2VudFRhZ3MoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZXZlbnQuZGF0YS5odHRwc1Byb21wdEFjY2VwdGVkKSB7IC8vIEhUVFBTIE9ubHlcbiAgICAgIE9uZVNpZ25hbC5yZWdpc3RlckZvclB1c2hOb3RpZmljYXRpb25zKCk7XG4gICAgICBPbmVTaWduYWwuc2V0U3Vic2NyaXB0aW9uKHRydWUpO1xuICAgICAgbGV0IGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnT25lU2lnbmFsLWlmcmFtZS1tb2RhbCcpO1xuICAgICAgZWxlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsZW0pO1xuICAgICAgT25lU2lnbmFsLl90cmlnZ2VyRXZlbnRfY3VzdG9tUHJvbXB0Q2xpY2tlZCgnZ3JhbnRlZCcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChldmVudC5kYXRhLmh0dHBzUHJvbXB0Q2FuY2VsZWQpIHsgLy8gSFRUUFMgT25seVxuICAgICAgbGV0IGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnT25lU2lnbmFsLWlmcmFtZS1tb2RhbCcpO1xuICAgICAgZWxlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGVsZW0pO1xuICAgICAgT25lU2lnbmFsLl90cmlnZ2VyRXZlbnRfY3VzdG9tUHJvbXB0Q2xpY2tlZCgnZGVuaWVkJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGV2ZW50LmRhdGEuaHR0cFByb21wdEFjY2VwdGVkKSB7IC8vIEhUVFAgT25seVxuICAgICAgT25lU2lnbmFsLl90cmlnZ2VyRXZlbnRfY3VzdG9tUHJvbXB0Q2xpY2tlZCgnZ3JhbnRlZCcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChldmVudC5kYXRhLmh0dHBQcm9tcHRDYW5jZWxlZCkgeyAvLyBIVFRQIE9ubHlcbiAgICAgIE9uZVNpZ25hbC5fdHJpZ2dlckV2ZW50X2N1c3RvbVByb21wdENsaWNrZWQoJ2RlbmllZCcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChldmVudC5kYXRhLmh0dHBOYXRpdmVQcm9tcHRQZXJtaXNzaW9uQ2hhbmdlZCkge1xuICAgICAgdmFyIHJlY2VudFBlcm1pc3Npb25zID0gTGltaXRTdG9yZS5nZXQoJ25vdGlmaWNhdGlvbi5wZXJtaXNzaW9uJyk7XG4gICAgICB2YXIgcGVybWlzc2lvbkJlZm9yZVByb21wdCA9IHJlY2VudFBlcm1pc3Npb25zWzBdO1xuICAgICAgT25lU2lnbmFsLl90cmlnZ2VyRXZlbnRfbmF0aXZlUHJvbXB0UGVybWlzc2lvbkNoYW5nZWQocGVybWlzc2lvbkJlZm9yZVByb21wdCwgZXZlbnQuZGF0YS5odHRwTmF0aXZlUHJvbXB0UGVybWlzc2lvbkNoYW5nZWQpO1xuICAgIH1cbiAgICBlbHNlIGlmIChPbmVTaWduYWwuX25vdGlmaWNhdGlvbk9wZW5lZF9jYWxsYmFjaykgeyAvLyBIVFRQIGFuZCBIVFRQU1xuICAgICAgd2hpbGUgKE9uZVNpZ25hbC5fbm90aWZpY2F0aW9uT3BlbmVkX2NhbGxiYWNrLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbGV0IGNhbGxiYWNrID0gT25lU2lnbmFsLl9ub3RpZmljYXRpb25PcGVuZWRfY2FsbGJhY2sucG9wKCk7XG4gICAgICAgIGNhbGxiYWNrKGV2ZW50LmRhdGEpO1xuICAgICAgfVxuICAgIH1cbiAgfSxcblxuICBhZGRMaXN0ZW5lckZvck5vdGlmaWNhdGlvbk9wZW5lZDogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgT25lU2lnbmFsLl9ub3RpZmljYXRpb25PcGVuZWRfY2FsbGJhY2sucHVzaChjYWxsYmFjayk7XG4gICAgaWYgKEVudmlyb25tZW50LmlzQnJvd3NlcigpKSB7XG4gICAgICBEYXRhYmFzZS5nZXQoXCJOb3RpZmljYXRpb25PcGVuZWRcIiwgZG9jdW1lbnQuVVJMKVxuICAgICAgICAudGhlbihub3RpZmljYXRpb25PcGVuZWRSZXN1bHQgPT4ge1xuICAgICAgICAgIGlmIChub3RpZmljYXRpb25PcGVuZWRSZXN1bHQpIHtcbiAgICAgICAgICAgIERhdGFiYXNlLnJlbW92ZShcIk5vdGlmaWNhdGlvbk9wZW5lZFwiLCBkb2N1bWVudC5VUkwpO1xuICAgICAgICAgICAgd2hpbGUgKE9uZVNpZ25hbC5fbm90aWZpY2F0aW9uT3BlbmVkX2NhbGxiYWNrLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgbGV0IGNhbGxiYWNrID0gT25lU2lnbmFsLl9ub3RpZmljYXRpb25PcGVuZWRfY2FsbGJhY2sucG9wKCk7XG4gICAgICAgICAgICAgIGNhbGxiYWNrKG5vdGlmaWNhdGlvbk9wZW5lZFJlc3VsdC5kYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIGxvZy5lcnJvcihlKTtcbiAgICAgICAgfSk7XG4gICAgICA7XG4gICAgfVxuICB9LFxuXG4gIC8vIFN1YmRvbWFpbiAtIEZpcmVkIGZyb20gbWVzc2FnZSByZWNlaXZlZCBmcm9tIGlmcmFtZS5cbiAgX2ZpcmVOb3RpZmljYXRpb25FbmFibGVkQ2FsbGJhY2s6IGZ1bmN0aW9uIChuZXdOb3RpZmljYXRpb25QZXJtaXNzaW9uKSB7XG4gICAgaWYgKE9uZVNpZ25hbC5faXNOb3RpZmljYXRpb25FbmFibGVkQ2FsbGJhY2spIHtcbiAgICAgIHdoaWxlIChPbmVTaWduYWwuX2lzTm90aWZpY2F0aW9uRW5hYmxlZENhbGxiYWNrLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbGV0IGNhbGxiYWNrID0gT25lU2lnbmFsLl9pc05vdGlmaWNhdGlvbkVuYWJsZWRDYWxsYmFjay5wb3AoKTtcbiAgICAgICAgY2FsbGJhY2sobmV3Tm90aWZpY2F0aW9uUGVybWlzc2lvbik7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGdldElkc0F2YWlsYWJsZTogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgaWYgKGNhbGxiYWNrID09PSB1bmRlZmluZWQpXG4gICAgICByZXR1cm47XG5cbiAgICBPbmVTaWduYWwuX2lkc0F2YWlsYWJsZV9jYWxsYmFjay5wdXNoKGNhbGxiYWNrKTtcblxuICAgIFByb21pc2UuYWxsKFtEYXRhYmFzZS5nZXQoJ0lkcycsICd1c2VySWQnKSwgRGF0YWJhc2UuZ2V0KCdJZHMnLCAncmVnaXN0cmF0aW9uSWQnKV0pXG4gICAgICAudGhlbihmdW5jdGlvbiBnZXRJZHNBdmFpbGFibGVfR290VXNlclJlZ2lzdHJhdGlvbklkcyhyZXN1bHRzKSB7XG4gICAgICAgIHZhciB1c2VySWRSZXN1bHQgPSByZXN1bHRzWzBdO1xuICAgICAgICB2YXIgcmVnaXN0cmF0aW9uSWRSZXN1bHQgPSByZXN1bHRzWzFdO1xuXG4gICAgICAgIGlmICh1c2VySWRSZXN1bHQpIHtcbiAgICAgICAgICBpZiAocmVnaXN0cmF0aW9uSWRSZXN1bHQpIHtcbiAgICAgICAgICAgIHdoaWxlIChPbmVTaWduYWwuX2lkc0F2YWlsYWJsZV9jYWxsYmFjay5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIHZhciBjdXJyX2NhbGxiYWNrID0gT25lU2lnbmFsLl9pZHNBdmFpbGFibGVfY2FsbGJhY2sucG9wKCk7XG4gICAgICAgICAgICAgIGN1cnJfY2FsbGJhY2soe1xuICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkUmVzdWx0LmlkLFxuICAgICAgICAgICAgICAgIHJlZ2lzdHJhdGlvbklkOiByZWdpc3RyYXRpb25JZFJlc3VsdC5pZFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgd2hpbGUgKE9uZVNpZ25hbC5faWRzQXZhaWxhYmxlX2NhbGxiYWNrLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgdmFyIGN1cnJfY2FsbGJhY2sgPSBPbmVTaWduYWwuX2lkc0F2YWlsYWJsZV9jYWxsYmFjay5wb3AoKTtcbiAgICAgICAgICAgICAgY3Vycl9jYWxsYmFjayh7dXNlcklkOiB1c2VySWRSZXN1bHQuaWQsIHJlZ2lzdHJhdGlvbklkOiBudWxsfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgfSk7XG4gICAgO1xuICB9LFxuXG4gIGdldFRhZ3M6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIERhdGFiYXNlLmdldCgnSWRzJywgJ3VzZXJJZCcpXG4gICAgICAudGhlbihmdW5jdGlvbiAodXNlcklkUmVzdWx0KSB7XG4gICAgICAgIGlmICh1c2VySWRSZXN1bHQpIHtcbiAgICAgICAgICBPbmVTaWduYWwuX3NlbmRUb09uZVNpZ25hbEFwaShcInBsYXllcnMvXCIgKyB1c2VySWRSZXN1bHQuaWQsICdHRVQnLCBudWxsLCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKHJlc3BvbnNlLnRhZ3MpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGxvZy5lcnJvcihlKTtcbiAgICAgIH0pO1xuICAgIDtcbiAgfSxcblxuICBpc1B1c2hOb3RpZmljYXRpb25zRW5hYmxlZDogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgaWYgKCFpc1B1c2hOb3RpZmljYXRpb25zU3VwcG9ydGVkKCkpIHtcbiAgICAgIGxvZy53YXJuKFwiWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgcHVzaCBub3RpZmljYXRpb25zLlwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJZiBTdWJkb21haW5cbiAgICBpZiAoT25lU2lnbmFsLl9pbml0T3B0aW9ucy5zdWJkb21haW5OYW1lICYmICFpc0Jyb3dzZXJTYWZhcmkoKSkge1xuICAgICAgT25lU2lnbmFsLl9pc05vdGlmaWNhdGlvbkVuYWJsZWRDYWxsYmFjay5wdXNoKGNhbGxiYWNrKTtcbiAgICAgIGlmIChPbmVTaWduYWwuX2lmcmFtZVBvcnQpIHtcbiAgICAgICAgT25lU2lnbmFsLl9pZnJhbWVQb3J0LnBvc3RNZXNzYWdlKHtnZXROb3RpZmljYXRpb25QZXJtaXNzaW9uOiB0cnVlLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIElmIEhUVFBTXG5cbiAgICBQcm9taXNlLmFsbChbRGF0YWJhc2UuZ2V0KCdJZHMnLCAncmVnaXN0cmF0aW9uSWQnKSwgRGF0YWJhc2UuZ2V0KCdPcHRpb25zJywgJ3N1YnNjcmlwdGlvbicpXSlcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXN1bHRzKSB7XG4gICAgICAgIHZhciByZWdpc3RyYXRpb25JZFJlc3VsdCA9IHJlc3VsdHNbMF07XG4gICAgICAgIHZhciBzdWJzY3JpcHRpb25SZXN1bHQgPSByZXN1bHRzWzFdO1xuXG4gICAgICAgIGlmIChyZWdpc3RyYXRpb25JZFJlc3VsdCkge1xuICAgICAgICAgIGlmIChzdWJzY3JpcHRpb25SZXN1bHQgJiYgIXN1YnNjcmlwdGlvblJlc3VsdC52YWx1ZSlcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhmYWxzZSk7XG5cbiAgICAgICAgICBjYWxsYmFjayhOb3RpZmljYXRpb24ucGVybWlzc2lvbiA9PSBcImdyYW50ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICAgIGNhbGxiYWNrKGZhbHNlKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgbG9nLmVycm9yKGUpO1xuICAgICAgfSk7XG4gIH0sXG5cbiAgX2dldE5vdGlmaWNhdGlvblR5cGVzOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgT25lU2lnbmFsLl9nZXRTdWJzY3JpcHRpb24oKS50aGVuKGN1cnJlbnRTdWJzY3JpcHRpb24gPT4ge1xuICAgICAgICBsZXQgbm90aWZpY2F0aW9uVHlwZSA9IGN1cnJlbnRTdWJzY3JpcHRpb24gPyAxIDogLTI7XG4gICAgICAgIHJlc29sdmUobm90aWZpY2F0aW9uVHlwZSk7XG4gICAgICAgIGNhbGxiYWNrKG5vdGlmaWNhdGlvblR5cGUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sXG5cbiAgc2V0U3Vic2NyaXB0aW9uOiBmdW5jdGlvbiAobmV3U3Vic2NyaXB0aW9uKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGlmIChPbmVTaWduYWwuX2lmcmFtZVBvcnQpIHtcbiAgICAgICAgbGV0IHVpZCA9IGd1aWQoKTtcbiAgICAgICAgTGltaXRTdG9yZS5wdXQoYHNldFN1YnNjcmlwdGlvblByb21pc2VSZXNvbHZlLiR7dWlkfWAsIHJlc29sdmUpO1xuICAgICAgICBPbmVTaWduYWwuX2lmcmFtZVBvcnQucG9zdE1lc3NhZ2Uoe3NldFN1YmRvbWFpblN0YXRlOiB7c2V0U3Vic2NyaXB0aW9uOiBuZXdTdWJzY3JpcHRpb259LCBwcm9taXNlSWQ6IHVpZCwgZnJvbTogRW52aXJvbm1lbnQuZ2V0RW52KCl9KTtcbiAgICAgICAgLy8gVGhpcyBwcm9taXNlIHdpbGwgZXZlbnR1YWxseSBiZSByZXNvbHZlZCB3aGVuIHRoZSBpRnJhbWUgcmVwbGllcyB3aXRoIHNldFN1YnNjcmlwdGlvbkNvbXBsZXRlXG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgT25lU2lnbmFsLl9nZXRTdWJzY3JpcHRpb24oKVxuICAgICAgICAgIC50aGVuKChjdXJyZW50U3Vic2NyaXB0aW9uKSA9PiB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFN1YnNjcmlwdGlvbiAhPSBuZXdTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgICAgcmV0dXJuIERhdGFiYXNlLnB1dChcIk9wdGlvbnNcIiwge2tleTogXCJzdWJzY3JpcHRpb25cIiwgdmFsdWU6IG5ld1N1YnNjcmlwdGlvbn0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgbG9nLmRlYnVnKGBDYWxsZWQgJWNzZXRTdWJzY3JpcHRpb24oJHtuZXdTdWJzY3JpcHRpb259KWAsIGdldENvbnNvbGVTdHlsZSgnY29kZScpLCAnYnV0IHRoZXJlIHdhcyBubyBjaGFuZ2UsIHNvIHNraXBwaW5nIGNhbGwuJyk7XG4gICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBEYXRhYmFzZS5nZXQoJ0lkcycsICd1c2VySWQnKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKCh1c2VySWRSZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGlmICh1c2VySWRSZXN1bHQpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGFwaUNhbGwoXCJwbGF5ZXJzL1wiICsgdXNlcklkUmVzdWx0LmlkLCBcIlBVVFwiLCB7XG4gICAgICAgICAgICAgICAgYXBwX2lkOiBPbmVTaWduYWwuX2FwcF9pZCxcbiAgICAgICAgICAgICAgICBub3RpZmljYXRpb25fdHlwZXM6IG5ld1N1YnNjcmlwdGlvbiA/IDEgOiAtMlxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBsb2cud2FybihgQ2FsbGVkICVjc2V0U3Vic2NyaXB0aW9uKCR7bmV3U3Vic2NyaXB0aW9ufSlgLCBnZXRDb25zb2xlU3R5bGUoJ2NvZGUnKSwgJ2J1dCB0aGVyZSB3YXMgbm8gdXNlciBJRCwgc28gdGhlIHJlc3VsdCB3YXMgbm90IGZvcndhcmRlZCB0byBPbmVTaWduYWwuJyk7XG4gICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnTm8gdXNlciBJRC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIE9uZVNpZ25hbC5fdHJpZ2dlckV2ZW50X2ludGVybmFsU3Vic2NyaXB0aW9uU2V0KG5ld1N1YnNjcmlwdGlvbik7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICBpZiAoZS5jb25zdHJ1Y3Rvci5uYW1lID09PSAnRXJyb3InKSB7XG4gICAgICAgICAgICAgIGxvZy5lcnJvcihlKTtcbiAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byBmYWxzZSBpZiBzZXRTdWJzY3JpcHRpb24oZmFsc2UpIGhhcyBiZWVuIGV4cGxpY2l0bHkgY2FsbGVkIGF0IGFueSBwb2ludCBpbiB0aW1lLiBPdGhlcndpc2UgcmV0dXJucyB0cnVlLlxuICAgKiBUaGlzIG1lYW5zIGEgcmV0dXJuIHZhbHVlIG9mIHRydWUgZG9lcyBub3QgbWVhbiB0aGUgdXNlciBpcyBzdWJzY3JpYmVkLCBvbmx5IHRoYXQgdGhlIHVzZXIgZGlkIG5vdCBjYWxsIHNldFN1YmNyaXB0aW9uKGZhbHNlKS5cbiAgICogQHByaXZhdGVcbiAgICogQHJldHVybnMge1Byb21pc2V9XG4gICAqL1xuICBfZ2V0U3Vic2NyaXB0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxvZy5kZWJ1ZygnQ2FsbGVkICVjX2dldFN1YnNjcmlwdGlvbigpJywgZ2V0Q29uc29sZVN0eWxlKCdjb2RlJyksIGAoZnJvbSAke0Vudmlyb25tZW50LmdldEVudigpfSlgKTtcbiAgICAgIHZhciBwcm9taXNlO1xuICAgICAgaWYgKE9uZVNpZ25hbC5faWZyYW1lUG9ydCkge1xuICAgICAgICBsZXQgdWlkID0gZ3VpZCgpO1xuICAgICAgICBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgIExpbWl0U3RvcmUucHV0KGBnZXRTdWJzY3JpcHRpb25Qcm9taXNlUmVzb2x2ZS4ke3VpZH1gLCByZXNvbHZlKTtcbiAgICAgICAgICBPbmVTaWduYWwuX2lmcmFtZVBvcnQucG9zdE1lc3NhZ2Uoe3JlbW90ZUdldERiVmFsdWU6IHRydWUsIHRhYmxlOiAnT3B0aW9ucycsIGtleTogJ3N1YnNjcmlwdGlvbicsIHByb21pc2VJZDogdWlkLCBmcm9tOiBFbnZpcm9ubWVudC5nZXRFbnYoKX0pO1xuICAgICAgICAgIC8vIFRoaXMgcHJvbWlzZSB3aWxsIGV2ZW50dWFsbHkgYmUgcmVzb2x2ZWQgd2hlbiB0aGUgaUZyYW1lIHJlcGxpZXMgd2l0aCByZW1vdGVHZXREYlZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvbWlzZSA9IERhdGFiYXNlLmdldCgnT3B0aW9ucycsICdzdWJzY3JpcHRpb24nKTtcbiAgICAgIH1cbiAgICAgIHByb21pc2UudGhlbihzdWJzY3JpcHRpb25SZXN1bHQgPT4ge1xuICAgICAgICAgIHJlc29sdmUoIShzdWJzY3JpcHRpb25SZXN1bHQgJiYgc3Vic2NyaXB0aW9uUmVzdWx0LnZhbHVlID09IGZhbHNlKSlcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICAgIGxvZy5lcnJvcihlKTtcbiAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG4gIH0sXG5cbiAgX3NhZmVQb3N0TWVzc2FnZTogZnVuY3Rpb24gKGNyZWF0b3IsIGRhdGEsIHRhcmdldE9yaWdpbiwgcmVjZWl2ZXIpIHtcbiAgICB2YXIgdE9yaWdpbiA9IHRhcmdldE9yaWdpbi50b0xvd2VyQ2FzZSgpO1xuXG4gICAgLy8gSWYgd2UgYXJlIHRyeWluZyB0byB0YXJnZXQgYSBodHRwIHNpdGUgYWxsb3cgdGhlIGh0dHBzIHZlcnNpb24uICh3LyBvciB3L28gJ3d3d3cuJyB0b28pXG4gICAgaWYgKHRPcmlnaW4uc3RhcnRzV2l0aChcImh0dHA6Ly9cIikpIHtcbiAgICAgIHZhciBxdWVyeURpY3QgPSB7fTtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaC5zdWJzdHIoMSkuc3BsaXQoXCImXCIpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcXVlcnlEaWN0W2l0ZW0uc3BsaXQoXCI9XCIpWzBdXSA9IGl0ZW0uc3BsaXQoXCI9XCIpWzFdXG4gICAgICB9KTtcbiAgICAgIHZhciB2YWxpZFByZVVSTFJlZ2V4ID0gL15odHRwKHN8KTpcXC9cXC8od3d3XFwufCkvO1xuICAgICAgdE9yaWdpbiA9IHRPcmlnaW4ucmVwbGFjZSh2YWxpZFByZVVSTFJlZ2V4LCBxdWVyeURpY3RbXCJob3N0UGFnZVByb3RvY29sXCJdKTtcbiAgICB9XG5cbiAgICBpZiAoIWRhdGEuZnJvbSkge1xuICAgICAgZGF0YVsnZnJvbSddID0gRW52aXJvbm1lbnQuZ2V0RW52KCk7XG4gICAgfVxuXG4gICAgaWYgKHJlY2VpdmVyKVxuICAgICAgY3JlYXRvci5wb3N0TWVzc2FnZShkYXRhLCB0T3JpZ2luLCByZWNlaXZlcik7XG4gICAgZWxzZVxuICAgICAgY3JlYXRvci5wb3N0TWVzc2FnZShkYXRhLCB0T3JpZ2luKTtcbiAgfSxcblxuICBfcHJvY2Vzc19wdXNoZXM6IGZ1bmN0aW9uIChhcnJheSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspXG4gICAgICBPbmVTaWduYWwucHVzaChhcnJheVtpXSk7XG4gIH0sXG5cbiAgcHVzaDogZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICBpZiAodHlwZW9mKGl0ZW0pID09IFwiZnVuY3Rpb25cIilcbiAgICAgIGl0ZW0oKTtcbiAgICBlbHNlIHtcbiAgICAgIHZhciBmdW5jdGlvbk5hbWUgPSBpdGVtLnNoaWZ0KCk7XG4gICAgICBPbmVTaWduYWxbZnVuY3Rpb25OYW1lXS5hcHBseShudWxsLCBpdGVtKTtcbiAgICB9XG4gIH1cbn07XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShPbmVTaWduYWwsICdMT0dHSU5HJywge1xuICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghT25lU2lnbmFsLl9MT0dHSU5HKSB7XG4gICAgICBPbmVTaWduYWwuX0xPR0dJTkcgPSBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIE9uZVNpZ25hbC5fTE9HR0lORztcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbihsb2dMZXZlbCkge1xuICAgIGlmIChsb2dMZXZlbCkge1xuICAgICAgbG9nLnNldERlZmF1bHRMZXZlbChsb2cubGV2ZWxzLlRSQUNFKTtcbiAgICAgIE9uZVNpZ25hbC5fTE9HR0lORyA9IHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgbG9nLnNldERlZmF1bHRMZXZlbChsb2cubGV2ZWxzLkVSUk9SKTtcbiAgICAgIE9uZVNpZ25hbC5fTE9HR0lORyA9IGZhbHNlO1xuICAgIH1cbiAgfSxcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcblxuLy8gSWYgaW1wb3J0ZWQgb24geW91ciBwYWdlLlxuaWYgKEVudmlyb25tZW50LmlzQnJvd3NlcigpKSB7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCBPbmVTaWduYWwuX2xpc3RlbmVyX3JlY2VpdmVNZXNzYWdlLCBmYWxzZSk7XG59XG5lbHNlIHsgLy8gaWYgaW1wb3J0ZWQgZnJvbSB0aGUgc2VydmljZSB3b3JrZXIuXG5cbn1cblxuaWYgKE9uZVNpZ25hbC5MT0dHSU5HKVxuICBsb2cuc2V0RGVmYXVsdExldmVsKGxvZy5sZXZlbHMuVFJBQ0UpO1xuZWxzZVxuICBsb2cuc2V0RGVmYXVsdExldmVsKGxvZy5sZXZlbHMuRVJST1IpO1xuXG5sb2cuaW5mbyhgJWNPbmVTaWduYWwgV2ViIFNESyBsb2FkZWQgKHZlcnNpb24gJHtPbmVTaWduYWwuX1ZFUlNJT059LCAke0Vudmlyb25tZW50LmdldEVudigpfSBlbnZpcm9ubWVudCkuYCwgZ2V0Q29uc29sZVN0eWxlKCdib2xkJykpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9uZVNpZ25hbDtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZGsuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");
},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = global.fetch\n}.call(global));\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,")},function(module,exports){eval('"use strict";\n\n/**\n * Capitalizes the first letter of the string.\n * @returns {string} The string with the first letter capitalized.\n */\nString.prototype.capitalize = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3RyaW5nLmpzPzJjZTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBSUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsWUFBVztBQUN2QyxTQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztDQUNyRCIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDYXBpdGFsaXplcyB0aGUgZmlyc3QgbGV0dGVyIG9mIHRoZSBzdHJpbmcuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHdpdGggdGhlIGZpcnN0IGxldHRlciBjYXBpdGFsaXplZC5cbiAqL1xuU3RyaW5nLnByb3RvdHlwZS5jYXBpdGFsaXplID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdGhpcy5zbGljZSgxKTtcbn07XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc3RyaW5nLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.apiCall = apiCall;\nexports.sendNotification = sendNotification;\n\nvar _vars = __webpack_require__(1);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction apiCall(action, method, data) {\n  var headers = new Headers();\n  headers.append('Content-Type', 'application/json;charset=UTF-8');\n\n  var contents = {\n    method: method || 'NO_METHOD_SPECIFIED',\n    headers: headers,\n    cache: 'no-cache'\n  };\n  if (data) contents.body = JSON.stringify(data);\n\n  return new Promise(function (resolve, reject) {\n    fetch(_vars.API_URL + action, contents).then(function status(response) {\n      if (response.status >= 200 && response.status < 300) return response.json();else reject(new Error(response.statusText));\n    }).then(function (jsonResponse) {\n      resolve(jsonResponse);\n    }).catch(function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction sendNotification(appId, playerIds, titles, contents, url) {\n  var params = {\n    app_id: appId,\n    contents: contents,\n    include_player_ids: playerIds,\n    isAnyWeb: true\n  };\n  if (titles) {\n    params.headings = titles;\n  }\n  if (url) {\n    params.url = url;\n  }\n  return apiCall('notifications', 'POST', params);\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpLmpzPzlmOTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFHZ0IsT0FBTyxHQUFQLE9BQU87UUE2QlAsZ0JBQWdCLEdBQWhCLGdCQUFnQjs7Ozs7Ozs7OztBQTdCekIsU0FBUyxPQUFPLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFDNUMsTUFBSSxPQUFPLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztBQUM1QixTQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxnQ0FBZ0MsQ0FBQyxDQUFDOztBQUVqRSxNQUFJLFFBQVEsR0FBRztBQUNiLFVBQU0sRUFBRSxNQUFNLElBQUkscUJBQXFCO0FBQ3ZDLFdBQU8sRUFBRSxPQUFPO0FBQ2hCLFNBQUssRUFBRSxVQUFVO0dBQ2xCLENBQUM7QUFDRixNQUFJLElBQUksRUFDTixRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXZDLFNBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFLO0FBQ3RDLFNBQUssQ0FBQyxNQWhCRCxPQUFPLEdBZ0JJLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FDOUIsSUFBSSxDQUFDLFNBQVMsTUFBTSxDQUFDLFFBQVEsRUFBRTtBQUM5QixVQUFJLFFBQVEsQ0FBQyxNQUFNLElBQUksR0FBRyxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUNqRCxPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUV2QixNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7S0FDMUMsQ0FBQyxDQUNELElBQUksQ0FBQyxzQkFBWSxFQUFJO0FBQ3BCLGFBQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztLQUN2QixDQUFDLENBQ0QsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQ2xCLFlBQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNYLENBQUMsQ0FBQztHQUNOLENBQUMsQ0FBQztDQUNKOztBQUVNLFNBQVMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRTtBQUN4RSxNQUFJLE1BQU0sR0FBRztBQUNYLFVBQU0sRUFBRSxLQUFLO0FBQ2IsWUFBUSxFQUFFLFFBQVE7QUFDbEIsc0JBQWtCLEVBQUUsU0FBUztBQUM3QixZQUFRLEVBQUUsSUFBSTtHQUNmLENBQUM7QUFDRixNQUFJLE1BQU0sRUFBRTtBQUNWLFVBQU0sQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDO0dBQzFCO0FBQ0QsTUFBSSxHQUFHLEVBQUU7QUFDUCxVQUFNLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztHQUNsQjtBQUNELFNBQU8sT0FBTyxDQUFDLGVBQWUsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFQSV9VUkwgfSBmcm9tICcuL3ZhcnMuanMnXG5pbXBvcnQgbG9nIGZyb20gJ2xvZ2xldmVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFwaUNhbGwoYWN0aW9uLCBtZXRob2QsIGRhdGEpIHtcbiAgbGV0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICBoZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCcpO1xuXG4gIGxldCBjb250ZW50cyA9IHtcbiAgICBtZXRob2Q6IG1ldGhvZCB8fCAnTk9fTUVUSE9EX1NQRUNJRklFRCcsXG4gICAgaGVhZGVyczogaGVhZGVycyxcbiAgICBjYWNoZTogJ25vLWNhY2hlJ1xuICB9O1xuICBpZiAoZGF0YSlcbiAgICBjb250ZW50cy5ib2R5ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBmZXRjaChBUElfVVJMICsgYWN0aW9uLCBjb250ZW50cylcbiAgICAgIC50aGVuKGZ1bmN0aW9uIHN0YXR1cyhyZXNwb25zZSkge1xuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID49IDIwMCAmJiByZXNwb25zZS5zdGF0dXMgPCAzMDApXG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzVGV4dCkpO1xuICAgICAgfSlcbiAgICAgIC50aGVuKGpzb25SZXNwb25zZSA9PiB7XG4gICAgICAgIHJlc29sdmUoanNvblJlc3BvbnNlKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgfSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VuZE5vdGlmaWNhdGlvbihhcHBJZCwgcGxheWVySWRzLCB0aXRsZXMsIGNvbnRlbnRzLCB1cmwpIHtcbiAgdmFyIHBhcmFtcyA9IHtcbiAgICBhcHBfaWQ6IGFwcElkLFxuICAgIGNvbnRlbnRzOiBjb250ZW50cyxcbiAgICBpbmNsdWRlX3BsYXllcl9pZHM6IHBsYXllcklkcyxcbiAgICBpc0FueVdlYjogdHJ1ZVxuICB9O1xuICBpZiAodGl0bGVzKSB7XG4gICAgcGFyYW1zLmhlYWRpbmdzID0gdGl0bGVzO1xuICB9XG4gIGlmICh1cmwpIHtcbiAgICBwYXJhbXMudXJsID0gdXJsO1xuICB9XG4gIHJldHVybiBhcGlDYWxsKCdub3RpZmljYXRpb25zJywgJ1BPU1QnLCBwYXJhbXMpO1xufVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2FwaS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");
},function(module,exports){eval('"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n/*\n LimitStore.put(\'colorado\', \'rocky\');\n ["rocky"]\n LimitStore.put(\'colorado\', \'mountain\');\n ["rocky", "mountain"]\n LimitStore.put(\'colorado\', \'national\');\n ["mountain", "national"]\n LimitStore.put(\'colorado\', \'park\');\n ["national", "park"]\n */\nfunction LimitStore() {}\n\nLimitStore.store = {};\nLimitStore.LIMIT = 2;\n\nLimitStore.put = function (key, value) {\n  if (LimitStore.store[key] === undefined) {\n    LimitStore.store[key] = [null, null];\n  }\n  LimitStore.store[key].push(value);\n  if (LimitStore.store[key].length == LimitStore.LIMIT + 1) {\n    LimitStore.store[key].shift();\n  }\n  return LimitStore.store[key];\n};\n\nLimitStore.get = function (key) {\n  if (LimitStore.store[key] === undefined) {\n    LimitStore.store[key] = [null, null];\n  }\n  return LimitStore.store[key];\n};\n\nLimitStore.getFirst = function (key) {\n  return LimitStore.get(key)[0];\n};\n\nLimitStore.getLast = function (key) {\n  return LimitStore.get(key)[1];\n};\n\nLimitStore.remove = function (key) {\n  delete LimitStore.store[key];\n};\n\nLimitStore.isEmpty = function (key) {\n  var values = LimitStore.get(key);\n  return values[0] === null && values[1] === null;\n};\n\nexports.default = LimitStore;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGltaXRTdG9yZS5qcz8yZDQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQVVBLFNBQVMsVUFBVSxHQUFHLEVBQ3JCOztBQUVELFVBQVUsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLFVBQVUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDOztBQUVyQixVQUFVLENBQUMsR0FBRyxHQUFHLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRTtBQUNyQyxNQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssU0FBUyxFQUFFO0FBQ3ZDLGNBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7R0FDdEM7QUFDRCxZQUFVLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNsQyxNQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxJQUFJLFVBQVUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFFO0FBQ3hELGNBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7R0FDL0I7QUFDRCxTQUFPLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDOUIsQ0FBQzs7QUFFRixVQUFVLENBQUMsR0FBRyxHQUFHLFVBQVUsR0FBRyxFQUFFO0FBQzlCLE1BQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxTQUFTLEVBQUU7QUFDdkMsY0FBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztHQUN0QztBQUNELFNBQU8sVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUM5QixDQUFDOztBQUVGLFVBQVUsQ0FBQyxRQUFRLEdBQUcsVUFBVSxHQUFHLEVBQUU7QUFDbkMsU0FBTyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0NBQy9CLENBQUM7O0FBRUYsVUFBVSxDQUFDLE9BQU8sR0FBRyxVQUFVLEdBQUcsRUFBRTtBQUNsQyxTQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Q0FDL0IsQ0FBQzs7QUFFRixVQUFVLENBQUMsTUFBTSxHQUFHLFVBQVUsR0FBRyxFQUFFO0FBQ2pDLFNBQU8sVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUM5QixDQUFDOztBQUVGLFVBQVUsQ0FBQyxPQUFPLEdBQUcsVUFBUyxHQUFHLEVBQUU7QUFDakMsTUFBSSxNQUFNLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNqQyxTQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQztDQUNqRCxDQUFDOztrQkFFYSxVQUFVIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiBMaW1pdFN0b3JlLnB1dCgnY29sb3JhZG8nLCAncm9ja3knKTtcbiBbXCJyb2NreVwiXVxuIExpbWl0U3RvcmUucHV0KCdjb2xvcmFkbycsICdtb3VudGFpbicpO1xuIFtcInJvY2t5XCIsIFwibW91bnRhaW5cIl1cbiBMaW1pdFN0b3JlLnB1dCgnY29sb3JhZG8nLCAnbmF0aW9uYWwnKTtcbiBbXCJtb3VudGFpblwiLCBcIm5hdGlvbmFsXCJdXG4gTGltaXRTdG9yZS5wdXQoJ2NvbG9yYWRvJywgJ3BhcmsnKTtcbiBbXCJuYXRpb25hbFwiLCBcInBhcmtcIl1cbiAqL1xuZnVuY3Rpb24gTGltaXRTdG9yZSgpIHtcbn1cblxuTGltaXRTdG9yZS5zdG9yZSA9IHt9O1xuTGltaXRTdG9yZS5MSU1JVCA9IDI7XG5cbkxpbWl0U3RvcmUucHV0ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgaWYgKExpbWl0U3RvcmUuc3RvcmVba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgTGltaXRTdG9yZS5zdG9yZVtrZXldID0gW251bGwsIG51bGxdO1xuICB9XG4gIExpbWl0U3RvcmUuc3RvcmVba2V5XS5wdXNoKHZhbHVlKTtcbiAgaWYgKExpbWl0U3RvcmUuc3RvcmVba2V5XS5sZW5ndGggPT0gTGltaXRTdG9yZS5MSU1JVCArIDEpIHtcbiAgICBMaW1pdFN0b3JlLnN0b3JlW2tleV0uc2hpZnQoKTtcbiAgfVxuICByZXR1cm4gTGltaXRTdG9yZS5zdG9yZVtrZXldO1xufTtcblxuTGltaXRTdG9yZS5nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChMaW1pdFN0b3JlLnN0b3JlW2tleV0gPT09IHVuZGVmaW5lZCkge1xuICAgIExpbWl0U3RvcmUuc3RvcmVba2V5XSA9IFtudWxsLCBudWxsXTtcbiAgfVxuICByZXR1cm4gTGltaXRTdG9yZS5zdG9yZVtrZXldO1xufTtcblxuTGltaXRTdG9yZS5nZXRGaXJzdCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIExpbWl0U3RvcmUuZ2V0KGtleSlbMF07XG59O1xuXG5MaW1pdFN0b3JlLmdldExhc3QgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBMaW1pdFN0b3JlLmdldChrZXkpWzFdO1xufTtcblxuTGltaXRTdG9yZS5yZW1vdmUgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIGRlbGV0ZSBMaW1pdFN0b3JlLnN0b3JlW2tleV07XG59O1xuXG5MaW1pdFN0b3JlLmlzRW1wdHkgPSBmdW5jdGlvbihrZXkpIHtcbiAgbGV0IHZhbHVlcyA9IExpbWl0U3RvcmUuZ2V0KGtleSk7XG4gIHJldHVybiB2YWx1ZXNbMF0gPT09IG51bGwgJiYgdmFsdWVzWzFdID09PSBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTGltaXRTdG9yZTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9saW1pdFN0b3JlLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nvar _utils = __webpack_require__(2);\n\n__webpack_require__(8);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SILENT_EVENTS = ['onesignal.nb.hovering', 'onesignal.nb.hovered', 'onesignal.nb.launcher.button.click', 'onesignal.nb.launcher.click', 'onesignal.nb.animatedelement.hiding', 'onesignal.nb.animatedelement.hidden', 'onesignal.nb.animatedelement.showing', 'onesignal.nb.animatedelement.shown', 'onesignal.nb.activeanimatedelement.activating', 'onesignal.nb.activeanimatedelement.active', 'onesignal.nb.activeanimatedelement.inactivating', 'onesignal.nb.activeanimatedelement.inactive', 'onesignal.db.retrieved', 'onesignal.db.set'];\n\nvar RETRIGGER_REMOTE_EVENTS = ['onesignal.prompt.custom.clicked', 'onesignal.prompt.native.permissionchanged', 'onesignal.subscription.changed', 'onesignal.internal.subscriptionset'];\n\nvar Event = (function () {\n  function Event() {\n    _classCallCheck(this, Event);\n  }\n\n  _createClass(Event, null, [{\n    key: 'trigger',\n    value: function trigger(eventName, data) {\n      var remoteTriggerEnv = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n      if (!eventName) {\n        _loglevel2.default.warn('Missing event name.');\n      }\n      if (SILENT_EVENTS.indexOf(eventName) === -1) {\n        if (!_environment2.default.isBrowser()) {\n          _loglevel2.default.debug('(' + _environment2.default.getEnv().capitalize() + ') » %c' + eventName + ':', (0, _utils.getConsoleStyle)('event'), data, '(not triggered in a ServiceWorker environment)');\n          return;\n        } else {\n          var displayData = data;\n          if (remoteTriggerEnv) {\n            var env = _environment2.default.getEnv().capitalize() + ' ⬸ ' + remoteTriggerEnv.capitalize();\n          } else {\n            var env = _environment2.default.getEnv().capitalize();\n          }\n\n          if (displayData || displayData === false) {\n            _loglevel2.default.debug('(' + env + ') » %c' + eventName + ':', (0, _utils.getConsoleStyle)('event'), displayData);\n          } else {\n            _loglevel2.default.debug('(' + env + ') » %c' + eventName, (0, _utils.getConsoleStyle)('event'));\n          }\n        }\n      }\n      if (_environment2.default.isBrowser()) {\n        var event = new CustomEvent(eventName, {\n          bubbles: true, cancelable: true, detail: data\n        });\n        window.dispatchEvent(event);\n\n        // If this event was triggered in an iFrame or Popup environment, also trigger it on the host page\n        if (!_environment2.default.isHost()) {\n          var creator = opener || parent;\n          if (!creator) {\n            _loglevel2.default.error('Could not send event \\'' + eventName + '\\' back to host page because no creator (opener or parent) found!');\n          } else {\n            // But only if the event matches certain events\n            if (RETRIGGER_REMOTE_EVENTS.indexOf(eventName) !== -1) {\n              OneSignal._safePostMessage(creator, { remoteEvent: eventName, remoteEventData: data, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, null);\n            }\n          }\n        }\n      }\n    }\n  }]);\n\n  return Event;\n})();\n\nexports.default = Event;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXZlbnRzLmpzPzlmZjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTUEsSUFBTSxhQUFhLEdBQUcsQ0FDcEIsdUJBQXVCLEVBQ3ZCLHNCQUFzQixFQUN0QixvQ0FBb0MsRUFDcEMsNkJBQTZCLEVBQzdCLHFDQUFxQyxFQUNyQyxxQ0FBcUMsRUFDckMsc0NBQXNDLEVBQ3RDLG9DQUFvQyxFQUNwQywrQ0FBK0MsRUFDL0MsMkNBQTJDLEVBQzNDLGlEQUFpRCxFQUNqRCw2Q0FBNkMsRUFDN0Msd0JBQXdCLEVBQ3hCLGtCQUFrQixDQUNqQixDQUFDOztBQUVKLElBQU0sdUJBQXVCLEdBQUcsQ0FDOUIsaUNBQWlDLEVBQ2pDLDJDQUEyQyxFQUMzQyxnQ0FBZ0MsRUFDaEMsb0NBQW9DLENBQ3JDLENBQUM7O0lBRW1CLEtBQUs7V0FBTCxLQUFLOzBCQUFMLEtBQUs7OztlQUFMLEtBQUs7OzRCQUNULFNBQVMsRUFBRSxJQUFJLEVBQXlCO1VBQXZCLGdCQUFnQix5REFBQyxJQUFJOztBQUNuRCxVQUFJLENBQUMsU0FBUyxFQUFFO0FBQ2QsMkJBQUksSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7T0FDakM7QUFDRCxVQUFJLGFBQWEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7QUFDM0MsWUFBSSxDQUFDLHNCQUFZLFNBQVMsRUFBRSxFQUFFO0FBQzVCLDZCQUFJLEtBQUssT0FBSyxzQkFBWSxNQUFNLEVBQUUsQ0FBQyxVQUFVLEVBQUUsY0FBUyxTQUFTLFFBQUssV0FuQ3JFLGVBQWUsRUFtQ3NFLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxnREFBZ0QsQ0FBQyxDQUFDO0FBQ3hKLGlCQUFPO1NBQ1IsTUFBTTtBQUNMLGNBQUksV0FBVyxHQUFHLElBQUksQ0FBQztBQUN2QixjQUFJLGdCQUFnQixFQUFFO0FBQ3BCLGdCQUFJLEdBQUcsR0FBTSxzQkFBWSxNQUFNLEVBQUUsQ0FBQyxVQUFVLEVBQUUsV0FBTSxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUksQ0FBQztXQUNyRixNQUFNO0FBQ0wsZ0JBQUksR0FBRyxHQUFHLHNCQUFZLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDO1dBQzdDOztBQUVELGNBQUksV0FBVyxJQUFJLFdBQVcsS0FBSyxLQUFLLEVBQUU7QUFDeEMsK0JBQUksS0FBSyxPQUFLLEdBQUcsY0FBUyxTQUFTLFFBQUssV0E5Q3pDLGVBQWUsRUE4QzBDLE9BQU8sQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1dBQ2hGLE1BQU07QUFDTCwrQkFBSSxLQUFLLE9BQUssR0FBRyxjQUFTLFNBQVMsRUFBSSxXQWhEeEMsZUFBZSxFQWdEeUMsT0FBTyxDQUFDLENBQUMsQ0FBQztXQUNsRTtTQUVGO09BQ0Y7QUFDRCxVQUFJLHNCQUFZLFNBQVMsRUFBRSxFQUFFO0FBQzNCLFlBQUksS0FBSyxHQUFHLElBQUksV0FBVyxDQUFDLFNBQVMsRUFBRTtBQUNyQyxpQkFBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJO1NBQzlDLENBQUMsQ0FBQztBQUNILGNBQU0sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDOzs7QUFHM0IsWUFBSSxDQUFDLHNCQUFZLE1BQU0sRUFBRSxFQUFFO0FBQ3pCLGNBQUksT0FBTyxHQUFHLE1BQU0sSUFBSSxNQUFNLENBQUM7QUFDL0IsY0FBSSxDQUFDLE9BQU8sRUFBRTtBQUNaLCtCQUFJLEtBQUssNkJBQTBCLFNBQVMsdUVBQW1FLENBQUM7V0FDakgsTUFBTTs7QUFFTCxnQkFBSSx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7QUFDckQsdUJBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsRUFBQyxXQUFXLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLHNCQUFZLE1BQU0sRUFBRSxFQUFDLEVBQUUsU0FBUyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDdko7V0FDRjtTQUNGO09BQ0Y7S0FDRjs7O1NBNUNrQixLQUFLOzs7a0JBQUwsS0FBSyIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2cgZnJvbSAnbG9nbGV2ZWwnO1xuaW1wb3J0IEVudmlyb25tZW50IGZyb20gJy4vZW52aXJvbm1lbnQuanMnO1xuaW1wb3J0IHsgZ2V0Q29uc29sZVN0eWxlIH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgJy4vc3RyaW5nLmpzJztcblxuXG5jb25zdCBTSUxFTlRfRVZFTlRTID0gW1xuICAnb25lc2lnbmFsLm5iLmhvdmVyaW5nJyxcbiAgJ29uZXNpZ25hbC5uYi5ob3ZlcmVkJyxcbiAgJ29uZXNpZ25hbC5uYi5sYXVuY2hlci5idXR0b24uY2xpY2snLFxuICAnb25lc2lnbmFsLm5iLmxhdW5jaGVyLmNsaWNrJyxcbiAgJ29uZXNpZ25hbC5uYi5hbmltYXRlZGVsZW1lbnQuaGlkaW5nJyxcbiAgJ29uZXNpZ25hbC5uYi5hbmltYXRlZGVsZW1lbnQuaGlkZGVuJyxcbiAgJ29uZXNpZ25hbC5uYi5hbmltYXRlZGVsZW1lbnQuc2hvd2luZycsXG4gICdvbmVzaWduYWwubmIuYW5pbWF0ZWRlbGVtZW50LnNob3duJyxcbiAgJ29uZXNpZ25hbC5uYi5hY3RpdmVhbmltYXRlZGVsZW1lbnQuYWN0aXZhdGluZycsXG4gICdvbmVzaWduYWwubmIuYWN0aXZlYW5pbWF0ZWRlbGVtZW50LmFjdGl2ZScsXG4gICdvbmVzaWduYWwubmIuYWN0aXZlYW5pbWF0ZWRlbGVtZW50LmluYWN0aXZhdGluZycsXG4gICdvbmVzaWduYWwubmIuYWN0aXZlYW5pbWF0ZWRlbGVtZW50LmluYWN0aXZlJyxcbiAgJ29uZXNpZ25hbC5kYi5yZXRyaWV2ZWQnLFxuICAnb25lc2lnbmFsLmRiLnNldCdcbiAgXTtcblxuY29uc3QgUkVUUklHR0VSX1JFTU9URV9FVkVOVFMgPSBbXG4gICdvbmVzaWduYWwucHJvbXB0LmN1c3RvbS5jbGlja2VkJyxcbiAgJ29uZXNpZ25hbC5wcm9tcHQubmF0aXZlLnBlcm1pc3Npb25jaGFuZ2VkJyxcbiAgJ29uZXNpZ25hbC5zdWJzY3JpcHRpb24uY2hhbmdlZCcsXG4gICdvbmVzaWduYWwuaW50ZXJuYWwuc3Vic2NyaXB0aW9uc2V0J1xuXTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnQge1xuICBzdGF0aWMgdHJpZ2dlcihldmVudE5hbWUsIGRhdGEsIHJlbW90ZVRyaWdnZXJFbnY9bnVsbCkge1xuICAgIGlmICghZXZlbnROYW1lKSB7XG4gICAgICBsb2cud2FybignTWlzc2luZyBldmVudCBuYW1lLicpO1xuICAgIH1cbiAgICBpZiAoU0lMRU5UX0VWRU5UUy5pbmRleE9mKGV2ZW50TmFtZSkgPT09IC0xKSB7XG4gICAgICBpZiAoIUVudmlyb25tZW50LmlzQnJvd3NlcigpKSB7XG4gICAgICAgIGxvZy5kZWJ1ZyhgKCR7RW52aXJvbm1lbnQuZ2V0RW52KCkuY2FwaXRhbGl6ZSgpfSkgwrsgJWMke2V2ZW50TmFtZX06YCwgZ2V0Q29uc29sZVN0eWxlKCdldmVudCcpLCBkYXRhLCAnKG5vdCB0cmlnZ2VyZWQgaW4gYSBTZXJ2aWNlV29ya2VyIGVudmlyb25tZW50KScpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgZGlzcGxheURhdGEgPSBkYXRhO1xuICAgICAgICBpZiAocmVtb3RlVHJpZ2dlckVudikge1xuICAgICAgICAgIHZhciBlbnYgPSBgJHtFbnZpcm9ubWVudC5nZXRFbnYoKS5jYXBpdGFsaXplKCl9IOKsuCAke3JlbW90ZVRyaWdnZXJFbnYuY2FwaXRhbGl6ZSgpfWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGVudiA9IEVudmlyb25tZW50LmdldEVudigpLmNhcGl0YWxpemUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkaXNwbGF5RGF0YSB8fCBkaXNwbGF5RGF0YSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBsb2cuZGVidWcoYCgke2Vudn0pIMK7ICVjJHtldmVudE5hbWV9OmAsIGdldENvbnNvbGVTdHlsZSgnZXZlbnQnKSwgZGlzcGxheURhdGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxvZy5kZWJ1ZyhgKCR7ZW52fSkgwrsgJWMke2V2ZW50TmFtZX1gLCBnZXRDb25zb2xlU3R5bGUoJ2V2ZW50JykpO1xuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKEVudmlyb25tZW50LmlzQnJvd3NlcigpKSB7XG4gICAgICB2YXIgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCB7XG4gICAgICAgIGJ1YmJsZXM6IHRydWUsIGNhbmNlbGFibGU6IHRydWUsIGRldGFpbDogZGF0YVxuICAgICAgfSk7XG4gICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChldmVudCk7XG5cbiAgICAgIC8vIElmIHRoaXMgZXZlbnQgd2FzIHRyaWdnZXJlZCBpbiBhbiBpRnJhbWUgb3IgUG9wdXAgZW52aXJvbm1lbnQsIGFsc28gdHJpZ2dlciBpdCBvbiB0aGUgaG9zdCBwYWdlXG4gICAgICBpZiAoIUVudmlyb25tZW50LmlzSG9zdCgpKSB7XG4gICAgICAgIHZhciBjcmVhdG9yID0gb3BlbmVyIHx8IHBhcmVudDtcbiAgICAgICAgaWYgKCFjcmVhdG9yKSB7XG4gICAgICAgICAgbG9nLmVycm9yKGBDb3VsZCBub3Qgc2VuZCBldmVudCAnJHtldmVudE5hbWV9JyBiYWNrIHRvIGhvc3QgcGFnZSBiZWNhdXNlIG5vIGNyZWF0b3IgKG9wZW5lciBvciBwYXJlbnQpIGZvdW5kIWApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIEJ1dCBvbmx5IGlmIHRoZSBldmVudCBtYXRjaGVzIGNlcnRhaW4gZXZlbnRzXG4gICAgICAgICAgaWYgKFJFVFJJR0dFUl9SRU1PVEVfRVZFTlRTLmluZGV4T2YoZXZlbnROYW1lKSAhPT0gLTEpIHtcbiAgICAgICAgICAgIE9uZVNpZ25hbC5fc2FmZVBvc3RNZXNzYWdlKGNyZWF0b3IsIHtyZW1vdGVFdmVudDogZXZlbnROYW1lLCByZW1vdGVFdmVudERhdGE6IGRhdGEsIGZyb206IEVudmlyb25tZW50LmdldEVudigpfSwgT25lU2lnbmFsLl9pbml0T3B0aW9ucy5vcmlnaW4sIG51bGwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2V2ZW50cy5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _bowser = __webpack_require__(13);\n\nvar Browser = _interopRequireWildcard(_bowser);\n\nvar _vars = __webpack_require__(1);\n\nvar _AnimatedElement = __webpack_require__(14);\n\nvar _AnimatedElement2 = _interopRequireDefault(_AnimatedElement);\n\nvar _ActiveAnimatedElement = __webpack_require__(15);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nvar _Launcher = __webpack_require__(16);\n\nvar _Launcher2 = _interopRequireDefault(_Launcher);\n\nvar _Badge = __webpack_require__(17);\n\nvar _Badge2 = _interopRequireDefault(_Badge);\n\nvar _Button = __webpack_require__(18);\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Dialog = __webpack_require__(20);\n\nvar _Dialog2 = _interopRequireDefault(_Dialog);\n\nvar _Message = __webpack_require__(19);\n\nvar _Message2 = _interopRequireDefault(_Message);\n\n__webpack_require__(21);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar logoSvg = __webpack_require__(25);\n\nvar Bell = (function () {\n  _createClass(Bell, [{\n    key: 'substituteText',\n    value: function substituteText() {\n      // key: 'message.action.subscribing'\n      // value: 'Click <strong>{{prompt.native.grant}}</strong> to receive notifications'\n      for (var key in this.text) {\n        if (this.text.hasOwnProperty(key)) {\n          var value = this.text[key];\n          // browserName could be 'chrome' or 'firefox' or 'safari'\n          var browserName = Browser.name.toLowerCase();\n\n          // tKey: 'prompt.native.grant'  (from TEXT_SUBS)\n          // tValue: { chrome: 'Allow', firefox: 'Al... }\n          // zValue: 'Allow', if browserName === 'chrome'\n          for (var tKey in Bell.TEXT_SUBS) {\n            if (Bell.TEXT_SUBS.hasOwnProperty(tKey)) {\n              var tValue = Bell.TEXT_SUBS[tKey];\n              var zValue = tValue[browserName];\n              if (value.includes('{{')) {\n                this.text[key] = value.replace('{{' + tKey + '}}', zValue !== undefined ? zValue : tValue['default']);\n              }\n            }\n          }\n        }\n      }\n    }\n  }], [{\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        STATE_CHANGED: 'onesignal.nb.state.changed',\n        LAUNCHER_CLICK: 'onesignal.nb.launcher.click',\n        BELL_CLICK: 'onesignal.nb.launcher.button.click',\n        SUBSCRIBE_CLICK: 'onesignal.nb.launcher.dialog.button.subscribe.click',\n        UNSUBSCRIBE_CLICK: 'onesignal.nb.launcher.dialog.button.unsubscribe.click',\n        HOVERING: 'onesignal.nb.hovering',\n        HOVERED: 'onesignal.nb.hovered'\n      };\n    }\n  }, {\n    key: 'STATES',\n    get: function get() {\n      return {\n        UNINITIALIZED: 'uninitialized',\n        SUBSCRIBED: 'subscribed',\n        UNSUBSCRIBED: 'unsubscribed',\n        BLOCKED: 'blocked'\n      };\n    }\n  }, {\n    key: 'TEXT_SUBS',\n    get: function get() {\n      return {\n        'prompt.native.grant': {\n          default: 'Allow',\n          chrome: 'Allow',\n          firefox: 'Always Receive Notifications',\n          safari: 'Allow'\n        }\n      };\n    }\n  }]);\n\n  function Bell() {\n    var _this = this;\n\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var _ref$enable = _ref.enable;\n    var enable = _ref$enable === undefined ? false : _ref$enable;\n    var _ref$size = _ref.size;\n    var size = _ref$size === undefined ? 'medium' : _ref$size;\n    var _ref$position = _ref.position;\n    var position = _ref$position === undefined ? 'bottom-right' : _ref$position;\n    var _ref$theme = _ref.theme;\n    var theme = _ref$theme === undefined ? 'default' : _ref$theme;\n    var _ref$showLauncherAfte = _ref.showLauncherAfter;\n    var showLauncherAfter = _ref$showLauncherAfte === undefined ? 10 : _ref$showLauncherAfte;\n    var _ref$showBadgeAfter = _ref.showBadgeAfter;\n    var showBadgeAfter = _ref$showBadgeAfter === undefined ? 300 : _ref$showBadgeAfter;\n    var _ref$modalPrompt = _ref.modalPrompt;\n    var modalPrompt = _ref$modalPrompt === undefined ? false : _ref$modalPrompt;\n    var _ref$text = _ref.text;\n    var text = _ref$text === undefined ? {\n      'tip.state.unsubscribed': 'Subscribe to notifications',\n      'tip.state.subscribed': \"You're subscribed to notifications\",\n      'tip.state.blocked': \"You've blocked notifications\",\n      'message.prenotify': 'Click to subscribe to notifications',\n      'message.action.subscribing': \"Click <strong>{{prompt.native.grant}}</strong> to receive notifications\",\n      'message.action.subscribed': \"Thanks for subscribing!\",\n      'message.action.resubscribed': \"You're subscribed to notifications\",\n      'message.action.unsubscribed': \"You won't receive notifications again\",\n      'dialog.main.title': 'Manage Site Notifications',\n      'dialog.main.button.subscribe': 'SUBSCRIBE',\n      'dialog.main.button.unsubscribe': 'UNSUBSCRIBE',\n      'dialog.blocked.title': 'Unblock Notifications',\n      'dialog.blocked.message': \"Follow these instructions to allow notifications:\"\n    } : _ref$text;\n    var _ref$prenotify = _ref.prenotify;\n    var prenotify = _ref$prenotify === undefined ? true : _ref$prenotify;\n    var _ref$showCredit = _ref.showCredit;\n    var showCredit = _ref$showCredit === undefined ? true : _ref$showCredit;\n\n    _classCallCheck(this, Bell);\n\n    this.options = {\n      enable: enable,\n      size: size,\n      position: position,\n      theme: theme,\n      showLauncherAfter: showLauncherAfter,\n      showBadgeAfter: showBadgeAfter,\n      text: text,\n      prenotify: prenotify,\n      showCredit: showCredit,\n      modalPrompt: modalPrompt\n    };\n\n    if (!this.options.enable) return;\n\n    if (['small', 'medium', 'large'].indexOf(this.options.size) < 0) throw new Error('Invalid size ' + this.options.size + ' for notify button. Choose among \\'small\\', \\'medium\\', or \\'large\\'.');\n    if (['bottom-left', 'bottom-right'].indexOf(this.options.position) < 0) throw new Error('Invalid position ' + this.options.position + ' for notify button. Choose either \\'bottom-left\\', or \\'bottom-right\\'.');\n    if (['default', 'inverse'].indexOf(this.options.theme) < 0) throw new Error('Invalid theme ' + this.options.theme + ' for notify button. Choose either \\'default\\', or \\'inverse\\'.');\n    if (this.options.showLauncherAfter < 0) throw new Error('Invalid delay duration of ' + this.options.showLauncherAfter + ' for showing the notify button. Choose a value above 0.');\n    if (this.options.showBadgeAfter < 0) throw new Error('Invalid delay duration of ' + this.options.showBadgeAfter + ' for showing the notify button\\'s badge. Choose a value above 0.');\n    this.size = this.options.size;\n    this.position = this.options.position;\n    this.text = this.options.text;\n    if (!this.text['tip.state.unsubscribed']) this.text['tip.state.unsubscribed'] = 'Subscribe to notifications';\n    if (!this.text['tip.state.subscribed']) this.text['tip.state.subscribed'] = \"You're subscribed to notifications\";\n    if (!this.text['tip.state.blocked']) this.text['tip.state.blocked'] = \"You've blocked notifications\";\n    if (!this.text['message.prenotify']) this.text['message.prenotify'] = \"Click to subscribe to notifications\";\n    if (!this.text['message.action.subscribed']) this.text['message.action.subscribed'] = \"Thanks for subscribing!\";\n    if (!this.text['message.action.resubscribed']) this.text['message.action.resubscribed'] = \"You're subscribed to notifications\";\n    if (!this.text['message.action.subscribing']) this.text['message.action.subscribing'] = \"Click <strong>{{prompt.native.grant}}</strong> to receive notifications\";\n    if (!this.text['message.action.unsubscribed']) this.text['message.action.unsubscribed'] = \"You won't receive notifications again\";\n    if (!this.text['dialog.main.title']) this.text['dialog.main.title'] = 'Manage Site Notifications';\n    if (!this.text['dialog.main.button.subscribe']) this.text['dialog.main.button.subscribe'] = 'SUBSCRIBE';\n    if (!this.text['dialog.main.button.unsubscribe']) this.text['dialog.main.button.unsubscribe'] = 'UNSUBSCRIBE';\n    if (!this.text['dialog.blocked.title']) this.text['dialog.blocked.title'] = 'Unblock Notifications';\n    if (!this.text['dialog.blocked.message']) this.text['dialog.blocked.message'] = 'Follow these instructions to allow notifications:';\n    this.substituteText();\n    this.state = Bell.STATES.UNINITIALIZED;\n\n    // Install event hooks\n    window.addEventListener(Bell.EVENTS.LAUNCHER_CLICK, function (event) {\n      if (_this.message.shown && _this.message.contentType == _Message2.default.TYPES.MESSAGE) {\n        // A message is being shown, it'll disappear soon\n        return;\n      }\n\n      _this.launcher.activateIfInactive().then(function () {\n        return _this.message.hide();\n      }).then(function () {\n        // Can't retrieve the subscription state via a promise because that makes Chrome think the popup needs to be blocked\n        // return OneSignal._getSubscription();\n        return _limitStore2.default.getLast('setsubscription.value');\n      }).then(function (setSubscriptionState) {\n        _loglevel2.default.debug('Current Subscription State:', setSubscriptionState);\n        if (_this.unsubscribed) {\n          if (setSubscriptionState === false) {\n            // The user manually called setSubscription(false), but the user is actually subscribed\n            _this.showDialogProcedure();\n          } else {\n            // The user is actually subscribed, register him for notifications\n            OneSignal.registerForPushNotifications({ modalPrompt: _this.options.modalPrompt });\n            //// Show the 'Click Allow to receive notifications' tip, if they haven't already enabled permissions\n            //if (OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id) === 'default') {\n            //  this.message.display(Message.TYPES.MESSAGE, this.text['message.action.subscribing'], Message.TIMEOUT)\n            //}\n\n            (0, _utils.once)(window, OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, function (event, destroyListenerFn) {\n              destroyListenerFn();\n              var permission = event.detail.to;\n              if (permission === 'granted') {\n                _this.message.display(_Message2.default.TYPES.MESSAGE, _this.text['message.action.subscribed'], _Message2.default.TIMEOUT).then(function () {\n                  _this.launcher.inactivate();\n                }).catch(function (e) {\n                  _loglevel2.default.error(e);\n                });\n              }\n            }, true);\n          }\n        } else if (_this.subscribed) {\n          _this.showDialogProcedure();\n        } else if (_this.blocked) {\n          _this.showDialogProcedure();\n        }\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      });\n    });\n\n    window.addEventListener(Bell.EVENTS.SUBSCRIBE_CLICK, function () {\n      _this.dialog.subscribeButton.disabled = true;\n      OneSignal.setSubscription(true).then(function () {\n        _this.dialog.subscribeButton.disabled = false;\n        return _this.dialog.hide();\n      }).then(function () {\n        return _this.message.display(_Message2.default.TYPES.MESSAGE, _this.text['message.action.resubscribed'], _Message2.default.TIMEOUT);\n      }).then(function () {\n        _this.launcher.clearIfWasInactive();\n        return _this.launcher.inactivate();\n      });\n    });\n\n    window.addEventListener(Bell.EVENTS.UNSUBSCRIBE_CLICK, function () {\n      _this.dialog.unsubscribeButton.disabled = true;\n      OneSignal.setSubscription(false).then(function () {\n        _this.dialog.unsubscribeButton.disabled = false;\n        return _this.dialog.hide();\n      }).then(function () {\n        _this.launcher.clearIfWasInactive();\n        return _this.launcher.activate();\n      }).then(function () {\n        return _this.message.display(_Message2.default.TYPES.MESSAGE, _this.text['message.action.unsubscribed'], _Message2.default.TIMEOUT);\n      });\n    });\n\n    window.addEventListener(Bell.EVENTS.HOVERING, function () {\n      _this.hovering = true;\n      _this.launcher.activateIfInactive();\n\n      // If there's already a message being force shown, do not override\n      if (_this.message.shown || _this.dialog.shown) {\n        _this.hovering = false;\n        return;\n      }\n\n      // If the message is a message and not a tip, don't show it (only show tips)\n      // Messages will go away on their own\n      if (_this.message.contentType === _Message2.default.TYPES.MESSAGE) {\n        _this.hovering = false;\n        return;\n      }\n\n      new Promise(function (resolve, reject) {\n        // If a message is being shown\n        if (_this.message.queued.length > 0) {\n          return _this.message.dequeue().then(function (msg) {\n            _this.message.content = msg;\n            _this.message.contentType = _Message2.default.TYPES.QUEUED;\n            resolve();\n          });\n        } else {\n          _this.message.content = _this.message.getTipForState();\n          _this.message.contentType = _Message2.default.TYPES.TIP;\n          resolve();\n        }\n      }).then(function () {\n        return _this.message.show();\n      }).then(function () {\n        _this.hovering = false;\n      });\n    });\n\n    window.addEventListener(Bell.EVENTS.HOVERED, function () {\n      // If a message is displayed (and not a tip), don't control it. Visitors have no control over messages\n      if (_this.message.contentType === _Message2.default.TYPES.MESSAGE) {\n        return;\n      }\n\n      if (!_this.dialog.hidden) {\n        // If the dialog is being brought up when clicking button, don't shrink\n        return;\n      }\n\n      if (_this.hovering) {\n        _this.hovering = false;\n        // Hovering still being true here happens on mobile where the message could still be showing (i.e. animating) when a HOVERED event fires\n        // In other words, you tap on mobile, HOVERING fires, and then HOVERED fires immediately after because of the way mobile click events work\n        // Basically only happens if HOVERING and HOVERED fire within a few milliseconds of each other\n        _this.message.waitUntilShown().then(function () {\n          return (0, _utils.delay)(_Message2.default.TIMEOUT);\n        }).then(function () {\n          return _this.message.hide();\n        }).then(function () {\n          if (_this.launcher.wasInactive && _this.dialog.hidden) {\n            _this.launcher.inactivate();\n            _this.launcher.wasInactive = null;\n          }\n        });\n      }\n\n      if (_this.message.shown) {\n        _this.message.hide().then(function () {\n          if (_this.launcher.wasInactive && _this.dialog.hidden) {\n            _this.launcher.inactivate();\n            _this.launcher.wasInactive = null;\n          }\n        });\n      }\n    });\n\n    window.addEventListener(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, function (e) {\n      var isSubscribed = e.detail;\n      _this.setState(isSubscribed ? Bell.STATES.SUBSCRIBED : Bell.STATES.UNSUBSCRIBED);\n    });\n\n    window.addEventListener(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, function (from, to) {\n      _this.updateState();\n    });\n\n    window.addEventListener(OneSignal.EVENTS.WELCOME_NOTIFICATION_SENT, function (e) {});\n\n    this.updateState();\n  }\n\n  _createClass(Bell, [{\n    key: 'showDialogProcedure',\n    value: function showDialogProcedure() {\n      var _this2 = this;\n\n      if (!this.dialog.shown) {\n        this.dialog.show().then(function (e) {\n          //var id = Math.random().toString(36).substring(7, 11);\n          //console.warn(`Generating %cshowDialogProcedure(${id}):`, getConsoleStyle('code'), '.');\n          (0, _utils.once)(document, 'click', function (e, destroyEventListener) {\n            var wasDialogClicked = _this2.dialog.element.contains(e.target);\n            if (wasDialogClicked) {} else {\n              //console.warn(`%cshowDialogProcedure(${id}):`, getConsoleStyle('code'), 'A destroying click was detected.');\n              destroyEventListener();\n              if (_this2.dialog.shown) {\n                _this2.dialog.hide().then(function (e) {\n                  _this2.launcher.inactivateIfWasInactive();\n                }).catch(function (e) {\n                  _loglevel2.default.error(e);\n                });\n              }\n            }\n          }, true);\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n        });\n      }\n    }\n  }, {\n    key: 'create',\n    value: function create() {\n      var _this3 = this;\n\n      if (!(0, _utils.isPushNotificationsSupported)()) return;\n\n      if (!this.options.enable) return;\n\n      // Remove any existing bell\n      if (this.container) {\n        (0, _utils.removeDomElement)('onesignal-bell-container');\n      }\n\n      window.addDomElement = _utils.addDomElement;\n      // Insert the bell container\n      (0, _utils.addDomElement)('body', 'beforeend', '<div id=\"onesignal-bell-container\" class=\"onesignal-bell-container onesignal-reset\"></div>');\n      // Insert the bell launcher\n      (0, _utils.addDomElement)(this.container, 'beforeend', '<div id=\"onesignal-bell-launcher\" class=\"onesignal-bell-launcher\"></div>');\n      // Insert the bell launcher button\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-button\"></div>');\n      // Insert the bell launcher badge\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-badge\"></div>');\n      // Insert the bell launcher message\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message\"></div>');\n      (0, _utils.addDomElement)(this.message.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message-body\"></div>');\n      // Insert the bell launcher dialog\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog\"></div>');\n      (0, _utils.addDomElement)(this.dialog.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog-body\"></div>');\n\n      // Install events\n\n      // Add visual elements\n      (0, _utils.addDomElement)(this.button.selector, 'beforeEnd', logoSvg);\n\n      // Add default classes\n      this.launcher.resize(this.options.size).then(function () {\n        if (_this3.options.position === 'bottom-left') {\n          (0, _utils.addCssClass)(_this3.container, 'onesignal-bell-container-bottom-left');\n          (0, _utils.addCssClass)(_this3.launcher.selector, 'onesignal-bell-launcher-bottom-left');\n        } else if (_this3.options.position === 'bottom-right') {\n          (0, _utils.addCssClass)(_this3.container, 'onesignal-bell-container-bottom-right');\n          (0, _utils.addCssClass)(_this3.launcher.selector, 'onesignal-bell-launcher-bottom-right');\n        } else {\n          throw new Error('Invalid OneSignal notify button position ' + _this3.options.position);\n        }\n\n        if (_this3.options.theme === 'default') {\n          (0, _utils.addCssClass)(_this3.launcher.selector, 'onesignal-bell-launcher-theme-default');\n        } else if (_this3.options.theme === 'inverse') {\n          (0, _utils.addCssClass)(_this3.launcher.selector, 'onesignal-bell-launcher-theme-inverse');\n        } else {\n          throw new Error('Invalid OneSignal notify button theme ' + _this3.options.theme);\n        }\n\n        _loglevel2.default.info('Showing the notify button.');\n\n        OneSignal.isPushNotificationsEnabled(function (pushEnabled) {\n          (pushEnabled ? _this3.launcher.inactivate() : (0, _utils.nothing)()).then(function () {\n            return (0, _utils.delay)(_this3.options.showLauncherAfter);\n          }).then(function () {\n            return _this3.launcher.show();\n          }).then(function () {\n            return (0, _utils.delay)(_this3.options.showBadgeAfter);\n          }).then(function () {\n            if (_this3.options.prenotify && !pushEnabled && OneSignal._isNewVisitor) {\n              return _this3.message.enqueue(_this3.text['message.prenotify']).then(function () {\n                return _this3.badge.show();\n              });\n            } else return (0, _utils.nothing)();\n          }).then(function () {\n            return _this3.initialized = true;\n          }).catch(function (e) {\n            return _loglevel2.default.error(e);\n          });\n        });\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      });\n    }\n\n    /**\n     * Updates the current state to the correct new current state. Returns a promise.\n     */\n\n  }, {\n    key: 'updateState',\n    value: function updateState() {\n      var _this4 = this;\n\n      OneSignal.isPushNotificationsEnabled(function (isEnabled) {\n        _this4.setState(isEnabled ? Bell.STATES.SUBSCRIBED : Bell.STATES.UNSUBSCRIBED);\n        if (_limitStore2.default.getLast('notification.permission') === 'denied') {\n          _this4.setState(Bell.STATES.BLOCKED);\n        }\n      });\n    }\n\n    /**\n     * Updates the current state to the specified new state.\n     * @param newState One of ['subscribed', 'unsubscribed'].\n     */\n\n  }, {\n    key: 'setState',\n    value: function setState(newState) {\n      var lastState = this.state;\n      this.state = newState;\n      if (lastState !== newState) {\n        _events2.default.trigger(Bell.EVENTS.STATE_CHANGED, { from: lastState, to: newState });\n        // Update anything that should be changed here in the new state\n      }\n\n      // Update anything that should be reset to the same state\n    }\n  }, {\n    key: 'container',\n    get: function get() {\n      return document.querySelector('#onesignal-bell-container');\n    }\n  }, {\n    key: 'launcher',\n    get: function get() {\n      if (!this._launcher) this._launcher = new _Launcher2.default(this);\n      return this._launcher;\n    }\n  }, {\n    key: 'button',\n    get: function get() {\n      if (!this._button) this._button = new _Button2.default(this);\n      return this._button;\n    }\n  }, {\n    key: 'badge',\n    get: function get() {\n      if (!this._badge) this._badge = new _Badge2.default(this);\n      return this._badge;\n    }\n  }, {\n    key: 'message',\n    get: function get() {\n      if (!this._message) this._message = new _Message2.default(this);\n      return this._message;\n    }\n  }, {\n    key: 'dialog',\n    get: function get() {\n      if (!this._dialog) this._dialog = new _Dialog2.default(this);\n      return this._dialog;\n    }\n  }, {\n    key: 'subscribed',\n    get: function get() {\n      return this.state === Bell.STATES.SUBSCRIBED;\n    }\n  }, {\n    key: 'unsubscribed',\n    get: function get() {\n      return this.state === Bell.STATES.UNSUBSCRIBED;\n    }\n  }, {\n    key: 'blocked',\n    get: function get() {\n      return this.state === Bell.STATES.BLOCKED;\n    }\n  }]);\n\n  return Bell;\n})();\n\nexports.default = Bell;//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  * Bowser - a browser detector\n  * https://github.com/ded/bowser\n  * MIT License | (c) Dustin Diaz 2015\n  */\n\n!function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else this[name] = definition()\n}('bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , chromeBook = /CrOS/.test(ua)\n      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , result\n\n    if (/opera|opr/i.test(ua)) {\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/windows phone/i.test(ua)) {\n      result = {\n        name: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeBook) {\n      result = {\n        name: 'Chrome'\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/chrome.+? edge/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (/sailfish/i.test(ua)) {\n      result = {\n        name: 'Sailfish'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n      }\n    }\n    else if (/silk/i.test(ua)) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n      , version: versionIdentifier\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/(web|hpw)os/i.test(ua)) {\n      result = {\n        name: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (/tizen/i.test(ua)) {\n      result = {\n        name: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/safari/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      , version: versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      result.name = result.name || \"Webkit\"\n      result.webkit = t\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.msedge && (android || result.silk)) {\n      result.android = t\n    } else if (iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = osVersion.split('.')[0];\n    if (tablet || iosdevice == 'ipad' || (android && (osMajorVersion == 3 || (osMajorVersion == 4 && !mobile))) || result.silk) {\n      result.tablet = t\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || result.blackberry || result.webos || result.bada) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n        (result.chrome && result.version >= 20) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  return bowser\n});\n//@ sourceMappingURL=data:application/json;base64,")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnimatedElement = (function () {\n\n  /**\n   * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n   * @param selector {string} The CSS selector of the element.\n   * @param showClass {string} The CSS class name to add to show the element.\n   * @param hideClass {string} The CSS class name to remove to hide the element.\n   * @param state {string} The current state of the element, defaults to 'shown'.\n   * @param targetTransitionEvents {string} An array of properties (e.g. ['transform', 'opacity']) to look for on transitionend of show() and hide() to know the transition is complete. As long as one matches, the transition is considered complete.\n   * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n   */\n\n  function AnimatedElement(selector, showClass, hideClass) {\n    var state = arguments.length <= 3 || arguments[3] === undefined ? 'shown' : arguments[3];\n    var targetTransitionEvents = arguments.length <= 4 || arguments[4] === undefined ? ['opacity', 'transform'] : arguments[4];\n    var nestedContentSelector = arguments.length <= 5 || arguments[5] === undefined ? null : arguments[5];\n\n    _classCallCheck(this, AnimatedElement);\n\n    this.selector = selector;\n    this.showClass = showClass;\n    this.hideClass = hideClass;\n    this.state = state;\n    this.targetTransitionEvents = targetTransitionEvents;\n    this.nestedContentSelector = nestedContentSelector;\n    this.transitionCheckTimeout = 500;\n  }\n\n  /**\n   * Asynchronously shows an element by applying its {showClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n\n  _createClass(AnimatedElement, [{\n    key: 'show',\n    value: function show() {\n      var _this = this;\n\n      if (!this.hidden) {\n        return Promise.resolve(this);\n      } else return new Promise(function (resolve) {\n        _this.state = 'showing';\n        _events2.default.trigger(AnimatedElement.EVENTS.SHOWING, _this);\n        if (_this.hideClass) (0, _utils.removeCssClass)(_this.element, _this.hideClass);\n        if (_this.showClass) (0, _utils.addCssClass)(_this.element, _this.showClass);\n        if (_this.targetTransitionEvents.length == 0) {\n          return resolve(_this);\n        } else {\n          var timerId = setTimeout(function () {\n            _loglevel2.default.warn(_this.constructor.name + ' did not completely show (state: ' + _this.state + ', activeState: ' + _this.activeState + ').');\n          }, _this.transitionCheckTimeout);\n          (0, _utils.once)(_this.element, 'transitionend', function (event, destroyListenerFn) {\n            if (event.target === _this.element && _this.targetTransitionEvents.includes(event.propertyName)) {\n              clearTimeout(timerId);\n              // Uninstall the event listener for transitionend\n              destroyListenerFn();\n              _this.state = 'shown';\n              _events2.default.trigger(AnimatedElement.EVENTS.SHOWN, _this);\n              return resolve(_this);\n            }\n          }, true);\n        }\n      });\n    }\n\n    /**\n     * Asynchronously hides an element by applying its {hideClass} CSS class.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      var _this2 = this;\n\n      if (!this.shown) {\n        return Promise.resolve(this);\n      } else return new Promise(function (resolve) {\n        _this2.state = 'hiding';\n        _events2.default.trigger(AnimatedElement.EVENTS.HIDING, _this2);\n        if (_this2.showClass) (0, _utils.removeCssClass)(_this2.element, _this2.showClass);\n        if (_this2.hideClass) (0, _utils.addCssClass)(_this2.element, _this2.hideClass);\n        if (_this2.targetTransitionEvents.length == 0) {\n          return resolve(_this2);\n        } else {\n          (0, _utils.once)(_this2.element, 'transitionend', function (event, destroyListenerFn) {\n            var timerId = setTimeout(function () {\n              _loglevel2.default.warn(_this2.constructor.name + ' did not completely hide (state: ' + _this2.state + ', activeState: ' + _this2.activeState + ').');\n            }, _this2.transitionCheckTimeout);\n            if (event.target === _this2.element && _this2.targetTransitionEvents.includes(event.propertyName)) {\n              clearTimeout(timerId);\n              // Uninstall the event listener for transitionend\n              destroyListenerFn();\n              _this2.state = 'hidden';\n              _events2.default.trigger(AnimatedElement.EVENTS.HIDDEN, _this2);\n              return resolve(_this2);\n            }\n          }, true);\n        }\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being shown.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilShown',\n    value: function waitUntilShown() {\n      var _this3 = this;\n\n      if (this.state === 'shown') return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, AnimatedElement.EVENTS.SHOWN, function (event, destroyListenerFn) {\n          var self = _this3;\n          if (event.detail === _this3) {\n            destroyListenerFn();\n            return resolve(_this3);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being hidden.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilHidden',\n    value: function waitUntilHidden() {\n      var _this4 = this;\n\n      if (this.state === 'hidden') return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, AnimatedElement.EVENTS.HIDDEN, function (event, destroyListenerFn) {\n          if (event.detail === _this4) {\n            destroyListenerFn();\n            return resolve(_this4);\n          }\n        }, true);\n      });\n    }\n  }, {\n    key: 'content',\n\n    /**\n     * Returns the native element's innerHTML property.\n     * @returns {string} Returns the native element's innerHTML property.\n     */\n    get: function get() {\n      if (this.nestedContentSelector) return this.element.querySelector(this.nestedContentSelector).innerHTML;else return this.element.innerHTML;\n    }\n\n    /**\n     * Sets the native element's innerHTML property.\n     * @param value {string} The HTML to set to the element.\n     */\n    ,\n    set: function set(value) {\n      if (this.nestedContentSelector) this.element.querySelector(this.nestedContentSelector).innerHTML = value;else this.element.innerHTML = value;\n    }\n\n    /**\n     * Returns the native {Element} via document.querySelector().\n     * @returns {Element} Returns the native {Element} via document.querySelector().\n     */\n\n  }, {\n    key: 'element',\n    get: function get() {\n      return document.querySelector(this.selector);\n    }\n\n    /* States an element can be in */\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to being shown.\n     */\n\n  }, {\n    key: 'showing',\n    get: function get() {\n      return this.state === 'showing';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already shown.\n     */\n\n  }, {\n    key: 'shown',\n    get: function get() {\n      return this.state === 'shown';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to hiding.\n     */\n\n  }, {\n    key: 'hiding',\n    get: function get() {\n      return this.state === 'hiding';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already hidden.\n     */\n\n  }, {\n    key: 'hidden',\n    get: function get() {\n      return this.state === 'hidden';\n    }\n  }], [{\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        SHOWING: 'onesignal.nb.animatedelement.showing',\n        SHOWN: 'onesignal.nb.animatedelement.shown',\n        HIDING: 'onesignal.nb.animatedelement.hiding',\n        HIDDEN: 'onesignal.nb.animatedelement.hidden'\n      };\n    }\n  }]);\n\n  return AnimatedElement;\n})();\n\nexports.default = AnimatedElement;//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement2 = __webpack_require__(14);\n\nvar _AnimatedElement3 = _interopRequireDefault(_AnimatedElement2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ActiveAnimatedElement = (function (_AnimatedElement) {\n  _inherits(ActiveAnimatedElement, _AnimatedElement);\n\n  /**\n   * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n   * @param selector {string} The CSS selector of the element.\n   * @param showClass {string} The CSS class name to add to show the element.\n   * @param hideClass {string} The CSS class name to remove to hide the element.\n   * @param activeClass {string} The CSS class name to add to activate the element.\n   * @param inactiveClass {string} The CSS class name to remove to inactivate the element.\n   * @param state {string} The current state of the element, defaults to 'shown'.\n   * @param activeState {string} The current state of the element, defaults to 'active'.\n   * @param targetTransitionEvents {string} An array of properties (e.g. ['transform', 'opacity']) to look for on transitionend of show() and hide() to know the transition is complete. As long as one matches, the transition is considered complete.\n   * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n   */\n\n  function ActiveAnimatedElement(selector, showClass, hideClass, activeClass, inactiveClass) {\n    var state = arguments.length <= 5 || arguments[5] === undefined ? 'shown' : arguments[5];\n    var activeState = arguments.length <= 6 || arguments[6] === undefined ? 'active' : arguments[6];\n    var targetTransitionEvents = arguments.length <= 7 || arguments[7] === undefined ? ['opacity', 'transform'] : arguments[7];\n    var nestedContentSelector = arguments.length <= 8 || arguments[8] === undefined ? null : arguments[8];\n\n    _classCallCheck(this, ActiveAnimatedElement);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ActiveAnimatedElement).call(this, selector, showClass, hideClass, state, targetTransitionEvents, nestedContentSelector));\n\n    _this.activeClass = activeClass;\n    _this.inactiveClass = inactiveClass;\n    _this.activeState = activeState;\n    return _this;\n  }\n\n  /**\n   * Asynchronously activates an element by applying its {activeClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n\n  _createClass(ActiveAnimatedElement, [{\n    key: 'activate',\n    value: function activate() {\n      var _this2 = this;\n\n      if (!this.inactive || !this.shown) {\n        return Promise.resolve(this);\n      } else return new Promise(function (resolve) {\n        _this2.activeState = 'activating';\n        _events2.default.trigger(ActiveAnimatedElement.EVENTS.ACTIVATING, _this2);\n        if (_this2.inactiveClass) (0, _utils.removeCssClass)(_this2.element, _this2.inactiveClass);\n        if (_this2.activeClass) (0, _utils.addCssClass)(_this2.element, _this2.activeClass);\n        if (_this2.shown) {\n          if (_this2.targetTransitionEvents.length == 0) {\n            return resolve(_this2);\n          } else {\n            var timerId = setTimeout(function () {\n              _loglevel2.default.warn(_this2.constructor.name + ' did not completely activate (state: ' + _this2.state + ', activeState: ' + _this2.activeState + ').');\n            }, _this2.transitionCheckTimeout);\n            (0, _utils.once)(_this2.element, 'transitionend', function (event, destroyListenerFn) {\n              if (event.target === _this2.element && _this2.targetTransitionEvents.includes(event.propertyName)) {\n                clearTimeout(timerId);\n                // Uninstall the event listener for transitionend\n                destroyListenerFn();\n                _this2.activeState = 'active';\n                _events2.default.trigger(ActiveAnimatedElement.EVENTS.ACTIVE, _this2);\n                return resolve(_this2);\n              }\n            }, true);\n          }\n        } else {\n          call.warn('Ending activate() transition (alternative).');\n          _this2.activeState = 'active';\n          _events2.default.trigger(ActiveAnimatedElement.EVENTS.ACTIVE, _this2);\n          return resolve(_this2);\n        }\n      });\n    }\n\n    /**\n     * Asynchronously activates an element by applying its {activeClass} CSS class.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'inactivate',\n    value: function inactivate() {\n      var _this3 = this;\n\n      if (!this.active) {\n        return Promise.resolve(this);\n      } else return new Promise(function (resolve) {\n        _this3.activeState = 'inactivating';\n        _events2.default.trigger(ActiveAnimatedElement.EVENTS.INACTIVATING, _this3);\n        if (_this3.activeClass) (0, _utils.removeCssClass)(_this3.element, _this3.activeClass);\n        if (_this3.inactiveClass) (0, _utils.addCssClass)(_this3.element, _this3.inactiveClass);\n        if (_this3.shown) {\n          if (_this3.targetTransitionEvents.length == 0) {\n            return resolve(_this3);\n          } else {\n            var timerId = setTimeout(function () {\n              _loglevel2.default.warn(_this3.constructor.name + ' did not completely inactivate (state: ' + _this3.state + ', activeState: ' + _this3.activeState + ').');\n            }, _this3.transitionCheckTimeout);\n            (0, _utils.once)(_this3.element, 'transitionend', function (event, destroyListenerFn) {\n              if (event.target === _this3.element && _this3.targetTransitionEvents.includes(event.propertyName)) {\n                clearTimeout(timerId);\n                // Uninstall the event listener for transitionend\n                destroyListenerFn();\n                _this3.activeState = 'inactive';\n                _events2.default.trigger(ActiveAnimatedElement.EVENTS.INACTIVE, _this3);\n                return resolve(_this3);\n              }\n            }, true);\n          }\n        } else {\n          _this3.activeState = 'inactive';\n          _events2.default.trigger(ActiveAnimatedElement.EVENTS.INACTIVE, _this3);\n          return resolve(_this3);\n        }\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being active.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilActive',\n    value: function waitUntilActive() {\n      var _this4 = this;\n\n      if (this.active) return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, ActiveAnimatedElement.EVENTS.ACTIVE, function (event, destroyListenerFn) {\n          if (event.detail === _this4) {\n            destroyListenerFn();\n            return resolve(_this4);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being inactive.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilInactive',\n    value: function waitUntilInactive() {\n      var _this5 = this;\n\n      if (this.inactive) return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, ActiveAnimatedElement.EVENTS.INACTIVE, function (event, destroyListenerFn) {\n          if (event.detail === _this5) {\n            destroyListenerFn();\n            return resolve(_this5);\n          }\n        }, true);\n      });\n    }\n  }, {\n    key: 'activating',\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to being activated.\n     */\n    get: function get() {\n      return this.activeState === 'activating';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already active.\n     */\n\n  }, {\n    key: 'active',\n    get: function get() {\n      return this.activeState === 'active';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to inactive.\n     */\n\n  }, {\n    key: 'inactivating',\n    get: function get() {\n      return this.activeState === 'inactivating';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already inactive.\n     */\n\n  }, {\n    key: 'inactive',\n    get: function get() {\n      return this.activeState === 'inactive';\n    }\n  }], [{\n    key: 'EVENTS',\n    get: function get() {\n      return Object.assign({}, _AnimatedElement3.default.EVENTS, {\n        ACTIVATING: 'onesignal.nb.activeanimatedelement.activating',\n        ACTIVE: 'onesignal.nb.activeanimatedelement.active',\n        INACTIVATING: 'onesignal.nb.activeanimatedelement.inactivating',\n        INACTIVE: 'onesignal.nb.activeanimatedelement.inactive'\n      });\n    }\n  }]);\n\n  return ActiveAnimatedElement;\n})(_AnimatedElement3.default);\n\nexports.default = ActiveAnimatedElement;//@ sourceMappingURL=data:application/json;base64,")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement = __webpack_require__(14);\n\nvar _AnimatedElement2 = _interopRequireDefault(_AnimatedElement);\n\nvar _ActiveAnimatedElement = __webpack_require__(15);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Launcher = (function (_ActiveAnimatedElemen) {\n  _inherits(Launcher, _ActiveAnimatedElemen);\n\n  function Launcher(bell) {\n    _classCallCheck(this, Launcher);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Launcher).call(this, '.onesignal-bell-launcher', 'onesignal-bell-launcher-active', null, null, 'onesignal-bell-launcher-inactive', 'hidden', 'active'));\n\n    _this.bell = bell;\n    _this.wasInactive = false;\n    return _this;\n  }\n\n  _createClass(Launcher, [{\n    key: 'resize',\n    value: function resize(size) {\n      var _this2 = this;\n\n      // If the size is the same, do nothing and resolve an empty promise\n      if (size === 'small' && (0, _utils.hasCssClass)(this.element, 'onesignal-bell-launcher-sm') || size === 'medium' && (0, _utils.hasCssClass)(this.element, 'onesignal-bell-launcher-md') || size === 'large' && (0, _utils.hasCssClass)(this.element, 'onesignal-bell-launcher-lg')) {\n        return Promise.resolve(this);\n      }\n      (0, _utils.removeCssClass)(this.element, 'onesignal-bell-launcher-sm');\n      (0, _utils.removeCssClass)(this.element, 'onesignal-bell-launcher-md');\n      (0, _utils.removeCssClass)(this.element, 'onesignal-bell-launcher-lg');\n      if (size === 'small') {\n        (0, _utils.addCssClass)(this.element, 'onesignal-bell-launcher-sm');\n      } else if (size === 'medium') {\n        (0, _utils.addCssClass)(this.element, 'onesignal-bell-launcher-md');\n      } else if (size === 'large') {\n        (0, _utils.addCssClass)(this.element, 'onesignal-bell-launcher-lg');\n      } else {\n        throw new Error('Invalid OneSignal bell size ' + size);\n      }\n      if (!this.shown) {\n        return Promise.resolve(this);\n      } else {\n        return new Promise(function (resolve) {\n          // Once the launcher has finished shrinking down\n          if (_this2.targetTransitionEvents.length == 0) {\n            return resolve(_this2);\n          } else {\n            var timerId = setTimeout(function () {\n              _loglevel2.default.warn(_this2.constructor.name + ' did not completely resize (state: ' + _this2.state + ', activeState: ' + _this2.activeState + ').');\n            }, _this2.transitionCheckTimeout);\n            (0, _utils.once)(_this2.element, 'transitionend', function (event, destroyListenerFn) {\n              if (event.target === _this2.element && _this2.targetTransitionEvents.includes(event.propertyName)) {\n                clearTimeout(timerId);\n                // Uninstall the event listener for transitionend\n                destroyListenerFn();\n                return resolve(_this2);\n              }\n            }, true);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'activateIfInactive',\n    value: function activateIfInactive() {\n      if (this.inactive) {\n        this.wasInactive = true;\n        return this.activate();\n      } else return (0, _utils.nothing)();\n    }\n  }, {\n    key: 'inactivateIfWasInactive',\n    value: function inactivateIfWasInactive() {\n      if (this.wasInactive) {\n        this.wasInactive = false;\n        return this.inactivate();\n      } else return (0, _utils.nothing)();\n    }\n  }, {\n    key: 'clearIfWasInactive',\n    value: function clearIfWasInactive() {\n      this.wasInactive = false;\n    }\n  }, {\n    key: 'inactivate',\n    value: function inactivate() {\n      var _this3 = this;\n\n      return this.bell.message.hide().then(function () {\n        if (_this3.bell.badge.content.length > 0) {\n          return _this3.bell.badge.hide().then(function () {\n            return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'inactivate', _this3).call(_this3), _this3.resize('small')]);\n          }).then(function () {\n            return _this3.bell.badge.show();\n          }).catch(function (e) {\n            return _loglevel2.default.error(e);\n          });\n        } else {\n          return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'inactivate', _this3).call(_this3), _this3.resize('small')]);\n        }\n      });\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      var _this4 = this;\n\n      if (this.bell.badge.content.length > 0) {\n        return this.bell.badge.hide().then(function () {\n          return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'activate', _this4).call(_this4), _this4.resize(_this4.bell.options.size)]);\n        }).then(function () {\n          return _this4.bell.badge.show();\n        }).catch(function (e) {\n          return _loglevel2.default.error(e);\n        });\n      } else {\n        return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'activate', this).call(this), this.resize(this.bell.options.size)]);\n      }\n    }\n  }]);\n\n  return Launcher;\n})(_ActiveAnimatedElement2.default);\n\nexports.default = Launcher;//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _ActiveAnimatedElement = __webpack_require__(15);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Badge = (function (_ActiveAnimatedElemen) {\n  _inherits(Badge, _ActiveAnimatedElemen);\n\n  function Badge() {\n    _classCallCheck(this, Badge);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Badge).call(this, '.onesignal-bell-launcher-badge', 'onesignal-bell-launcher-badge-opened', null, 'onesignal-bell-launcher-badge-active', null, 'hidden'));\n  }\n\n  _createClass(Badge, [{\n    key: 'increment',\n    value: function increment() {\n      // If it IS a number (is not not a number)\n      if (!isNaN(this.content)) {\n        var badgeNumber = +this.content; // Coerce to int\n        badgeNumber += 1;\n        this.content = badgeNumber.toString();\n        return badgeNumber;\n      }\n    }\n  }, {\n    key: 'decrement',\n    value: function decrement() {\n      // If it IS a number (is not not a number)\n      if (!isNaN(this.content)) {\n        var badgeNumber = +this.content; // Coerce to int\n        badgeNumber -= 1;\n        if (badgeNumber > 0) this.content = badgeNumber.toString();else this.content = '';\n        return badgeNumber;\n      }\n    }\n  }]);\n\n  return Badge;\n})(_ActiveAnimatedElement2.default);\n\nexports.default = Badge;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9CYWRnZS5qcz82MDVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQU1xQixLQUFLO1lBQUwsS0FBSzs7QUFFeEIsV0FGbUIsS0FBSyxHQUVWOzBCQUZLLEtBQUs7O2tFQUFMLEtBQUssYUFHaEIsZ0NBQWdDLEVBQUUsc0NBQXNDLEVBQUUsSUFBSSxFQUFFLHNDQUFzQyxFQUFFLElBQUksRUFBRSxRQUFRO0dBQzdJOztlQUprQixLQUFLOztnQ0FNWjs7QUFFVixVQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUN4QixZQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQy9CLG1CQUFXLElBQUksQ0FBQyxDQUFDO0FBQ2pCLFlBQUksQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ3RDLGVBQU8sV0FBVyxDQUFDO09BQ3BCO0tBQ0Y7OztnQ0FFVzs7QUFFVixVQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUN4QixZQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQy9CLG1CQUFXLElBQUksQ0FBQyxDQUFDO0FBQ2pCLFlBQUksV0FBVyxHQUFHLENBQUMsRUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUMsS0FFdEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7QUFDcEIsZUFBTyxXQUFXLENBQUM7T0FDcEI7S0FDRjs7O1NBM0JrQixLQUFLOzs7a0JBQUwsS0FBSyIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzUHVzaE5vdGlmaWNhdGlvbnNTdXBwb3J0ZWQsIGlzQnJvd3NlclNhZmFyaSwgaXNTdXBwb3J0ZWRGaXJlRm94LCBpc0Jyb3dzZXJGaXJlZm94LCBnZXRGaXJlZm94VmVyc2lvbiwgaXNTdXBwb3J0ZWRTYWZhcmksIGdldENvbnNvbGVTdHlsZSwgYWRkQ3NzQ2xhc3MsIHJlbW92ZUNzc0NsYXNzLCBvbmNlIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IGxvZyBmcm9tICdsb2dsZXZlbCc7XG5pbXBvcnQgRXZlbnQgZnJvbSAnLi4vZXZlbnRzLmpzJztcbmltcG9ydCBBY3RpdmVBbmltYXRlZEVsZW1lbnQgZnJvbSAnLi9BY3RpdmVBbmltYXRlZEVsZW1lbnQuanMnO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhZGdlIGV4dGVuZHMgQWN0aXZlQW5pbWF0ZWRFbGVtZW50IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcignLm9uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLWJhZGdlJywgJ29uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLWJhZGdlLW9wZW5lZCcsIG51bGwsICdvbmVzaWduYWwtYmVsbC1sYXVuY2hlci1iYWRnZS1hY3RpdmUnLCBudWxsLCAnaGlkZGVuJyk7XG4gIH1cblxuICBpbmNyZW1lbnQoKSB7XG4gICAgLy8gSWYgaXQgSVMgYSBudW1iZXIgKGlzIG5vdCBub3QgYSBudW1iZXIpXG4gICAgaWYgKCFpc05hTih0aGlzLmNvbnRlbnQpKSB7XG4gICAgICBsZXQgYmFkZ2VOdW1iZXIgPSArdGhpcy5jb250ZW50OyAvLyBDb2VyY2UgdG8gaW50XG4gICAgICBiYWRnZU51bWJlciArPSAxO1xuICAgICAgdGhpcy5jb250ZW50ID0gYmFkZ2VOdW1iZXIudG9TdHJpbmcoKTtcbiAgICAgIHJldHVybiBiYWRnZU51bWJlcjtcbiAgICB9XG4gIH1cblxuICBkZWNyZW1lbnQoKSB7XG4gICAgLy8gSWYgaXQgSVMgYSBudW1iZXIgKGlzIG5vdCBub3QgYSBudW1iZXIpXG4gICAgaWYgKCFpc05hTih0aGlzLmNvbnRlbnQpKSB7XG4gICAgICBsZXQgYmFkZ2VOdW1iZXIgPSArdGhpcy5jb250ZW50OyAvLyBDb2VyY2UgdG8gaW50XG4gICAgICBiYWRnZU51bWJlciAtPSAxO1xuICAgICAgaWYgKGJhZGdlTnVtYmVyID4gMClcbiAgICAgICAgdGhpcy5jb250ZW50ID0gYmFkZ2VOdW1iZXIudG9TdHJpbmcoKTtcbiAgICAgIGVsc2VcbiAgICAgICAgdGhpcy5jb250ZW50ID0gJyc7XG4gICAgICByZXR1cm4gYmFkZ2VOdW1iZXI7XG4gICAgfVxuICB9XG59XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvYmVsbC9CYWRnZS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _ActiveAnimatedElement = __webpack_require__(15);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nvar _bell = __webpack_require__(12);\n\nvar _bell2 = _interopRequireDefault(_bell);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\nvar _Message = __webpack_require__(19);\n\nvar _Message2 = _interopRequireDefault(_Message);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Button = (function (_ActiveAnimatedElemen) {\n  _inherits(Button, _ActiveAnimatedElemen);\n\n  function Button(bell) {\n    _classCallCheck(this, Button);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Button).call(this, '.onesignal-bell-launcher-button', null, null, 'onesignal-bell-launcher-button-active', null, 'shown', []));\n\n    _this.bell = bell;\n    _this.events = {\n      mouse: 'bell.launcher.button.mouse'\n    };\n\n    _this.element.addEventListener('touchstart', function (e) {\n      //log.debug('touchstart');\n      _this.onHovering(e);\n      _this.onTap(e);\n    });\n\n    _this.element.addEventListener('mouseenter', function (e) {\n      //log.debug('mouseenter');\n      _this.onHovering(e);\n    });\n\n    _this.element.addEventListener('mouseleave', function (e) {\n      //log.debug('mouseleave');\n      _this.onHovered(e);\n    });\n    _this.element.addEventListener('touchmove', function (e) {\n      //log.debug('touchmove');\n      _this.onHovered(e);\n    });\n\n    _this.element.addEventListener('mousedown', function (e) {\n      //log.debug('mousedown');\n      _this.onTap(e);\n    });\n\n    _this.element.addEventListener('mouseup', function (e) {\n      //log.debug('mouseup');\n      _this.onEndTap(e);\n    });\n\n    _this.element.addEventListener('click', function (e) {\n      //log.debug('click');\n      _this.onHovered(e);\n      _this.onClick(e);\n    });\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: 'onHovering',\n    value: function onHovering(e) {\n      if (_limitStore2.default.isEmpty(this.events.mouse) || _limitStore2.default.getLast(this.events.mouse) === 'out') {\n        _events2.default.trigger(_bell2.default.EVENTS.HOVERING);\n      }\n      _limitStore2.default.put(this.events.mouse, 'over');\n    }\n  }, {\n    key: 'onHovered',\n    value: function onHovered(e) {\n      _limitStore2.default.put(this.events.mouse, 'out');\n      _events2.default.trigger(_bell2.default.EVENTS.HOVERED);\n    }\n  }, {\n    key: 'onTap',\n    value: function onTap(e) {\n      this.pulse();\n      this.activate();\n      this.bell.badge.activate();\n    }\n  }, {\n    key: 'onEndTap',\n    value: function onEndTap(e) {\n      this.inactivate();\n      this.bell.badge.inactivate();\n    }\n  }, {\n    key: 'onClick',\n    value: function onClick(e) {\n      _events2.default.trigger(_bell2.default.EVENTS.BELL_CLICK);\n      _events2.default.trigger(_bell2.default.EVENTS.LAUNCHER_CLICK);\n    }\n  }, {\n    key: 'pulse',\n    value: function pulse() {\n      (0, _utils.removeDomElement)('.pulse-ring');\n      addDomElement(this.element, 'beforeend', '<div class=\"pulse-ring\"></div>');\n    }\n  }]);\n\n  return Button;\n})(_ActiveAnimatedElement2.default);\n\nexports.default = Button;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9CdXR0b24uanM/NjRlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFTcUIsTUFBTTtZQUFOLE1BQU07O0FBRXpCLFdBRm1CLE1BQU0sQ0FFYixJQUFJLEVBQUU7MEJBRkMsTUFBTTs7dUVBQU4sTUFBTSxhQUdqQixpQ0FBaUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLHVDQUF1QyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRTs7QUFFL0csVUFBSyxJQUFJLEdBQUcsSUFBSSxDQUFDO0FBQ2pCLFVBQUssTUFBTSxHQUFHO0FBQ1osV0FBSyxFQUFFLDRCQUE0QjtLQUNwQyxDQUFDOztBQUVGLFVBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLFlBQVksRUFBRSxVQUFDLENBQUMsRUFBSzs7QUFFakQsWUFBSyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkIsWUFBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDZixDQUFDLENBQUM7O0FBRUgsVUFBSyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLFVBQUMsQ0FBQyxFQUFLOztBQUVqRCxZQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNwQixDQUFDLENBQUM7O0FBRUgsVUFBSyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLFVBQUMsQ0FBQyxFQUFLOztBQUVqRCxZQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNuQixDQUFDLENBQUM7QUFDSCxVQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsVUFBQyxDQUFDLEVBQUs7O0FBRWhELFlBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ25CLENBQUMsQ0FBQzs7QUFFSCxVQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsVUFBQyxDQUFDLEVBQUs7O0FBRWhELFlBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2YsQ0FBQyxDQUFDOztBQUVILFVBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxVQUFDLENBQUMsRUFBSzs7QUFFOUMsWUFBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEIsQ0FBQyxDQUFDOztBQUVILFVBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFDLENBQUMsRUFBSzs7QUFFNUMsWUFBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEIsWUFBSyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDakIsQ0FBQyxDQUFDOztHQUNKOztlQTdDa0IsTUFBTTs7K0JBK0NkLENBQUMsRUFBRTtBQUNaLFVBQUkscUJBQVcsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUkscUJBQVcsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxFQUFFO0FBQzVGLHlCQUFNLE9BQU8sQ0FBQyxlQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztPQUNyQztBQUNELDJCQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztLQUMzQzs7OzhCQUVTLENBQUMsRUFBRTtBQUNYLDJCQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN6Qyx1QkFBTSxPQUFPLENBQUMsZUFBSyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDcEM7OzswQkFFSyxDQUFDLEVBQUU7QUFDUCxVQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDYixVQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDaEIsVUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDNUI7Ozs2QkFFUSxDQUFDLEVBQUU7QUFDVixVQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7QUFDbEIsVUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUM7S0FDOUI7Ozs0QkFFTyxDQUFDLEVBQUU7QUFDVCx1QkFBTSxPQUFPLENBQUMsZUFBSyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDdEMsdUJBQU0sT0FBTyxDQUFDLGVBQUssTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0tBQzNDOzs7NEJBRU87QUFDTixpQkFyRjhLLGdCQUFnQixFQXFGN0ssYUFBYSxDQUFDLENBQUM7QUFDaEMsbUJBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxnQ0FBZ0MsQ0FBQyxDQUFDO0tBQzVFOzs7U0E5RWtCLE1BQU07OztrQkFBTixNQUFNIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNQdXNoTm90aWZpY2F0aW9uc1N1cHBvcnRlZCwgaXNCcm93c2VyU2FmYXJpLCBpc1N1cHBvcnRlZEZpcmVGb3gsIGlzQnJvd3NlckZpcmVmb3gsIGdldEZpcmVmb3hWZXJzaW9uLCBpc1N1cHBvcnRlZFNhZmFyaSwgZ2V0Q29uc29sZVN0eWxlLCBhZGRDc3NDbGFzcywgcmVtb3ZlQ3NzQ2xhc3MsIHJlbW92ZURvbUVsZW1lbnQsIG9uY2UsIHdoZW4gfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgbG9nIGZyb20gJ2xvZ2xldmVsJztcbmltcG9ydCBFdmVudCBmcm9tICcuLi9ldmVudHMuanMnO1xuaW1wb3J0IEFjdGl2ZUFuaW1hdGVkRWxlbWVudCBmcm9tICcuL0FjdGl2ZUFuaW1hdGVkRWxlbWVudC5qcyc7XG5pbXBvcnQgQmVsbCBmcm9tICcuL2JlbGwuanMnO1xuaW1wb3J0IExpbWl0U3RvcmUgZnJvbSAnLi4vbGltaXRTdG9yZS5qcyc7XG5pbXBvcnQgTWVzc2FnZSBmcm9tICcuL01lc3NhZ2UuanMnO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1dHRvbiBleHRlbmRzIEFjdGl2ZUFuaW1hdGVkRWxlbWVudCB7XG5cbiAgY29uc3RydWN0b3IoYmVsbCkge1xuICAgIHN1cGVyKCcub25lc2lnbmFsLWJlbGwtbGF1bmNoZXItYnV0dG9uJywgbnVsbCwgbnVsbCwgJ29uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLWJ1dHRvbi1hY3RpdmUnLCBudWxsLCAnc2hvd24nLCBbXSk7XG5cbiAgICB0aGlzLmJlbGwgPSBiZWxsO1xuICAgIHRoaXMuZXZlbnRzID0ge1xuICAgICAgbW91c2U6ICdiZWxsLmxhdW5jaGVyLmJ1dHRvbi5tb3VzZSdcbiAgICB9O1xuXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCAoZSkgPT4ge1xuICAgICAgLy9sb2cuZGVidWcoJ3RvdWNoc3RhcnQnKTtcbiAgICAgIHRoaXMub25Ib3ZlcmluZyhlKTtcbiAgICAgIHRoaXMub25UYXAoZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIChlKSA9PiB7XG4gICAgICAvL2xvZy5kZWJ1ZygnbW91c2VlbnRlcicpO1xuICAgICAgdGhpcy5vbkhvdmVyaW5nKGUpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoZSkgPT4ge1xuICAgICAgLy9sb2cuZGVidWcoJ21vdXNlbGVhdmUnKTtcbiAgICAgIHRoaXMub25Ib3ZlcmVkKGUpO1xuICAgIH0pO1xuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCAoZSkgPT4ge1xuICAgICAgLy9sb2cuZGVidWcoJ3RvdWNobW92ZScpO1xuICAgICAgdGhpcy5vbkhvdmVyZWQoZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGUpID0+IHtcbiAgICAgIC8vbG9nLmRlYnVnKCdtb3VzZWRvd24nKTtcbiAgICAgIHRoaXMub25UYXAoZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIChlKSA9PiB7XG4gICAgICAvL2xvZy5kZWJ1ZygnbW91c2V1cCcpO1xuICAgICAgdGhpcy5vbkVuZFRhcChlKTtcbiAgICB9KTtcblxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAvL2xvZy5kZWJ1ZygnY2xpY2snKTtcbiAgICAgIHRoaXMub25Ib3ZlcmVkKGUpO1xuICAgICAgdGhpcy5vbkNsaWNrKGUpO1xuICAgIH0pO1xuICB9XG5cbiAgb25Ib3ZlcmluZyhlKSB7XG4gICAgaWYgKExpbWl0U3RvcmUuaXNFbXB0eSh0aGlzLmV2ZW50cy5tb3VzZSkgfHwgTGltaXRTdG9yZS5nZXRMYXN0KHRoaXMuZXZlbnRzLm1vdXNlKSA9PT0gJ291dCcpIHtcbiAgICAgIEV2ZW50LnRyaWdnZXIoQmVsbC5FVkVOVFMuSE9WRVJJTkcpO1xuICAgIH1cbiAgICBMaW1pdFN0b3JlLnB1dCh0aGlzLmV2ZW50cy5tb3VzZSwgJ292ZXInKTtcbiAgfVxuXG4gIG9uSG92ZXJlZChlKSB7XG4gICAgTGltaXRTdG9yZS5wdXQodGhpcy5ldmVudHMubW91c2UsICdvdXQnKTtcbiAgICBFdmVudC50cmlnZ2VyKEJlbGwuRVZFTlRTLkhPVkVSRUQpO1xuICB9XG5cbiAgb25UYXAoZSkge1xuICAgIHRoaXMucHVsc2UoKTtcbiAgICB0aGlzLmFjdGl2YXRlKCk7XG4gICAgdGhpcy5iZWxsLmJhZGdlLmFjdGl2YXRlKCk7XG4gIH1cblxuICBvbkVuZFRhcChlKSB7XG4gICAgdGhpcy5pbmFjdGl2YXRlKCk7XG4gICAgdGhpcy5iZWxsLmJhZGdlLmluYWN0aXZhdGUoKTtcbiAgfVxuXG4gIG9uQ2xpY2soZSkge1xuICAgIEV2ZW50LnRyaWdnZXIoQmVsbC5FVkVOVFMuQkVMTF9DTElDSyk7XG4gICAgRXZlbnQudHJpZ2dlcihCZWxsLkVWRU5UUy5MQVVOQ0hFUl9DTElDSyk7XG4gIH1cblxuICBwdWxzZSgpIHtcbiAgICByZW1vdmVEb21FbGVtZW50KCcucHVsc2UtcmluZycpO1xuICAgIGFkZERvbUVsZW1lbnQodGhpcy5lbGVtZW50LCAnYmVmb3JlZW5kJywgJzxkaXYgY2xhc3M9XCJwdWxzZS1yaW5nXCI+PC9kaXY+Jyk7XG4gIH1cbn1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9iZWxsL0J1dHRvbi5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement2 = __webpack_require__(14);\n\nvar _AnimatedElement3 = _interopRequireDefault(_AnimatedElement2);\n\nvar _bell = __webpack_require__(12);\n\nvar _bell2 = _interopRequireDefault(_bell);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Message = (function (_AnimatedElement) {\n  _inherits(Message, _AnimatedElement);\n\n  function Message(bell) {\n    _classCallCheck(this, Message);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Message).call(this, '.onesignal-bell-launcher-message', 'onesignal-bell-launcher-message-opened', null, 'hidden', ['opacity', 'transform'], '.onesignal-bell-launcher-message-body'));\n\n    _this.bell = bell;\n    _this.contentType = '';\n    _this.queued = [];\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: 'display',\n    // This message was a user-queued message\n    value: function display(type, content) {\n      var _this2 = this;\n\n      var duration = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n      _loglevel2.default.debug('Calling %cdisplay(' + type + ', ' + content + ', ' + duration + ').', (0, _utils.getConsoleStyle)('code'));\n      return new Promise(function (resolve, reject) {\n        (_this2.shown ? _this2.hide() : (0, _utils.nothing)()).then(function () {\n          _this2.content = content;\n          _this2.contentType = type;\n        }).then(function () {\n          return _this2.show();\n        }).then(function () {\n          return (0, _utils.delay)(duration);\n        }).then(function () {\n          return _this2.hide();\n        }).then(function () {\n          // Reset back to normal content type so stuff can show a gain\n          _this2.content = _this2.getTipForState();\n          _this2.contentType = 'tip';\n        }).then(resolve).catch(function (e) {\n          return _loglevel2.default.error(e);\n        });\n      });\n    }\n  }, {\n    key: 'getTipForState',\n    value: function getTipForState() {\n      if (this.bell.state === _bell2.default.STATES.UNSUBSCRIBED) return this.bell.text['tip.state.unsubscribed'];else if (this.bell.state === _bell2.default.STATES.SUBSCRIBED) return this.bell.text['tip.state.subscribed'];else if (this.bell.state === _bell2.default.STATES.BLOCKED) return this.bell.text['tip.state.blocked'];\n    }\n  }, {\n    key: 'enqueue',\n    value: function enqueue(message) {\n      var _this3 = this;\n\n      var notify = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      this.queued.push(message);\n      return new Promise(function (resolve) {\n        if (_this3.bell.badge.shown) {\n          _this3.bell.badge.hide().then(function () {\n            return _this3.bell.badge.increment();\n          }).then(function () {\n            return _this3.bell.badge.show();\n          }).then(resolve);\n        } else {\n          _this3.bell.badge.increment();\n          if (_this3.bell.initialized) _this3.bell.badge.show().then(resolve);else resolve();\n        }\n      });\n    }\n  }, {\n    key: 'dequeue',\n    value: function dequeue(message) {\n      var _this4 = this;\n\n      var dequeuedMessage = this.queued.pop(message);\n      return new Promise(function (resolve) {\n        if (_this4.bell.badge.shown) {\n          _this4.bell.badge.hide().then(function () {\n            return _this4.bell.badge.decrement();\n          }).then(function (numMessagesLeft) {\n            if (numMessagesLeft > 0) {\n              return _this4.bell.badge.show();\n            } else {\n              return Promise.resolve(_this4);\n            }\n          }).then(resolve(dequeuedMessage));\n        } else {\n          _this4.bell.badge.decrement();\n          resolve(dequeuedMessage);\n        }\n      });\n    }\n  }], [{\n    key: 'TIMEOUT',\n    get: function get() {\n      return 2500;\n    }\n  }, {\n    key: 'TYPES',\n    get: function get() {\n      return {\n        TIP: 'tip', // Appears on button hover, disappears on button endhover\n        MESSAGE: 'message', // Appears manually for a specified duration, site visitor cannot control its display. Messages override tips\n        QUEUED: 'queued' };\n    }\n  }]);\n\n  return Message;\n})(_AnimatedElement3.default);\n\nexports.default = Message;//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement2 = __webpack_require__(14);\n\nvar _AnimatedElement3 = _interopRequireDefault(_AnimatedElement2);\n\nvar _bowser = __webpack_require__(13);\n\nvar Browser = _interopRequireWildcard(_bowser);\n\nvar _bell = __webpack_require__(12);\n\nvar _bell2 = _interopRequireDefault(_bell);\n\nvar _vars = __webpack_require__(1);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dialog = (function (_AnimatedElement) {\n  _inherits(Dialog, _AnimatedElement);\n\n  function Dialog(bell) {\n    _classCallCheck(this, Dialog);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dialog).call(this, '.onesignal-bell-launcher-dialog', 'onesignal-bell-launcher-dialog-opened', null, 'hidden', ['opacity', 'transform'], '.onesignal-bell-launcher-dialog-body'));\n\n    _this.bell = bell;\n    _this.subscribeButtonId = '#onesignal-bell-container .onesignal-bell-launcher #subscribe-button';\n    _this.unsubscribeButtonId = '#onesignal-bell-container .onesignal-bell-launcher #unsubscribe-button';\n    _this.notificationIcons = null;\n\n    window.addEventListener(_bell2.default.EVENTS.STATE_CHANGED, function (state) {\n      state = state.detail;\n      if (state.to === _bell2.default.STATES.SUBSCRIBED) {\n        if (_this.notificationIcons === null) {\n          _this.getNotificationIcons().then(function (icons) {\n            _this.notificationIcons = icons;\n          });\n        }\n      }\n    });\n\n    window.addEventListener('click', function (event) {\n      if (event.target === document.querySelector(_this.subscribeButtonId)) _events2.default.trigger(_bell2.default.EVENTS.SUBSCRIBE_CLICK);else if (event.target === document.querySelector(_this.unsubscribeButtonId)) _events2.default.trigger(_bell2.default.EVENTS.UNSUBSCRIBE_CLICK);\n    });\n    return _this;\n  }\n\n  _createClass(Dialog, [{\n    key: 'getNotificationIcons',\n    value: function getNotificationIcons() {\n      if (!OneSignal._app_id) {\n        return Promise.resolve(null);\n      }\n      var url = OneSignal._API_URL + 'apps/' + OneSignal._app_id + '/icon';\n      return new Promise(function (resolve, reject) {\n        fetch(url).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.errors) {\n            _loglevel2.default.error('API call %c' + url, (0, _utils.getConsoleStyle)('code'), 'failed with:', data.errors);\n            reject(null);\n          }\n          resolve(data);\n        }).catch(function (ex) {\n          _loglevel2.default.error('Call %cgetNotificationIcons()', (0, _utils.getConsoleStyle)('code'), 'failed with:', ex);\n          reject(null);\n        });\n      });\n    }\n  }, {\n    key: 'getPlatformNotificationIcon',\n    value: function getPlatformNotificationIcon() {\n      if (this.notificationIcons) {\n        if (Browser.chrome || Browser.firefox) {\n          return this.notificationIcons.chrome || this.notificationIcons.safari;\n        } else if (Browser.safari) {\n          return this.notificationIcons.safari || this.notificationIcons.chrome;\n        }\n      } else return null;\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      var _this2 = this;\n\n      return this.updateBellLauncherDialogBody().then(function () {\n        return _get(Object.getPrototypeOf(Dialog.prototype), 'show', _this2).call(_this2);\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      });\n    }\n  }, {\n    key: 'updateBellLauncherDialogBody',\n    value: function updateBellLauncherDialogBody() {\n      var _this3 = this;\n\n      return OneSignal._getSubscription().then(function (currentSetSubscription) {\n        (0, _utils.clearDomElementChildren)(document.querySelector(_this3.nestedContentSelector));\n        var contents = 'Nothing to show.';\n\n        var footer = '';\n        if (_this3.bell.options.showCredit) {\n          footer = '<div class=\"divider\"></div>\\n                  <div class=\"kickback\">Powered by <a href=\"https://onesignal.com\" class=\"kickback\" target=\"_blank\">OneSignal</a></div>';\n        }\n\n        if (_this3.bell.state === _bell2.default.STATES.SUBSCRIBED && currentSetSubscription === true || _this3.bell.state === _bell2.default.STATES.UNSUBSCRIBED && currentSetSubscription === false) {\n\n          var notificationIconHtml = '';\n          var imageUrl = _this3.getPlatformNotificationIcon();\n          if (imageUrl) {\n            notificationIconHtml = '<div class=\"push-notification-icon\"><img src=\"' + imageUrl + '\"></div>';\n          } else {\n            notificationIconHtml = '<div class=\"push-notification-icon push-notification-icon-default\"></div>';\n          }\n\n          var buttonHtml = '';\n          if (_this3.bell.state !== _bell2.default.STATES.SUBSCRIBED) buttonHtml = '<button type=\"button\" class=\"action\" id=\"' + _this3.subscribeButtonSelectorId + '\">' + _this3.bell.text['dialog.main.button.subscribe'] + '</button>';else buttonHtml = '<button type=\"button\" class=\"action\" id=\"' + _this3.unsubscribeButtonSelectorId + '\">' + _this3.bell.text['dialog.main.button.unsubscribe'] + '</button>';\n\n          contents = '\\n                  <h1>' + _this3.bell.text['dialog.main.title'] + '</h1>\\n                  <div class=\"divider\"></div>\\n                  <div class=\"push-notification\">\\n                    ' + notificationIconHtml + '\\n                    <div class=\"push-notification-text-container\">\\n                      <div class=\"push-notification-text push-notification-text-short\"></div>\\n                      <div class=\"push-notification-text\"></div>\\n                      <div class=\"push-notification-text push-notification-text-medium\"></div>\\n                      <div class=\"push-notification-text\"></div>\\n                      <div class=\"push-notification-text push-notification-text-medium\"></div>\\n                    </div>\\n                  </div>\\n                  <div class=\"action-container\">\\n                    ' + buttonHtml + '\\n                  </div>\\n                  ' + footer + '\\n                ';\n        } else if (_this3.bell.state === _bell2.default.STATES.BLOCKED) {\n          var imageUrl = null;\n          if (Browser.chrome) {\n            if (!Browser.mobile && !Browser.tablet) {\n              imageUrl = _vars.HOST_URL + '/bell/chrome-unblock.jpg';\n            }\n          } else if (Browser.firefox) imageUrl = _vars.HOST_URL + '/bell/firefox-unblock.jpg';else if (Browser.safari) imageUrl = _vars.HOST_URL + '/bell/safari-unblock.jpg';\n\n          var instructionsHtml = '';\n          if (imageUrl) {\n            instructionsHtml = '\\n\\n            <a href=\"' + imageUrl + '\" target=\"_blank\"><img src=\"' + imageUrl + '\"></a></div>\\n            ';\n          }\n\n          if ((Browser.mobile || Browser.tablet) && Browser.chrome) {\n            instructionsHtml = '\\n            <ol>\\n            <li>Access <strong>Settings</strong> by tapping the three menu dots <strong>⋮</strong></li>\\n            <li>Click <strong>Site settings</strong> under Advanced.</li>\\n            <li>Click <strong>Notifications</strong>.</li>\\n            <li>Find and click this entry for this website.</li>\\n            <li>Click <strong>Notifications</strong> and set it to <strong>Allow</strong>.</li>\\n            </ol>\\n          ';\n          }\n          contents = '\\n                  <h1>' + _this3.bell.text['dialog.blocked.title'] + '</h1>\\n                  <div class=\"divider\"></div>\\n                  <div class=\"instructions\">\\n                  <p>' + _this3.bell.text['dialog.blocked.message'] + '</p>\\n                  ' + instructionsHtml + '\\n                  </div>\\n                  ' + footer + '\\n                ';\n        }\n        addDomElement(document.querySelector(_this3.nestedContentSelector), 'beforeend', contents);\n      });\n    }\n  }, {\n    key: 'subscribeButtonSelectorId',\n    get: function get() {\n      return 'subscribe-button';\n    }\n  }, {\n    key: 'unsubscribeButtonSelectorId',\n    get: function get() {\n      return 'unsubscribe-button';\n    }\n  }, {\n    key: 'subscribeButton',\n    get: function get() {\n      return this.element.querySelector('#' + this.subscribeButtonSelectorId);\n    }\n  }, {\n    key: 'unsubscribeButton',\n    get: function get() {\n      return this.element.querySelector('#' + this.unsubscribeButtonSelectorId);\n    }\n  }]);\n\n  return Dialog;\n})(_AnimatedElement3.default);\n\nexports.default = Dialog;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(22);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(24)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n	// When the styles change, update the <style> tags\n	if(!content.locals) {\n		module.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/autoprefixer-loader/index.js!./../../node_modules/sass-loader/index.js!./bell.scss\", function() {\n			var newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/autoprefixer-loader/index.js!./../../node_modules/sass-loader/index.js!./bell.scss\");\n			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n			update(newContent);\n		});\n	}\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9iZWxsLnNjc3M/MThjZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFtRjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uLy4uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXItbG9hZGVyL2luZGV4LmpzIS4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzIS4vYmVsbC5zY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uLy4uL25vZGVfbW9kdWxlcy9hdXRvcHJlZml4ZXItbG9hZGVyL2luZGV4LmpzIS4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzIS4vYmVsbC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vLi4vLi4vbm9kZV9tb2R1bGVzL2F1dG9wcmVmaXhlci1sb2FkZXIvaW5kZXguanMhLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9iZWxsLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvYmVsbC9iZWxsLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAyMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)();\n// imports\n\n\n// module\nexports.push([module.id, "/*!\\n* CleanSlate\\n*   github.com/premasagar/cleanslate\\n*\\n*/.onesignal-reset,.onesignal-reset a,.onesignal-reset abbr,.onesignal-reset acronym,.onesignal-reset address,.onesignal-reset applet,.onesignal-reset area,.onesignal-reset article,.onesignal-reset aside,.onesignal-reset audio,.onesignal-reset b,.onesignal-reset big,.onesignal-reset blockquote,.onesignal-reset button,.onesignal-reset canvas,.onesignal-reset caption,.onesignal-reset cite,.onesignal-reset code,.onesignal-reset col,.onesignal-reset colgroup,.onesignal-reset datalist,.onesignal-reset dd,.onesignal-reset del,.onesignal-reset dfn,.onesignal-reset div,.onesignal-reset dl,.onesignal-reset dt,.onesignal-reset em,.onesignal-reset fieldset,.onesignal-reset figcaption,.onesignal-reset figure,.onesignal-reset footer,.onesignal-reset form,.onesignal-reset h1,.onesignal-reset h2,.onesignal-reset h3,.onesignal-reset h4,.onesignal-reset h5,.onesignal-reset h6,.onesignal-reset header,.onesignal-reset hr,.onesignal-reset i,.onesignal-reset iframe,.onesignal-reset img,.onesignal-reset input,.onesignal-reset ins,.onesignal-reset kbd,.onesignal-reset label,.onesignal-reset legend,.onesignal-reset li,.onesignal-reset main,.onesignal-reset map,.onesignal-reset mark,.onesignal-reset menu,.onesignal-reset meta,.onesignal-reset nav,.onesignal-reset object,.onesignal-reset ol,.onesignal-reset optgroup,.onesignal-reset option,.onesignal-reset output,.onesignal-reset p,.onesignal-reset pre,.onesignal-reset progress,.onesignal-reset q,.onesignal-reset samp,.onesignal-reset section,.onesignal-reset select,.onesignal-reset small,.onesignal-reset span,.onesignal-reset strike,.onesignal-reset strong,.onesignal-reset sub,.onesignal-reset summary,.onesignal-reset sup,.onesignal-reset table,.onesignal-reset tbody,.onesignal-reset td,.onesignal-reset textarea,.onesignal-reset tfoot,.onesignal-reset th,.onesignal-reset thead,.onesignal-reset time,.onesignal-reset tr,.onesignal-reset tt,.onesignal-reset ul,.onesignal-reset var,.onesignal-reset video{background-attachment:scroll;background-color:transparent;background-image:none;background-position:0 0;background-repeat:repeat;border-color:#000;border:medium none currentColor;bottom:auto;clear:none;clip:auto;color:inherit;counter-increment:none;counter-reset:none;cursor:auto;direction:inherit;display:inline;float:none;font-family:inherit;font-size:inherit;font-style:inherit;font-variant:normal;font-weight:inherit;height:auto;left:auto;letter-spacing:normal;line-height:inherit;list-style-type:inherit;list-style-position:outside;list-style-image:none;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;outline:medium none invert;overflow:visible;padding:0;position:static;quotes:\\"\\" \\"\\";right:auto;table-layout:auto;text-align:inherit;text-decoration:inherit;text-indent:0;text-transform:none;top:auto;unicode-bidi:normal;vertical-align:baseline;visibility:inherit;white-space:normal;width:auto;word-spacing:normal;z-index:auto;background-origin:padding-box;background-clip:border-box;background-size:auto;-webkit-border-image:none;-o-border-image:none;border-image:none;border-radius:0;box-shadow:none;box-sizing:content-box;-webkit-column-count:auto;-moz-column-count:auto;column-count:auto;-webkit-column-gap:normal;-moz-column-gap:normal;column-gap:normal;-webkit-column-rule:medium none #000;-moz-column-rule:medium none #000;column-rule:medium none #000;-webkit-column-span:1;-moz-column-span:1;column-span:1;-webkit-column-width:auto;-moz-column-width:auto;column-width:auto;-webkit-font-feature-settings:normal;font-feature-settings:normal;overflow-x:visible;overflow-y:visible;-webkit-hyphens:manual;-moz-hyphens:manual;-ms-hyphens:manual;hyphens:manual;-webkit-perspective:none;-ms-perspective:none;-o-perspective:none;perspective:none;-webkit-perspective-origin:50% 50%;-ms-perspective-origin:50% 50%;-o-perspective-origin:50% 50%;perspective-origin:50% 50%;-webkit-backface-visibility:visible;backface-visibility:visible;text-shadow:none;-webkit-transition:all 0s ease 0s;transition:all 0s ease 0s;-webkit-transform:none;-ms-transform:none;transform:none;-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;-webkit-transform-style:flat;transform-style:flat;word-break:normal}.onesignal-reset,.onesignal-reset address,.onesignal-reset article,.onesignal-reset audio,.onesignal-reset blockquote,.onesignal-reset caption,.onesignal-reset colgroup,.onesignal-reset dd,.onesignal-reset dialog,.onesignal-reset div,.onesignal-reset dl,.onesignal-reset dt,.onesignal-reset fieldset,.onesignal-reset figure,.onesignal-reset footer,.onesignal-reset form,.onesignal-reset h1,.onesignal-reset h2,.onesignal-reset h3,.onesignal-reset h4,.onesignal-reset h5,.onesignal-reset h6,.onesignal-reset header,.onesignal-reset hgroup,.onesignal-reset hr,.onesignal-reset main,.onesignal-reset menu,.onesignal-reset nav,.onesignal-reset ol,.onesignal-reset option,.onesignal-reset p,.onesignal-reset pre,.onesignal-reset progress,.onesignal-reset section,.onesignal-reset summary,.onesignal-reset ul,.onesignal-reset video{display:block}.onesignal-reset h1,.onesignal-reset h2,.onesignal-reset h3,.onesignal-reset h4,.onesignal-reset h5,.onesignal-reset h6{font-weight:700}.onesignal-reset h1{font-size:2em;padding:.67em 0}.onesignal-reset h2{font-size:1.5em;padding:.83em 0}.onesignal-reset h3{font-size:1.17em;padding:.83em 0}.onesignal-reset h4{font-size:1em}.onesignal-reset h5{font-size:.83em}.onesignal-reset p{margin:1em 0}.onesignal-reset table{display:table}.onesignal-reset thead{display:table-header-group}.onesignal-reset tbody{display:table-row-group}.onesignal-reset tfoot{display:table-footer-group}.onesignal-reset tr{display:table-row}.onesignal-reset td,.onesignal-reset th{display:table-cell;padding:2px}.onesignal-reset ol,.onesignal-reset ul{margin:1em 0}.onesignal-reset ol li,.onesignal-reset ol ol li,.onesignal-reset ol ol ol li,.onesignal-reset ol ol ul li,.onesignal-reset ol ul ul li,.onesignal-reset ul li,.onesignal-reset ul ol ol li,.onesignal-reset ul ul li,.onesignal-reset ul ul ol li,.onesignal-reset ul ul ul li{list-style-position:inside;margin-top:.08em}.onesignal-reset ol ol,.onesignal-reset ol ol ol,.onesignal-reset ol ol ul,.onesignal-reset ol ul,.onesignal-reset ol ul ul,.onesignal-reset ul ol,.onesignal-reset ul ol ol,.onesignal-reset ul ul,.onesignal-reset ul ul ol,.onesignal-reset ul ul ul{padding-left:40px;margin:0}.onesignal-reset nav ol,.onesignal-reset nav ul{list-style-type:none}.onesignal-reset menu,.onesignal-reset ul{list-style-type:disc}.onesignal-reset ol{list-style-type:decimal}.onesignal-reset menu menu,.onesignal-reset menu ul,.onesignal-reset ol menu,.onesignal-reset ol ul,.onesignal-reset ul menu,.onesignal-reset ul ul{list-style-type:circle}.onesignal-reset menu menu menu,.onesignal-reset menu menu ul,.onesignal-reset menu ol menu,.onesignal-reset menu ol ul,.onesignal-reset menu ul menu,.onesignal-reset menu ul ul,.onesignal-reset ol menu menu,.onesignal-reset ol menu ul,.onesignal-reset ol ol menu,.onesignal-reset ol ol ul,.onesignal-reset ol ul menu,.onesignal-reset ol ul ul,.onesignal-reset ul menu menu,.onesignal-reset ul menu ul,.onesignal-reset ul ol menu,.onesignal-reset ul ol ul,.onesignal-reset ul ul menu,.onesignal-reset ul ul ul{list-style-type:square}.onesignal-reset li{display:list-item;min-height:auto;min-width:auto;padding-left:20px}.onesignal-reset strong{font-weight:700}.onesignal-reset em{font-style:italic}.onesignal-reset code,.onesignal-reset kbd,.onesignal-reset pre,.onesignal-reset samp{font-family:monospace}.onesignal-reset a{color:blue;text-decoration:underline}.onesignal-reset a:visited{color:#529}.onesignal-reset a,.onesignal-reset a *,.onesignal-reset input[type=checkbox],.onesignal-reset input[type=radio],.onesignal-reset input[type=submit],.onesignal-reset select{cursor:pointer}.onesignal-reset button,.onesignal-reset input[type=submit]{text-align:center;padding:2px 6px 3px;border-radius:4px;text-decoration:none;font-family:arial,helvetica,sans-serif;font-size:small;-webkit-appearance:push-button;color:buttontext;border:1px solid #a6a6a6;background:#d3d3d3;background:#fff;background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#fff),color-stop(100%,#ddd),color-stop(100%,#d1d1d1),color-stop(100%,#ddd));background:-webkit-linear-gradient(top,#fff 0,#ddd 100%,#d1d1d1 100%,#ddd 100%);background:linear-gradient(to bottom,#fff 0,#ddd 100%,#d1d1d1 100%,#ddd 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#ffffff\',endColorstr=\'#dddddd\',GradientType=0);-o-box-shadow:1px 1px 0 #eee;box-shadow:1px 1px 0 #eee;outline:initial}.onesignal-reset button{padding:1px 6px 2px;margin-right:5px}.onesignal-reset input[type=hidden]{display:none}.onesignal-reset textarea{-webkit-appearance:textarea;background:#fff;padding:2px;margin-left:4px;word-wrap:break-word;white-space:pre-wrap;font-size:11px;font-family:arial,helvetica,sans-serif;line-height:13px;resize:both}.onesignal-reset input,.onesignal-reset select,.onesignal-reset textarea{border:1px solid #ccc}.onesignal-reset select{font-size:11px;font-family:helvetica,arial,sans-serif;display:inline-block}.onesignal-reset input:focus,.onesignal-reset textarea:focus{outline:5px auto -webkit-focus-ring-color;outline:initial}.onesignal-reset input[type=text]{background:#fff;padding:1px;font-family:initial;font-size:small}.onesignal-reset input[type=checkbox],.onesignal-reset input[type=radio]{border:1px solid #2b2b2b;border-radius:4px;outline:intial}.onesignal-reset input[type=radio]{margin:2px 2px 3px}.onesignal-reset button:active,.onesignal-reset input[type=submit]:active{background:#3b679e;background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#3b679e),color-stop(50%,#2b88d9),color-stop(51%,#207cca),color-stop(100%,#7db9e8));background:-webkit-linear-gradient(top,#3b679e 0,#2b88d9 50%,#207cca 51%,#7db9e8 100%);background:linear-gradient(to bottom,#3b679e 0,#2b88d9 50%,#207cca 51%,#7db9e8 100%);border-color:#5259b0}.onesignal-reset abbr[title],.onesignal-reset acronym[title],.onesignal-reset dfn[title]{cursor:help;border-bottom-width:1px;border-bottom-style:dotted}.onesignal-reset ins{background-color:#ff9;color:#000}.onesignal-reset del{text-decoration:line-through}.onesignal-reset blockquote,.onesignal-reset q{quotes:none}.onesignal-reset blockquote:after,.onesignal-reset blockquote:before,.onesignal-reset li:after,.onesignal-reset li:before,.onesignal-reset q:after,.onesignal-reset q:before{content:\\"\\"}.onesignal-reset input,.onesignal-reset select{vertical-align:middle}.onesignal-reset table{border-collapse:collapse;border-spacing:0}.onesignal-reset hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0}.onesignal-reset [dir=rtl]{direction:rtl}.onesignal-reset mark{background-color:#ff9;color:#000;font-style:italic;font-weight:700}.onesignal-reset menu{padding-left:40px;padding-top:8px}.onesignal-reset [hidden],.onesignal-reset template{display:none}.onesignal-reset abbr[title]{border-bottom:1px dotted}.onesignal-reset sub,.onesignal-reset sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}.onesignal-reset sup{top:-.5em}.onesignal-reset sub{bottom:-.25em}.onesignal-reset img{border:0}.onesignal-reset figure{margin:0}.onesignal-reset textarea{overflow:auto;vertical-align:top}.onesignal-reset{font-size:medium;line-height:1;direction:ltr;text-align:left;text-align:start;font-family:Times New Roman,Times,serif;color:#000;font-style:normal;font-weight:400;text-decoration:none;list-style-type:disc}.onesignal-reset pre{white-space:pre}#onesignal-bell-container.onesignal-reset{z-index:2147483000;position:fixed}#onesignal-bell-container.onesignal-reset.onesignal-bell-container-bottom-left{bottom:0;left:0}#onesignal-bell-container.onesignal-reset.onesignal-bell-container-bottom-right{bottom:0;right:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:absolute;z-index:2147483000;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;-webkit-transform:scale(.01) translateZ(0);transform:scale(.01) translateZ(0);opacity:0;-webkit-transition:opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;width:330px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left{bottom:20px;left:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm{-webkit-transform-origin:16px center;-ms-transform-origin:16px center;transform-origin:16px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-message{left:42px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog{bottom:39px;left:0;-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:before{left:5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:after{left:7px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md{-webkit-transform-origin:24px center;-ms-transform-origin:24px center;transform-origin:24px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-message{left:61px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog{bottom:58px;left:0;-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:before{left:12px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:after{left:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg{-webkit-transform-origin:32px center;-ms-transform-origin:32px center;transform-origin:32px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-message{left:81px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog{bottom:78px;left:0;-webkit-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:before{left:18px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:after{left:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-badge{left:4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-message{-webkit-transform-origin:left center;-ms-transform-origin:left center;transform-origin:left center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-message:after{right:100%;border-right-color:#000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-button{left:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right{bottom:20px;right:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm{-webkit-transform-origin:314px center;-ms-transform-origin:314px center;transform-origin:314px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-message{right:42px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog{bottom:39px;right:0;-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:before{right:5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:after{right:7px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md{-webkit-transform-origin:306px center;-ms-transform-origin:306px center;transform-origin:306px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-message{right:61px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog{bottom:58px;right:0;-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:before{right:12px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:after{right:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg{-webkit-transform-origin:298px center;-ms-transform-origin:298px center;transform-origin:298px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-message{right:81px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog{bottom:78px;right:0;-webkit-transform-origin:right bottom;-ms-transform-origin:right bottom;transform-origin:right bottom}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:before{right:18px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:after{right:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-badge{right:4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-message{-webkit-transform-origin:right center;-ms-transform-origin:right center;transform-origin:right center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-message:after{left:100%;border-left-color:#000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-button{right:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-button{position:absolute;bottom:0;border-radius:50%;-webkit-transition:border 175ms ease-in-out,width 175ms ease-in-out,height 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:border 175ms ease-in-out,width 175ms ease-in-out,height 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:transform 175ms ease-in-out,border 175ms ease-in-out,width 175ms ease-in-out,height 175ms ease-in-out;transition:transform 175ms ease-in-out,border 175ms ease-in-out,width 175ms ease-in-out,height 175ms ease-in-out,-webkit-transform 175ms ease-in-out;cursor:pointer;z-index:2147483000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-button svg{width:100%;height:100%;-webkit-filter:drop-shadow(0 2px 4px rgba(34,36,38,.35));filter:drop-shadow(0 2px 4px rgba(34,36,38,.35))}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-button.onesignal-bell-launcher-button-hover{cursor:pointer}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-badge{position:absolute;bottom:0;border-radius:50%;text-align:center;top:0;cursor:pointer;-webkit-filter:drop-shadow(0 2px 4px rgba(34,36,38,0));filter:drop-shadow(0 2px 4px rgba(34,36,38,0));-webkit-transition:border 175ms ease-in-out,opacity .21s ease-in-out,width .21s ease-in-out,height .21s ease-in-out,position .21s ease-in-out,right .21s ease-in-out,top .21s ease-in-out,bottom .21s ease-in-out,left .21s ease-in-out,-webkit-transform 175ms ease-in-out;transition:border 175ms ease-in-out,opacity .21s ease-in-out,width .21s ease-in-out,height .21s ease-in-out,position .21s ease-in-out,right .21s ease-in-out,top .21s ease-in-out,bottom .21s ease-in-out,left .21s ease-in-out,-webkit-transform 175ms ease-in-out;transition:transform 175ms ease-in-out,border 175ms ease-in-out,opacity .21s ease-in-out,width .21s ease-in-out,height .21s ease-in-out,position .21s ease-in-out,right .21s ease-in-out,top .21s ease-in-out,bottom .21s ease-in-out,left .21s ease-in-out;transition:transform 175ms ease-in-out,border 175ms ease-in-out,opacity .21s ease-in-out,width .21s ease-in-out,height .21s ease-in-out,position .21s ease-in-out,right .21s ease-in-out,top .21s ease-in-out,bottom .21s ease-in-out,left .21s ease-in-out,-webkit-transform 175ms ease-in-out;z-index:2147483400;opacity:0;-webkit-transform:scale(.01);-ms-transform:scale(.01);transform:scale(.01);pointer-events:none}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-badge.onesignal-bell-launcher-badge-hover{cursor:pointer}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-badge.onesignal-bell-launcher-badge-opened{opacity:1;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message{position:absolute;color:#fff;background:#000;cursor:pointer;border-radius:5px;-webkit-transform:translateY(-50%) scaleX(0) translateZ(0);transform:translateY(-50%) scaleX(0) translateZ(0);opacity:0;pointer-events:none;-webkit-transition:opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;top:50%;z-index:2147481000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message:after{top:50%;border:solid transparent;content:\\" \\";height:0;width:0;position:absolute;pointer-events:none;border-color:transparent}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{z-index:2147482000;max-width:100%;white-space:nowrap;text-overflow:ellipsis}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message.onesignal-bell-launcher-message-opened{pointer-events:auto;opacity:1;-webkit-transform:translateY(-50%) scaleX(1) translateZ(0);transform:translateY(-50%) scaleX(1) translateZ(0)}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog{cursor:pointer;position:absolute;background-color:#fff;border-radius:5px;border:1px solid rgba(0,0,0,.1);-webkit-filter:drop-shadow(0 2px 2px rgba(34,36,38,.15));filter:drop-shadow(0 2px 2px rgba(34,36,38,.15));opacity:0;-webkit-transform:scale(0) translateZ(0);transform:scale(0) translateZ(0);-webkit-transition:opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out,-webkit-transform 175ms ease-in-out;z-index:2147481000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog ol{counter-reset:foo;display:table;border-spacing:.3em .75em}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog ol>li{counter-increment:foo;display:table-row;margin-bottom:.75em}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog ol>li:before{content:counter(foo) \\".\\";display:table-cell;text-align:right}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog:after,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog:before{top:100%;border:solid transparent;content:\\" \\";height:0;width:0;position:absolute}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{z-index:2147482000;max-width:100%;white-space:nowrap;text-overflow:ellipsis;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog.onesignal-bell-launcher-dialog-opened{-webkit-transform:scale(1) translateZ(0);transform:scale(1) translateZ(0);opacity:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a{box-sizing:border-box;text-decoration:none;color:initial}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:active,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:focus,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:hover,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:hover:active,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:visited{text-decoration:none;color:initial}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button{box-sizing:border-box;border:1px solid transparent;padding:.625em 1em;box-shadow:none;border-radius:4px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:12px;letter-spacing:.65px;cursor:pointer}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action{color:#fff;background:#e54b4d;width:100%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:hover{background:#dd2022}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:active{background:#b1191b}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm{height:32px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-button{width:32px;height:32px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-badge{font-size:8px;width:12px;height:12px;line-height:12px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-message{padding:9.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-message:after{border-width:6.6px;margin-top:-6.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog{padding:.5em 1em;color:#333}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:after{border-top-color:#fff;border-width:6.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:before{border-top-color:hsla(0,0%,71%,.1);border-width:8.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{font-size:14px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body h1{font-size:15px;font-weight:500;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;letter-spacing:.2px;text-align:center;color:#41090a}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body p{font-size:14px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .divider{border-bottom:1px solid rgba(0,0,0,.1);margin:3.2px -9.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .kickback{text-align:center;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:300;font-size:9.8px;letter-spacing:.5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions{max-width:95vw;max-height:70vh;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions img{width:100%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification{display:-webkit-flex;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:330px;border:1px solid rgba(0,0,0,.1);border-radius:3px;background:hsla(0,0%,98%,.5);overflow:auto;margin:.5em 0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon{width:50px;height:50px;margin:6px;margin-right:3px;border-radius:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon.push-notification-icon-default{background:#e3e4e5}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon img{width:50px;height:50px;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container{margin:6px;margin-left:3px;-webkit-flex:1;-webkit-box-flex:1;-ms-flex:1;flex:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text{height:5px;width:100%;background:#e3e4e5;margin:5px 0;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-short{width:75%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-medium{width:87%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:first-of-type{margin-top:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:last-of-type{margin-bottom:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md{height:48px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-button{width:48px;height:48px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-badge{font-size:12px;width:18px;height:18px;line-height:18px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-message{padding:14.4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-message:after{border-width:9.9px;margin-top:-9.9px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog{padding:.5em 1em;color:#333}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:after{border-top-color:#fff;border-width:9.9px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:before{border-top-color:hsla(0,0%,71%,.1);border-width:11.9px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{font-size:14px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body h1{font-size:15px;font-weight:500;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;letter-spacing:.2px;text-align:center;color:#41090a}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body p{font-size:14px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .divider{border-bottom:1px solid rgba(0,0,0,.1);margin:4.8px -14.4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .kickback{text-align:center;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:300;font-size:9.8px;letter-spacing:.5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions{max-width:95vw;max-height:70vh;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions img{width:100%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification{display:-webkit-flex;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:330px;border:1px solid rgba(0,0,0,.1);border-radius:3px;background:hsla(0,0%,98%,.5);overflow:auto;margin:.5em 0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon{width:50px;height:50px;margin:6px;margin-right:3px;border-radius:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon.push-notification-icon-default{background:#e3e4e5}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon img{width:50px;height:50px;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container{margin:6px;margin-left:3px;-webkit-flex:1;-webkit-box-flex:1;-ms-flex:1;flex:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text{height:5px;width:100%;background:#e3e4e5;margin:5px 0;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-short{width:75%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-medium{width:87%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:first-of-type{margin-top:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:last-of-type{margin-bottom:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg{height:64px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-button{width:64px;height:64px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-badge{font-size:12px;width:24px;height:24px;line-height:24px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-message{padding:19.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-message:after{border-width:13.2px;margin-top:-13.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog{padding:.5em 1em;color:#333}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:after{border-top-color:#fff;border-width:13.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:before{border-top-color:hsla(0,0%,71%,.1);border-width:15.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{font-size:14px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body h1{font-size:15px;font-weight:500;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;letter-spacing:.2px;text-align:center;color:#41090a}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body p{font-size:14px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .divider{border-bottom:1px solid rgba(0,0,0,.1);margin:6.4px -19.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .kickback{text-align:center;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:300;font-size:9.8px;letter-spacing:.5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions{max-width:95vw;max-height:70vh;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions img{width:100%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification{display:-webkit-flex;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:330px;border:1px solid rgba(0,0,0,.1);border-radius:3px;background:hsla(0,0%,98%,.5);overflow:auto;margin:.5em 0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon{width:50px;height:50px;margin:6px;margin-right:3px;border-radius:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon.push-notification-icon-default{background:#e3e4e5}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon img{width:50px;height:50px;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container{margin:6px;margin-left:3px;-webkit-flex:1;-webkit-box-flex:1;-ms-flex:1;flex:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text{height:5px;width:100%;background:#e3e4e5;margin:5px 0;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-short{width:75%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-medium{width:87%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:first-of-type{margin-top:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:last-of-type{margin-bottom:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button svg .background{fill:#e54b4d}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button svg .foreground{fill:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button svg .stroke{fill:none;stroke:#fff;stroke-width:3px;stroke-miterlimit:10}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button.onesignal-bell-launcher-badge-active svg .background,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button.onesignal-bell-launcher-button-active svg .background{fill:#dd2022!important}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button .pulse-ring{border:7px solid hsla(0,0%,100%,.4)}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-badge{border:1px solid #fff;background:#000;color:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button svg .background{fill:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button svg .foreground{fill:#e54b4d}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button svg .stroke{fill:none;stroke:#e54b4d;stroke-width:3px;stroke-miterlimit:10}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button.onesignal-bell-launcher-badge-active svg .background,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button.onesignal-bell-launcher-button-active svg .background{fill:#f2f2f2!important}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button .pulse-ring{border:7px solid rgba(229,75,77,.4)}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-badge{border:1px solid #fff;background:#e54b4d;color:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-active,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-enabled{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);opacity:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-disabled{visibility:hidden}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-inactive{opacity:.6}#onesignal-bell-container.onesignal-reset .pulse-ring{border-radius:50%;position:absolute;left:0;top:0;bottom:0;right:0;-webkit-animation:pulse .35s ease-in-out;animation:pulse .35s ease-in-out;-webkit-animation-iteration-count:1;animation-iteration-count:1;opacity:0;z-index:1000;pointer-events:none}@media print{#onesignal-bell-container{display:none}}@-webkit-keyframes pulse{0%{-webkit-transform:scale(.1);opacity:0;border-width:10px}50%{opacity:1;border-width:5px}to{-webkit-transform:scale(1.2);opacity:0;border-width:1px}}", ""]);\n\n// exports\n//@ sourceMappingURL=data:application/json;base64,');
},function(module,exports){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n	var list = [];\r\n\r\n	// return the list of modules as css string\r\n	list.toString = function toString() {\r\n		var result = [];\r\n		for(var i = 0; i < this.length; i++) {\r\n			var item = this[i];\r\n			if(item[2]) {\r\n				result.push("@media " + item[2] + "{" + item[1] + "}");\r\n			} else {\r\n				result.push(item[1]);\r\n			}\r\n		}\r\n		return result.join("");\r\n	};\r\n\r\n	// import a list of modules into the list\r\n	list.i = function(modules, mediaQuery) {\r\n		if(typeof modules === "string")\r\n			modules = [[null, modules, ""]];\r\n		var alreadyImportedModules = {};\r\n		for(var i = 0; i < this.length; i++) {\r\n			var id = this[i][0];\r\n			if(typeof id === "number")\r\n				alreadyImportedModules[id] = true;\r\n		}\r\n		for(i = 0; i < modules.length; i++) {\r\n			var item = modules[i];\r\n			// skip already imported module\r\n			// this implementation is not 100% perfect for weird media query combinations\r\n			//  when a module is imported multiple times with different media queries.\r\n			//  I hope this will never occur (Hey this way we have smaller bundles)\r\n			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\r\n				if(mediaQuery && !item[2]) {\r\n					item[2] = mediaQuery;\r\n				} else if(mediaQuery) {\r\n					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\r\n				}\r\n				list.push(item);\r\n			}\r\n		}\r\n	};\r\n	return list;\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqIG1vZHVsZSBpZCA9IDIzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n	memoize = function(fn) {\r\n		var memo;\r\n		return function () {\r\n			if (typeof memo === "undefined") memo = fn.apply(this, arguments);\r\n			return memo;\r\n		};\r\n	},\r\n	isOldIE = memoize(function() {\r\n		return /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n	}),\r\n	getHeadElement = memoize(function () {\r\n		return document.head || document.getElementsByTagName("head")[0];\r\n	}),\r\n	singletonElement = null,\r\n	singletonCounter = 0,\r\n	styleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n	if(true) {\r\n		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\r\n	}\r\n\r\n	options = options || {};\r\n	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n	// tags it will allow on a page\r\n	if (typeof options.singleton === "undefined") options.singleton = isOldIE();\r\n\r\n	// By default, add <style> tags to the bottom of <head>.\r\n	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";\r\n\r\n	var styles = listToStyles(list);\r\n	addStylesToDom(styles, options);\r\n\r\n	return function update(newList) {\r\n		var mayRemove = [];\r\n		for(var i = 0; i < styles.length; i++) {\r\n			var item = styles[i];\r\n			var domStyle = stylesInDom[item.id];\r\n			domStyle.refs--;\r\n			mayRemove.push(domStyle);\r\n		}\r\n		if(newList) {\r\n			var newStyles = listToStyles(newList);\r\n			addStylesToDom(newStyles, options);\r\n		}\r\n		for(var i = 0; i < mayRemove.length; i++) {\r\n			var domStyle = mayRemove[i];\r\n			if(domStyle.refs === 0) {\r\n				for(var j = 0; j < domStyle.parts.length; j++)\r\n					domStyle.parts[j]();\r\n				delete stylesInDom[domStyle.id];\r\n			}\r\n		}\r\n	};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n	for(var i = 0; i < styles.length; i++) {\r\n		var item = styles[i];\r\n		var domStyle = stylesInDom[item.id];\r\n		if(domStyle) {\r\n			domStyle.refs++;\r\n			for(var j = 0; j < domStyle.parts.length; j++) {\r\n				domStyle.parts[j](item.parts[j]);\r\n			}\r\n			for(; j < item.parts.length; j++) {\r\n				domStyle.parts.push(addStyle(item.parts[j], options));\r\n			}\r\n		} else {\r\n			var parts = [];\r\n			for(var j = 0; j < item.parts.length; j++) {\r\n				parts.push(addStyle(item.parts[j], options));\r\n			}\r\n			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n		}\r\n	}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n	var styles = [];\r\n	var newStyles = {};\r\n	for(var i = 0; i < list.length; i++) {\r\n		var item = list[i];\r\n		var id = item[0];\r\n		var css = item[1];\r\n		var media = item[2];\r\n		var sourceMap = item[3];\r\n		var part = {css: css, media: media, sourceMap: sourceMap};\r\n		if(!newStyles[id])\r\n			styles.push(newStyles[id] = {id: id, parts: [part]});\r\n		else\r\n			newStyles[id].parts.push(part);\r\n	}\r\n	return styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n	var head = getHeadElement();\r\n	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n	if (options.insertAt === "top") {\r\n		if(!lastStyleElementInsertedAtTop) {\r\n			head.insertBefore(styleElement, head.firstChild);\r\n		} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n		} else {\r\n			head.appendChild(styleElement);\r\n		}\r\n		styleElementsInsertedAtTop.push(styleElement);\r\n	} else if (options.insertAt === "bottom") {\r\n		head.appendChild(styleElement);\r\n	} else {\r\n		throw new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\r\n	}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n	styleElement.parentNode.removeChild(styleElement);\r\n	var idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n	if(idx >= 0) {\r\n		styleElementsInsertedAtTop.splice(idx, 1);\r\n	}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n	var styleElement = document.createElement("style");\r\n	styleElement.type = "text/css";\r\n	insertStyleElement(options, styleElement);\r\n	return styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n	var linkElement = document.createElement("link");\r\n	linkElement.rel = "stylesheet";\r\n	insertStyleElement(options, linkElement);\r\n	return linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n	var styleElement, update, remove;\r\n\r\n	if (options.singleton) {\r\n		var styleIndex = singletonCounter++;\r\n		styleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n	} else if(obj.sourceMap &&\r\n		typeof URL === "function" &&\r\n		typeof URL.createObjectURL === "function" &&\r\n		typeof URL.revokeObjectURL === "function" &&\r\n		typeof Blob === "function" &&\r\n		typeof btoa === "function") {\r\n		styleElement = createLinkElement(options);\r\n		update = updateLink.bind(null, styleElement);\r\n		remove = function() {\r\n			removeStyleElement(styleElement);\r\n			if(styleElement.href)\r\n				URL.revokeObjectURL(styleElement.href);\r\n		};\r\n	} else {\r\n		styleElement = createStyleElement(options);\r\n		update = applyToTag.bind(null, styleElement);\r\n		remove = function() {\r\n			removeStyleElement(styleElement);\r\n		};\r\n	}\r\n\r\n	update(obj);\r\n\r\n	return function updateStyle(newObj) {\r\n		if(newObj) {\r\n			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n				return;\r\n			update(obj = newObj);\r\n		} else {\r\n			remove();\r\n		}\r\n	};\r\n}\r\n\r\nvar replaceText = (function () {\r\n	var textStore = [];\r\n\r\n	return function (index, replacement) {\r\n		textStore[index] = replacement;\r\n		return textStore.filter(Boolean).join(\'\\n\');\r\n	};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n	var css = remove ? "" : obj.css;\r\n\r\n	if (styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = replaceText(index, css);\r\n	} else {\r\n		var cssNode = document.createTextNode(css);\r\n		var childNodes = styleElement.childNodes;\r\n		if (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n		if (childNodes.length) {\r\n			styleElement.insertBefore(cssNode, childNodes[index]);\r\n		} else {\r\n			styleElement.appendChild(cssNode);\r\n		}\r\n	}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n	var css = obj.css;\r\n	var media = obj.media;\r\n	var sourceMap = obj.sourceMap;\r\n\r\n	if(media) {\r\n		styleElement.setAttribute("media", media)\r\n	}\r\n\r\n	if(styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = css;\r\n	} else {\r\n		while(styleElement.firstChild) {\r\n			styleElement.removeChild(styleElement.firstChild);\r\n		}\r\n		styleElement.appendChild(document.createTextNode(css));\r\n	}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n	var css = obj.css;\r\n	var media = obj.media;\r\n	var sourceMap = obj.sourceMap;\r\n\r\n	if(sourceMap) {\r\n		// http://stackoverflow.com/a/26603875\r\n		css += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\r\n	}\r\n\r\n	var blob = new Blob([css], { type: "text/css" });\r\n\r\n	var oldSrc = linkElement.href;\r\n\r\n	linkElement.href = URL.createObjectURL(blob);\r\n\r\n	if(oldSrc)\r\n		URL.revokeObjectURL(oldSrc);\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,')},function(module,exports){eval('module.exports = "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<!-- Generator: Adobe Illustrator 19.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\\n<svg version=\\"1.1\\" class=\\"onesignal-bell-svg\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"\\n\\t width=\\"99.7px\\" height=\\"99.7px\\" viewBox=\\"0 0 99.7 99.7\\" style=\\"enable-background:new 0 0 99.7 99.7;\\" xml:space=\\"preserve\\">\\n<g>\\n\\t<circle class=\\"background\\" cx=\\"49.9\\" cy=\\"49.9\\" r=\\"49.9\\"/>\\n\\t<g id=\\"Layer_2\\">\\n\\t\\t<g>\\n\\t\\t\\t<path class=\\"foreground\\" d=\\"M50.1,66.2H27.7c0,0-2-0.2-2-2.1c0-1.9,1.7-2,1.7-2s6.7-3.2,6.7-5.5c0-2.3-1.1-3.9-1.1-13.3\\n\\t\\t\\t\\ts6-16.6,13.2-16.6c0,0,1-2.4,3.9-2.4c2.8,0,3.8,2.4,3.8,2.4c7.2,0,13.2,7.2,13.2,16.6s-1,11-1,13.3c0,2.3,6.7,5.5,6.7,5.5\\n\\t\\t\\t\\ts1.7,0.1,1.7,2c0,1.8-2.1,2.1-2.1,2.1H50.1z\\"/>\\n\\t\\t\\t<path class=\\"foreground\\" d=\\"M42.9,68.5h14.5c0,0-1,6.3-7.2,6.3S42.9,68.5,42.9,68.5z\\"/>\\n\\t\\t\\t<ellipse class=\\"stroke\\" cx=\\"49.9\\" cy=\\"49.9\\" rx=\\"37.4\\" ry=\\"36.9\\"/>\\n\\t\\t</g>\\n\\t</g>\\n</g>\\n</svg>\\n"//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9iZWxsLnN2Zz80MDYxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1hQUFtYSIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8P3htbCB2ZXJzaW9uPVxcXCIxLjBcXFwiIGVuY29kaW5nPVxcXCJ1dGYtOFxcXCI/PlxcbjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOS4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT5cXG48c3ZnIHZlcnNpb249XFxcIjEuMVxcXCIgY2xhc3M9XFxcIm9uZXNpZ25hbC1iZWxsLXN2Z1xcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB4bWxuczp4bGluaz1cXFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1xcXCIgeD1cXFwiMHB4XFxcIiB5PVxcXCIwcHhcXFwiXFxuXFx0IHdpZHRoPVxcXCI5OS43cHhcXFwiIGhlaWdodD1cXFwiOTkuN3B4XFxcIiB2aWV3Qm94PVxcXCIwIDAgOTkuNyA5OS43XFxcIiBzdHlsZT1cXFwiZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA5OS43IDk5Ljc7XFxcIiB4bWw6c3BhY2U9XFxcInByZXNlcnZlXFxcIj5cXG48Zz5cXG5cXHQ8Y2lyY2xlIGNsYXNzPVxcXCJiYWNrZ3JvdW5kXFxcIiBjeD1cXFwiNDkuOVxcXCIgY3k9XFxcIjQ5LjlcXFwiIHI9XFxcIjQ5LjlcXFwiLz5cXG5cXHQ8ZyBpZD1cXFwiTGF5ZXJfMlxcXCI+XFxuXFx0XFx0PGc+XFxuXFx0XFx0XFx0PHBhdGggY2xhc3M9XFxcImZvcmVncm91bmRcXFwiIGQ9XFxcIk01MC4xLDY2LjJIMjcuN2MwLDAtMi0wLjItMi0yLjFjMC0xLjksMS43LTIsMS43LTJzNi43LTMuMiw2LjctNS41YzAtMi4zLTEuMS0zLjktMS4xLTEzLjNcXG5cXHRcXHRcXHRcXHRzNi0xNi42LDEzLjItMTYuNmMwLDAsMS0yLjQsMy45LTIuNGMyLjgsMCwzLjgsMi40LDMuOCwyLjRjNy4yLDAsMTMuMiw3LjIsMTMuMiwxNi42cy0xLDExLTEsMTMuM2MwLDIuMyw2LjcsNS41LDYuNyw1LjVcXG5cXHRcXHRcXHRcXHRzMS43LDAuMSwxLjcsMmMwLDEuOC0yLjEsMi4xLTIuMSwyLjFINTAuMXpcXFwiLz5cXG5cXHRcXHRcXHQ8cGF0aCBjbGFzcz1cXFwiZm9yZWdyb3VuZFxcXCIgZD1cXFwiTTQyLjksNjguNWgxNC41YzAsMC0xLDYuMy03LjIsNi4zUzQyLjksNjguNSw0Mi45LDY4LjV6XFxcIi8+XFxuXFx0XFx0XFx0PGVsbGlwc2UgY2xhc3M9XFxcInN0cm9rZVxcXCIgY3g9XFxcIjQ5LjlcXFwiIGN5PVxcXCI0OS45XFxcIiByeD1cXFwiMzcuNFxcXCIgcnk9XFxcIjM2LjlcXFwiLz5cXG5cXHRcXHQ8L2c+XFxuXFx0PC9nPlxcbjwvZz5cXG48L3N2Zz5cXG5cIlxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3Jhdy1sb2FkZXIhLi9zcmMvYmVsbC9iZWxsLnN2Z1xuICoqIG1vZHVsZSBpZCA9IDI1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(11);\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Database = (function () {\n  function Database() {\n    _classCallCheck(this, Database);\n  }\n\n  _createClass(Database, null, [{\n    key: 'getInstance',\n\n    /**\n     * Returns an existing instance or creates a new instances of the database.\n     * @returns {Promise} Returns a promise that is fulfilled when the database becomes accessible or rejects when an error occurs.\n     */\n    value: function getInstance() {\n      return new Promise(function (resolve, reject) {\n        if (Database._instance) {\n          resolve(Database._instance);\n        } else {\n          var request = indexedDB.open(\"ONE_SIGNAL_SDK_DB\", 1);\n          request.onsuccess = function (event) {\n            var database = event.target.result;\n            Database._instance = database;\n            _loglevel2.default.debug('Opening IndexedDB instance.');\n            resolve(database);\n          };\n          request.onerror = function (event) {\n            _loglevel2.default.error('Unable to open IndexedDB.', event);\n            reject(event);\n          };\n          request.onupgradeneeded = function (event) {\n            _loglevel2.default.info('The OneSignal SDK is rebuilding its IndexedDB schema from a clean slate.');\n            var db = event.target.result;\n            db.createObjectStore(\"Ids\", {\n              keyPath: \"type\"\n            });\n            db.createObjectStore(\"NotificationOpened\", {\n              keyPath: \"url\"\n            });\n            db.createObjectStore(\"Options\", {\n              keyPath: \"key\"\n            });\n            _events2.default.trigger(Database.EVENTS.REBUILT);\n          };\n        }\n      });\n    }\n\n    /**\n     * Asynchronously retrieves the value of the key at the table (if key is specified), or the entire table (if key is not specified).\n     * @param table The table to retrieve the value from.\n     * @param key The key in the table to retrieve the value of. Leave blank to get the entire table.\n     * @returns {Promise} Returns a promise that fulfills when the value(s) are available.\n     */\n\n  }, {\n    key: 'get',\n    value: function get(table, key) {\n      if (key) {\n        // Return a table-key value\n        return Database.getInstance().then(function (database) {\n          return new Promise(function (resolve, reject) {\n            var request = database.transaction(table).objectStore(table).get(key);\n            request.onsuccess = function () {\n              _events2.default.trigger(Database.EVENTS.RETRIEVED, { table: table, key: key, result: request.result });\n              resolve(request.result);\n            };\n            request.onerror = function () {\n              reject(request.errorCode);\n            };\n          });\n        });\n      } else {\n        // Return all values in table\n        return new Promise(function (resolve, reject) {\n          Database.getInstance().then(function (database) {\n            var jsonResult = {};\n            var cursor = database.transaction(table).objectStore(table).openCursor();\n            cursor.onsuccess = function (event) {\n              var cursorResult = event.target.result;\n              if (cursorResult) {\n                _events2.default.trigger(Database.EVENTS.RETRIEVED, cursorResult.value);\n                jsonResult[cursorResult.key] = cursorResult.value.value;\n                cursorResult.continue();\n              } else {\n                resolve(jsonResult);\n              }\n            };\n            cursor.onerror = function (event) {\n              reject(cursor.errorCode);\n            };\n          }).catch(function (e) {\n            _loglevel2.default.error(e);\n            reject(e);\n          });\n        });\n      }\n    }\n\n    /**\n     * Asynchronously puts the specified value in the specified table.\n     * @param table\n     * @param key\n     */\n\n  }, {\n    key: 'put',\n    value: function put(table, value) {\n      return Database.getInstance().then(function (database) {\n        database.transaction([table], 'readwrite').objectStore(table).put(value);\n        _events2.default.trigger(Database.EVENTS.SET, value);\n        return value;\n      });\n    }\n\n    /**\n     * Asynchronously removes the specified key from the table.\n     * @returns {Promise} Returns a promise containing a key that is fulfilled when deletion is completed.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(table, key) {\n      return Database.getInstance().then(function (database) {\n        database.transaction([table], 'readwrite').objectStore(table).delete(key);\n        return key;\n      });\n    }\n  }, {\n    key: 'printIds',\n    value: function printIds() {\n      Promise.all([Database.get('Ids', 'appId'), Database.get('Ids', 'registrationId'), Database.get('Ids', 'userId')]).then(function (contents) {\n        _loglevel2.default.info('appId:', contents[0]);\n        _loglevel2.default.info('registrationId:', contents[1]);\n        _loglevel2.default.info('userId:', contents[2]);\n      });\n    }\n  }, {\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        REBUILT: 'onesignal.db.rebuilt',\n        RETRIEVED: 'onesignal.db.retrieved',\n        SET: 'onesignal.db.set'\n      };\n    }\n  }]);\n\n  return Database;\n})();\n\nexports.default = Database;//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["ServiceWorker"] = __webpack_require__(28);\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2VydmljZVdvcmtlci5qcz8yMGY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtHQUFtTCxFIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBnbG9iYWxbXCJTZXJ2aWNlV29ya2VyXCJdID0gcmVxdWlyZShcIi0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvaW5kZXguanM/e1xcXCJwcmVzZXRzXFxcIjpbXFxcImVzMjAxNVxcXCJdLFxcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZX0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL3NyYy9TZXJ2aWNlV29ya2VyLmpzXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2V4cG9zZS1sb2FkZXI/U2VydmljZVdvcmtlciEuL3NyYy9TZXJ2aWNlV29ya2VyLmpzXG4gKiogbW9kdWxlIGlkID0gMjdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _vars = __webpack_require__(1);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nvar _api = __webpack_require__(9);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\n__webpack_require__(29);\n\nvar _database = __webpack_require__(26);\n\nvar _database2 = _interopRequireDefault(_database);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ServiceWorker = (function () {\n  function ServiceWorker() {\n    _classCallCheck(this, ServiceWorker);\n  }\n\n  _createClass(ServiceWorker, null, [{\n    key: 'run',\n    value: function run() {\n      self.addEventListener('push', ServiceWorker.onPushReceived);\n      self.addEventListener('notificationclick', ServiceWorker.onNotificationClicked);\n      self.addEventListener('install', ServiceWorker.onServiceWorkerInstalled);\n\n      // If the user is proxying through our subdomain (e.g. website.onesignal.com/sdks/)\n      if (ServiceWorker.onOurSubdomain) {\n        // Cache resources?\n        self.addEventListener('fetch', ServiceWorker.onFetch);\n      }\n    }\n  }, {\n    key: 'onPushReceived',\n\n    /**\n     * Occurs when a push message is received.\n     * This method handles the receipt of a push signal on all web browsers except Safari, which uses the OS to handle notifications.\n     * @param event\n     */\n    value: function onPushReceived(event) {\n      _loglevel2.default.debug('Called %conPushReceived(' + JSON.stringify(event, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n\n      event.waitUntil(new Promise(function (resolve, reject) {\n        var extra = {};\n        ServiceWorker._getTitle().then(function (title) {\n          extra.title = title;\n          return _database2.default.get('Options', 'defaultIcon');\n        }).then(function (defaultIconResult) {\n          extra.defaultIconResult = defaultIconResult;\n          return extra;\n        }).then(function (extra) {\n          return ServiceWorker._getLastNotifications();\n        }).then(function (notifications) {\n\n          // At this point, we have an array of notification objects (all the JSON is parsed)\n          // We want to fire a notification for each object\n          // We need to use event.waitUntil() to extend the life of the service worker (workers can be killed if idling)\n          // We want to extend the service worker lifetime until all promises for showNotification resolve\n          var notificationEventPromises = [];\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = notifications[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var notification = _step.value;\n\n              var data = {\n                id: notification.custom.i,\n                message: notification.alert,\n                additionalData: notification.custom.a\n              };\n\n              if (notification.title) data.title = notification.title;else data.title = extra.title;\n\n              if (notification.custom.u) data.launchURL = notification.custom.u;\n\n              if (notification.icon) data.icon = notification.icon;else if (extra.defaultIconResult) data.icon = extra.defaultIconResult;\n\n              // Never nest the following line in a callback from the point of entering from _getLastNotifications\n              var notificationEventPromise = self.registration.showNotification(data.title, {\n                // https://developers.google.com/web/updates/2015/10/notification-requireInteraction?hl=en\n                // On Chrome 47+ Desktop only, notifications will be dismissed after 20 seconds unless requireInteraction is set to true\n                requireInteraction: true,\n                body: data.message,\n                icon: data.icon,\n                tag: JSON.stringify(data)\n              });\n\n              notificationEventPromises.push(notificationEventPromise);\n              return Promise.all(notificationEventPromises);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }).then(resolve).catch(function (e) {\n          return _loglevel2.default.error(e);\n        });\n      }));\n    }\n  }, {\n    key: 'onNotificationClicked',\n    value: function onNotificationClicked(event) {\n      _loglevel2.default.debug('Called %conNotificationClicked(' + JSON.stringify(event, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n\n      var notificationData = JSON.parse(event.notification.tag);\n      event.notification.close();\n\n      event.waitUntil(_database2.default.get('Options', 'defaultUrl').then(function (defaultUrlResult) {\n\n        if (defaultUrlResult) ServiceWorker.defaultLaunchUrl = defaultUrlResult.value;\n      }).then(function () {\n        return clients.matchAll({ type: 'window' });\n      }).then(function (clientList) {\n        var launchURL = registration.scope;\n        if (ServiceWorker.defaultLaunchUrl) launchURL = ServiceWorker.defaultLaunchUrl;\n        if (notificationData.launchURL) launchURL = notificationData.launchURL;\n\n        for (var i = 0; i < clientList.length; i++) {\n          var client = clientList[i];\n          if ('focus' in client && client.url == launchURL) {\n            client.focus();\n\n            // targetOrigin not valid here as the service worker owns the page.\n            client.postMessage(notificationData);\n            return;\n          }\n        }\n\n        var launchURLObject = new URL(launchURL);\n        if (launchURL !== 'javascript:void(0);' && launchURL !== 'do_not_open' && !launchURLObject.search.includes('_osp=do_not_open')) {\n          return _database2.default.put(\"NotificationOpened\", { url: launchURL, data: notificationData }).then(function () {\n\n            clients.openWindow(launchURL).catch(function (error) {\n              // Should only fall into here if going to an external URL on Chrome older than 43.\n              clients.openWindow(registration.scope + \"redirector.html?url=\" + launchURL);\n            });\n          });\n        }\n      }).then(function () {\n        return Promise.all([_database2.default.get('Ids', 'appId'), _database2.default.get('Ids', 'userId')]);\n      }).then(function (results) {\n        var _results = _slicedToArray(results, 2);\n\n        var appIdResult = _results[0];\n        var userIdResult = _results[1];\n\n        if (appIdResult && userIdResult) {\n          (0, _api.apiCall)(\"notifications/\" + notificationData.id, \"PUT\", {\n            app_id: appIdResult.id,\n            player_id: userIdResult.id,\n            opened: true\n          });\n        }\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      }));\n    }\n  }, {\n    key: 'onServiceWorkerInstalled',\n    value: function onServiceWorkerInstalled(event) {\n      _loglevel2.default.debug('Called %conServiceWorkerInstalled(' + JSON.stringify(event, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n      _loglevel2.default.info('Installing service worker: %c' + self.location.pathname, (0, _utils.getConsoleStyle)('code'), '(version ' + (\"109043\") + ')');\n\n      if (self.location.pathname.indexOf(\"OneSignalSDKWorker.js\") > -1) var serviceWorkerVersionType = 'WORKER1_ONE_SIGNAL_SW_VERSION';else var serviceWorkerVersionType = 'WORKER2_ONE_SIGNAL_SW_VERSION';\n\n      if (ServiceWorker.onOurSubdomain) {\n        event.waitUntil(_database2.default.put(\"Ids\", { type: serviceWorkerVersionType, id: (\"109043\") }).then(function () {\n          return caches.open(\"OneSignal_\" + (\"109043\"));\n        }).then(function (cache) {\n\n          return cache.addAll(ServiceWorker.CACHE_URLS);\n        }).catch(function (e) {\n          return _loglevel2.default.error(e);\n        }));\n      } else {\n        event.waitUntil(_database2.default.put(\"Ids\", { type: serviceWorkerVersionType, id: (\"109043\") }));\n      }\n    }\n  }, {\n    key: 'onFetch',\n    value: function onFetch(event) {\n      var url = event.request.url;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = ServiceWorker.CACHE_URLS[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var cacheUrl = _step2.value;\n\n          if (url.indexOf(cacheUrl) > -1) {\n            event.respondWith(caches.match(event.request).then(function (response) {\n              // Cache hit -- return response\n              if (response) {\n                return response;\n              }\n              return fetch(event.request);\n            }).catch(function (e) {\n              return _loglevel2.default.error(e);\n            }));\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_getTitle',\n\n    /**\n     * Returns a promise that is fulfilled with either the default title from the database (first priority) or the page title from the database (alternate result).\n     */\n    value: function _getTitle() {\n      return new Promise(function (resolve, reject) {\n        Promise.all([_database2.default.get('Options', 'defaultTitle'), _database2.default.get('Options', 'pageTitle')]).then(function (results) {\n          var _results2 = _slicedToArray(results, 2);\n\n          var defaultTitleResult = _results2[0];\n          var pageTitleResult = _results2[1];\n\n          if (defaultTitleResult) {\n            resolve(defaultTitleResult.value);\n          } else if (pageTitleResult && pageTitleResult.value != null) {\n            resolve(pageTitleResult.value);\n          } else {\n            resolve('');\n          }\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n          reject(e);\n        });\n      });\n    }\n\n    /**\n     * Returns a promise that is fulfilled with the JSON result of chrome notifications.\n     */\n\n  }, {\n    key: '_getLastNotifications',\n    value: function _getLastNotifications() {\n      return new Promise(function (resolve, reject) {\n        var notifications = [];\n        // Each entry is like:\n        /*\n         Object {custom: Object, icon: \"https://onesignal.com/images/notification_logo.png\", alert: \"asd\", title: \"ss\"}\n         alert: \"asd\"\n         custom: Object\n         i: \"6d7ec82f-bc56-494f-b73a-3a3b48baa2d8\"\n         __proto__: Object\n         icon: \"https://onesignal.com/images/notification_logo.png\"\n         title: \"ss\"\n         __proto__: Object\n         */\n        _database2.default.get('Ids', 'userId').then(function (userIdResult) {\n          if (userIdResult) {\n            return (0, _api.apiCall)(\"players/\" + userIdResult.id + \"/chromeweb_notification\", \"GET\");\n          } else {\n            _loglevel2.default.error('Tried to get last notifications, but there was no userId found in the database.');\n            reject(new Error('Tried to get last notifications, but there was no userId found in the database.'));\n          }\n        }).then(function (response) {\n          // The response is an array literal -- response.json() has been called by apiCall()\n          // The result looks like this:\n          // apiCall(\"players/7442a553-5f61-4b3e-aedd-bb574ef6946f/chromeweb_notification\", \"GET\").then(function(response) { console.log(response); });\n          // [\"{\"custom\":{\"i\":\"6d7ec82f-bc56-494f-b73a-3a3b48baa2d8\"},\"icon\":\"https://onesignal.com/images/notification_logo.png\",\"alert\":\"asd\",\"title\":\"ss\"}\"]\n          // ^ Notice this is an array literal with JSON data inside\n          for (var i = 0; i < response.length; i++) {\n            notifications.push(JSON.parse(response[i]));\n          }\n          resolve(notifications);\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n          reject(e);\n        });\n      });\n    }\n  }, {\n    key: 'CACHE_URLS',\n    get: function get() {\n      return ['/sdks/initOneSignalHttpIframe', '/sdks/initOneSignalHttpIframe?session=*', '/sdks/manifest_json', '/dev_sdks/initOneSignalHttpIframe', '/dev_sdks/initOneSignalHttpIframe?session=*', '/dev_sdks/manifest_json'];\n    }\n  }, {\n    key: 'onOurSubdomain',\n    get: function get() {\n      return (true) || location.href.match(/https:\\/\\/.*\\.onesignal.com\\/sdks\\//) !== null;\n    }\n  }]);\n\n  return ServiceWorker;\n})();\n\n// Expose this class to the global scope\n\nself.OneSignalServiceWorker = ServiceWorker;\n\n// Set logging to the appropriate level\n_loglevel2.default.setDefaultLevel( true ? _loglevel2.default.levels.TRACE : _loglevel2.default.levels.ERROR);\n\n// Print it's happy time!\n_loglevel2.default.info('%cOneSignal Service Worker loaded (version ' + (\"109043\") + ', ' + _environment2.default.getEnv() + ' environment).', (0, _utils.getConsoleStyle)('bold'));\n\n// Run our main file\nServiceWorker.run();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\n/**\n * https://github.com/coonsta/cache-polyfill\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nif (!Cache.prototype.addAll) {\n  Cache.prototype.addAll = function addAll(requests) {\n    var cache = this;\n\n    // Since DOMExceptions are not constructable:\n    function NetworkError(message) {\n      this.name = 'NetworkError';\n      this.code = 19;\n      this.message = message;\n    }\n    NetworkError.prototype = Object.create(Error.prototype);\n\n    return Promise.resolve().then(function () {\n      if (arguments.length < 1) throw new TypeError();\n\n      // Simulate sequence<(Request or USVString)> binding:\n      var sequence = [];\n\n      requests = requests.map(function (request) {\n        if (request instanceof Request) {\n          return request;\n        } else {\n          return String(request); // may throw TypeError\n        }\n      });\n\n      return Promise.all(requests.map(function (request) {\n        if (typeof request === 'string') {\n          request = new Request(request);\n        }\n\n        var scheme = new URL(request.url).protocol;\n\n        if (scheme !== 'http:' && scheme !== 'https:') {\n          throw new NetworkError(\"Invalid scheme\");\n        }\n\n        return fetch(request.clone());\n      }));\n    }).then(function (responses) {\n      // TODO: check that requests don't overwrite one another\n      // (don't think this is possible to polyfill due to opaque responses)\n      return Promise.all(responses.map(function (response, i) {\n        return cache.put(requests[i], response);\n      }));\n    }).then(function () {\n      return undefined;\n    });\n  };\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2FjaGUtcG9seWZpbGwuanM/NDUwMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFO0FBQzNCLE9BQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLFNBQVMsTUFBTSxDQUFDLFFBQVEsRUFBRTtBQUNqRCxRQUFJLEtBQUssR0FBRyxJQUFJOzs7QUFHaEIsYUFBUyxZQUFZLENBQUMsT0FBTyxFQUFFO0FBQzdCLFVBQUksQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDO0FBQzNCLFVBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO0FBQ2YsVUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7S0FDeEI7QUFDRCxnQkFBWSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQzs7QUFFeEQsV0FBTyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVc7QUFDdkMsVUFBSSxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxNQUFNLElBQUksU0FBUyxFQUFFLENBQUM7OztBQUdoRCxVQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7O0FBRWxCLGNBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFVBQVMsT0FBTyxFQUFFO0FBQ3hDLFlBQUksT0FBTyxZQUFZLE9BQU8sRUFBRTtBQUM5QixpQkFBTyxPQUFPLENBQUM7U0FDaEIsTUFDSTtBQUNILGlCQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFBQyxTQUN4QjtPQUNGLENBQUMsQ0FBQzs7QUFFSCxhQUFPLE9BQU8sQ0FBQyxHQUFHLENBQ2hCLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBUyxPQUFPLEVBQUU7QUFDN0IsWUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUU7QUFDL0IsaUJBQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNoQzs7QUFFRCxZQUFJLE1BQU0sR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDOztBQUUzQyxZQUFJLE1BQU0sS0FBSyxPQUFPLElBQUksTUFBTSxLQUFLLFFBQVEsRUFBRTtBQUM3QyxnQkFBTSxJQUFJLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQzFDOztBQUVELGVBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO09BQy9CLENBQUMsQ0FDSCxDQUFDO0tBQ0gsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFNBQVMsRUFBRTs7O0FBRzFCLGFBQU8sT0FBTyxDQUFDLEdBQUcsQ0FDaEIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFTLFFBQVEsRUFBRSxDQUFDLEVBQUU7QUFDbEMsZUFBTyxLQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQztPQUN6QyxDQUFDLENBQ0gsQ0FBQztLQUNILENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBVztBQUNqQixhQUFPLFNBQVMsQ0FBQztLQUNsQixDQUFDLENBQUM7R0FDSixDQUFDIiwiZmlsZSI6IjI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vY29vbnN0YS9jYWNoZS1wb2x5ZmlsbFxuICpcbiAqIENvcHlyaWdodCAyMDE1IEdvb2dsZSBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqL1xuXG5pZiAoIUNhY2hlLnByb3RvdHlwZS5hZGRBbGwpIHtcbiAgQ2FjaGUucHJvdG90eXBlLmFkZEFsbCA9IGZ1bmN0aW9uIGFkZEFsbChyZXF1ZXN0cykge1xuICAgIHZhciBjYWNoZSA9IHRoaXM7XG5cbiAgICAvLyBTaW5jZSBET01FeGNlcHRpb25zIGFyZSBub3QgY29uc3RydWN0YWJsZTpcbiAgICBmdW5jdGlvbiBOZXR3b3JrRXJyb3IobWVzc2FnZSkge1xuICAgICAgdGhpcy5uYW1lID0gJ05ldHdvcmtFcnJvcic7XG4gICAgICB0aGlzLmNvZGUgPSAxOTtcbiAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgfVxuICAgIE5ldHdvcmtFcnJvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSk7XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgdGhyb3cgbmV3IFR5cGVFcnJvcigpO1xuXG4gICAgICAvLyBTaW11bGF0ZSBzZXF1ZW5jZTwoUmVxdWVzdCBvciBVU1ZTdHJpbmcpPiBiaW5kaW5nOlxuICAgICAgdmFyIHNlcXVlbmNlID0gW107XG5cbiAgICAgIHJlcXVlc3RzID0gcmVxdWVzdHMubWFwKGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICAgICAgaWYgKHJlcXVlc3QgaW5zdGFuY2VvZiBSZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuIHJlcXVlc3Q7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFN0cmluZyhyZXF1ZXN0KTsgLy8gbWF5IHRocm93IFR5cGVFcnJvclxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgICAgICByZXF1ZXN0cy5tYXAoZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJlcXVlc3QgPSBuZXcgUmVxdWVzdChyZXF1ZXN0KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc2NoZW1lID0gbmV3IFVSTChyZXF1ZXN0LnVybCkucHJvdG9jb2w7XG5cbiAgICAgICAgICBpZiAoc2NoZW1lICE9PSAnaHR0cDonICYmIHNjaGVtZSAhPT0gJ2h0dHBzOicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBOZXR3b3JrRXJyb3IoXCJJbnZhbGlkIHNjaGVtZVwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gZmV0Y2gocmVxdWVzdC5jbG9uZSgpKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZXMpIHtcbiAgICAgIC8vIFRPRE86IGNoZWNrIHRoYXQgcmVxdWVzdHMgZG9uJ3Qgb3ZlcndyaXRlIG9uZSBhbm90aGVyXG4gICAgICAvLyAoZG9uJ3QgdGhpbmsgdGhpcyBpcyBwb3NzaWJsZSB0byBwb2x5ZmlsbCBkdWUgdG8gb3BhcXVlIHJlc3BvbnNlcylcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChcbiAgICAgICAgcmVzcG9uc2VzLm1hcChmdW5jdGlvbihyZXNwb25zZSwgaSkge1xuICAgICAgICAgIHJldHVybiBjYWNoZS5wdXQocmVxdWVzdHNbaV0sIHJlc3BvbnNlKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSk7XG4gIH07XG59XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvY2FjaGUtcG9seWZpbGwuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")}]);