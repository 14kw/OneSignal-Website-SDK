!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}var installedModules={};__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)}([function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _vars = __webpack_require__(1);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (_environment2.default.isBrowser()) {\n  // We're running in the host page, iFrame of the host page, or popup window\n  // Load OneSignal's web SDK\n  if (typeof OneSignal !== \"undefined\") var predefinedOneSignalPushes = OneSignal;\n\n  __webpack_require__(5);\n\n  if (predefinedOneSignalPushes) OneSignal._process_pushes(predefinedOneSignalPushes);\n} else if (_environment2.default.isServiceWorker()) {\n  // We're running as the service worker\n  __webpack_require__(30);\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZW50cnkuanM/OGQyNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBR0EsSUFBSSxzQkFBWSxTQUFTLEVBQUUsRUFBRTs7O0FBRzNCLE1BQUksT0FBTyxTQUFTLEtBQUssV0FBVyxFQUNsQyxJQUFJLHlCQUF5QixHQUFHLFNBQVMsQ0FBQzs7QUFFNUMscUJBQU8sQ0FBQyxDQUEyQixDQUFDLENBQUM7O0FBRXJDLE1BQUkseUJBQXlCLEVBQzNCLFNBQVMsQ0FBQyxlQUFlLENBQUMseUJBQXlCLENBQUMsQ0FBQztDQUN4RCxNQUNJLElBQUksc0JBQVksZUFBZSxFQUFFLEVBQUU7O0FBRXRDLHFCQUFPLENBQUMsRUFBeUMsQ0FBQyxDQUFDIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBERVZfSE9TVCwgUFJPRF9IT1NULCBBUElfVVJMIH0gZnJvbSAnLi92YXJzLmpzJztcbmltcG9ydCBFbnZpcm9ubWVudCBmcm9tICcuL2Vudmlyb25tZW50LmpzJ1xuXG5pZiAoRW52aXJvbm1lbnQuaXNCcm93c2VyKCkpIHtcbiAgLy8gV2UncmUgcnVubmluZyBpbiB0aGUgaG9zdCBwYWdlLCBpRnJhbWUgb2YgdGhlIGhvc3QgcGFnZSwgb3IgcG9wdXAgd2luZG93XG4gIC8vIExvYWQgT25lU2lnbmFsJ3Mgd2ViIFNES1xuICBpZiAodHlwZW9mIE9uZVNpZ25hbCAhPT0gXCJ1bmRlZmluZWRcIilcbiAgICB2YXIgcHJlZGVmaW5lZE9uZVNpZ25hbFB1c2hlcyA9IE9uZVNpZ25hbDtcblxuICByZXF1aXJlKFwiZXhwb3NlP09uZVNpZ25hbCEuL3Nkay5qc1wiKTtcblxuICBpZiAocHJlZGVmaW5lZE9uZVNpZ25hbFB1c2hlcylcbiAgICBPbmVTaWduYWwuX3Byb2Nlc3NfcHVzaGVzKHByZWRlZmluZWRPbmVTaWduYWxQdXNoZXMpO1xufVxuZWxzZSBpZiAoRW52aXJvbm1lbnQuaXNTZXJ2aWNlV29ya2VyKCkpIHtcbiAgLy8gV2UncmUgcnVubmluZyBhcyB0aGUgc2VydmljZSB3b3JrZXJcbiAgcmVxdWlyZShcImV4cG9zZT9TZXJ2aWNlV29ya2VyIS4vU2VydmljZVdvcmtlci5qc1wiKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2VudHJ5LmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.API_URL = exports.HOST_URL = exports.PROD_HOST = exports.DEV_HOST = undefined;\n\nvar _utils = __webpack_require__(2);\n\nvar DEV_HOST = exports.DEV_HOST = 'https://192.168.1.206:3000';\nvar PROD_HOST = exports.PROD_HOST = 'https://onesignal.com';\nvar HOST_URL = exports.HOST_URL = (0, _utils.isDev)() ? DEV_HOST : PROD_HOST;\nvar API_URL = exports.API_URL = ((0, _utils.isDev)() ? DEV_HOST : PROD_HOST) + '/api/v1/';\n\n// ⬸ ⤑//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdmFycy5qcz8wOTAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVPLElBQU0sUUFBUSxXQUFSLFFBQVEsR0FBRyw0QkFBNEIsQ0FBQztBQUM5QyxJQUFNLFNBQVMsV0FBVCxTQUFTLEdBQUcsdUJBQXVCLENBQUM7QUFDMUMsSUFBTSxRQUFRLFdBQVIsUUFBUSxHQUFJLFdBSmhCLEtBQUssR0FJa0IsR0FBRyxRQUFRLEdBQUcsU0FBVSxDQUFDO0FBQ2xELElBQU0sT0FBTyxXQUFQLE9BQU8sR0FBRyxDQUFDLFdBTGYsS0FBSyxHQUtpQixHQUFHLFFBQVEsR0FBRyxTQUFTLElBQUksVUFBVSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNEZXYgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuZXhwb3J0IGNvbnN0IERFVl9IT1NUID0gJ2h0dHBzOi8vMTkyLjE2OC4xLjIwNjozMDAwJztcbmV4cG9ydCBjb25zdCBQUk9EX0hPU1QgPSAnaHR0cHM6Ly9vbmVzaWduYWwuY29tJztcbmV4cG9ydCBjb25zdCBIT1NUX1VSTCA9IChpc0RldigpID8gREVWX0hPU1QgOiBQUk9EX0hPU1QpO1xuZXhwb3J0IGNvbnN0IEFQSV9VUkwgPSAoaXNEZXYoKSA/IERFVl9IT1NUIDogUFJPRF9IT1NUKSArICcvYXBpL3YxLyc7XG5cbi8vIOKsuCDipJFcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy92YXJzLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isArray = isArray;\nexports.getHumanizedTimeDuration = getHumanizedTimeDuration;\nexports.isDev = isDev;\nexports.isPushNotificationsSupported = isPushNotificationsSupported;\nexports.isBrowserSafari = isBrowserSafari;\nexports.isSupportedFireFox = isSupportedFireFox;\nexports.isBrowserFirefox = isBrowserFirefox;\nexports.getFirefoxVersion = getFirefoxVersion;\nexports.isSupportedSafari = isSupportedSafari;\nexports.removeDomElement = removeDomElement;\nexports.addDomElement = addDomElement;\nexports.clearDomElementChildren = clearDomElementChildren;\nexports.addCssClass = addCssClass;\nexports.removeCssClass = removeCssClass;\nexports.on = on;\nexports.once = once;\nexports.off = off;\nexports.getConsoleStyle = getConsoleStyle;\nexports.delay = delay;\nexports.nothing = nothing;\nexports.when = when;\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nfunction isArray(variable) {\n  return Object.prototype.toString.call(variable) === '[object Array]';\n}\n\nfunction getHumanizedTimeDuration(timeDurationInMilliseconds) {\n  function addPluralSuffix(number) {\n    return number > 1 ? 's' : '';\n  }\n  var duration = Math.floor(timeDurationInMilliseconds / 1000);\n\n  var years = Math.floor(duration / 31536000);\n  if (years) return years + ' year' + addPluralSuffix(years);\n\n  var days = Math.floor((duration %= 31536000) / 86400);\n  if (days) return days + ' day' + addPluralSuffix(days);\n\n  var hours = Math.floor((duration %= 86400) / 3600);\n  if (hours) return hours + ' hour' + addPluralSuffix(hours);\n\n  var minutes = Math.floor((duration %= 3600) / 60);\n  if (minutes) return minutes + ' minute' + addPluralSuffix(minutes);\n\n  var seconds = duration % 60;\n  if (seconds) return seconds + ' second' + addPluralSuffix(seconds);\n\n  return 'just now';\n}\n\nfunction isDev() {\n  return (true);\n}\n\nfunction isPushNotificationsSupported() {\n  var chromeVersion = navigator.appVersion.match(/Chrome\\/(.*?) /);\n\n  if (isSupportedFireFox()) return true;\n\n  if (isSupportedSafari()) return true;\n\n  // Chrome is not found in appVersion.\n  if (!chromeVersion) return false;\n\n  // Microsoft Edge\n  if (navigator.appVersion.match(/Edge/)) return false;\n\n  // Android Chrome WebView\n  if (navigator.appVersion.match(/ wv/)) return false;\n\n  // Opera\n  if (navigator.appVersion.match(/OPR\\//)) return false;\n\n  // The user is on iOS\n  if (/iPad|iPhone|iPod/.test(navigator.platform)) return false;\n\n  return parseInt(chromeVersion[1].substring(0, 2)) > 41;\n}\n\nfunction isBrowserSafari() {\n  var safariVersion = navigator.appVersion.match(\"Version/([0-9]?).* Safari\");\n  return safariVersion != null;\n}\n\nfunction isSupportedFireFox() {\n  var fireFoxVersion = navigator.userAgent.match(/(Firefox\\/)([0-9]{2,}\\.[0-9]{1,})/);\n  if (fireFoxVersion) return parseInt(fireFoxVersion[2].substring(0, 2)) > 43;\n  return false;\n}\n\nfunction isBrowserFirefox() {\n  var fireFoxVersion = navigator.userAgent.match(/(Firefox\\/)([0-9]{2,}\\.[0-9]{1,})/);\n  return fireFoxVersion != null;\n}\n\nfunction getFirefoxVersion() {\n  var fireFoxVersion = navigator.userAgent.match(/(Firefox\\/)([0-9]{2,}\\.[0-9]{1,})/);\n  if (fireFoxVersion) return parseInt(fireFoxVersion[2].substring(0, 2));else return -1;\n}\n\nfunction isSupportedSafari() {\n  var safariVersion = navigator.appVersion.match(\"Version/([0-9]?).* Safari\");\n  if (safariVersion == null) return false;\n  if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) return false;\n  return parseInt(safariVersion[1]) > 6;\n}\n\nfunction removeDomElement(selector) {\n  var els = document.querySelectorAll(selector);\n  if (els.length > 0) {\n    for (var i = 0; i < els.length; i++) {\n      els[i].parentNode.removeChild(els[i]);\n    }\n  }\n}\n\nfunction addDomElement(targetSelectorOrElement, addOrder, elementHtml) {\n  if (typeof targetSelectorOrElement === 'string') document.querySelector(targetSelectorOrElement).insertAdjacentHTML(addOrder, elementHtml);else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.insertAdjacentHTML(addOrder, elementHtml);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction clearDomElementChildren(targetSelectorOrElement) {\n  if (typeof targetSelectorOrElement === 'string') {\n    var element = document.querySelector(targetSelectorOrElement);\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') {\n    while (targetSelectorOrElement.firstChild) {\n      targetSelectorOrElement.removeChild(targetSelectorOrElement.firstChild);\n    }\n  } else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction addCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string') document.querySelector(targetSelectorOrElement).classList.add(cssClass);else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.classList.add(cssClass);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction removeCssClass(targetSelectorOrElement, cssClass) {\n  if (typeof targetSelectorOrElement === 'string') document.querySelector(targetSelectorOrElement).classList.remove(cssClass);else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.classList.remove(cssClass);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction on(targetSelectorOrElement, event, task) {\n  if (!event) {\n    _loglevel2.default.error('Cannot call on() with no event: ', event);\n  }\n  if (!task) {\n    _loglevel2.default.error('Cannot call on() with no task: ', task);\n  }\n  _loglevel2.default.debug('Debug me here.');\n  if (typeof targetSelectorOrElement === 'string') {\n    var els = document.querySelectorAll(selector);\n    if (els.length > 0) {\n      for (var i = 0; i < els.length; i++) {\n        on(els[i], task);\n      }\n    }\n  } else if (isArray(targetSelectorOrElement)) {\n    for (var i = 0; i < targetSelectorOrElement.length; i++) {\n      on(targetSelectorOrElement[i], task);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') targetSelectorOrElement.addEventListener(event, task);else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction once(targetSelectorOrElement, event, task) {\n  var manualDestroy = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n  if (!event) {\n    _loglevel2.default.error('Cannot call on() with no event: ', event);\n  }\n  if (!task) {\n    _loglevel2.default.error('Cannot call on() with no task: ', task);\n  }\n  if (typeof targetSelectorOrElement === 'string') {\n    var els = document.querySelectorAll(selector);\n    if (els.length > 0) {\n      for (var i = 0; i < els.length; i++) {\n        once(els[i], task);\n      }\n    }\n  } else if (isArray(targetSelectorOrElement)) {\n    for (var i = 0; i < targetSelectorOrElement.length; i++) {\n      once(targetSelectorOrElement[i], task);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') {\n    var taskWrapper = (function () {\n      var internalTaskFunction = function internalTaskFunction(e) {\n        var destroyEventListener = function destroyEventListener() {\n          targetSelectorOrElement.removeEventListener(e.type, taskWrapper);\n        };\n        if (!manualDestroy) {\n          destroyEventListener();\n        }\n        task(e, destroyEventListener);\n      };\n      return internalTaskFunction;\n    })();\n    targetSelectorOrElement.addEventListener(event, taskWrapper);\n  } else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\n/**\n * Removes event handler from selector.\n * @param targetSelectorOrElement Selector to target one or multiple elements, or a single or array of DOMElement.\n * @param event The event to target (e.g. 'transitionend')\n * @param task A single function callback to unbind, or leave empty to remove all event handlers.\n */\nfunction off(targetSelectorOrElement, event, task) {\n  if (typeof targetSelectorOrElement === 'string') {\n    var els = document.querySelectorAll(selector);\n    if (els.length > 0) {\n      for (var i = 0; i < els.length; i++) {\n        off(els[i], task);\n      }\n    }\n  } else if (isArray(targetSelectorOrElement)) {\n    for (var i = 0; i < targetSelectorOrElement.length; i++) {\n      off(targetSelectorOrElement[i], task);\n    }\n  } else if ((typeof targetSelectorOrElement === 'undefined' ? 'undefined' : _typeof(targetSelectorOrElement)) === 'object') {\n    if (task) targetSelectorOrElement.removeEventListener(event, task);else targetSelectorOrElement.removeEventListener(event);\n  } else throw new Error(targetSelectorOrElement + ' must be a CSS selector string or DOM Element object.');\n}\n\nfunction getConsoleStyle(style) {\n  if (style == 'code') {\n    return '\\n    padding: 0 5px 2px;\\n    border: 1px solid #ddd;\\n    -webkit-border-radius: 3px;\\n    -moz-border-radius: 3px;\\n    border-radius: 3px;\\n    background-clip: padding-box;\\n    font-family: Monaco,\"DejaVu Sans Mono\",\"Courier New\",monospace;\\n    color: #666;\\n    ';\n  } else if (style == 'bold') {\n    return '\\n      font-weight: 600;\\n    color: rgb(51, 51, 51);\\n    ';\n  } else if (style == 'alert') {\n    return '\\n      font-weight: 600;\\n    color: red;\\n    ';\n  } else if (style == 'event') {\n    return '\\n    color: green;\\n    ';\n  } else if (style == 'postmessage') {\n    return '\\n    color: orange;\\n    ';\n  }\n}\n\n/**\n * Returns a promise for the setTimeout() method.\n * @param durationMs\n * @returns {Promise} Returns a promise that resolves when the timeout is complete.\n */\nfunction delay(durationMs) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, durationMs);\n  });\n}\n\nfunction nothing() {\n  return Promise.resolve();\n}\n\nfunction when(condition, promiseIfTrue, promiseIfFalse) {\n  if (promiseIfTrue === undefined) promiseIfTrue = nothing();\n  if (promiseIfFalse === undefined) promiseIfFalse = nothing();\n  return condition ? promiseIfTrue : promiseIfFalse;\n}//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n* loglevel - https://github.com/pimterry/loglevel\r\n*\r\n* Copyright (c) 2013 Tim Perry\r\n* Licensed under the MIT license.\r\n*/\r\n(function (root, definition) {\r\n    "use strict";\r\n    if (typeof module === \'object\' && module.exports && "function" === \'function\') {\r\n        module.exports = definition();\r\n    } else if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else {\r\n        root.log = definition();\r\n    }\r\n}(this, function () {\r\n    "use strict";\r\n    var noop = function() {};\r\n    var undefinedType = "undefined";\r\n\r\n    function realMethod(methodName) {\r\n        if (typeof console === undefinedType) {\r\n            return false; // We can\'t build a real method without a console to log to\r\n        } else if (console[methodName] !== undefined) {\r\n            return bindMethod(console, methodName);\r\n        } else if (console.log !== undefined) {\r\n            return bindMethod(console, \'log\');\r\n        } else {\r\n            return noop;\r\n        }\r\n    }\r\n\r\n    function bindMethod(obj, methodName) {\r\n        var method = obj[methodName];\r\n        if (typeof method.bind === \'function\') {\r\n            return method.bind(obj);\r\n        } else {\r\n            try {\r\n                return Function.prototype.bind.call(method, obj);\r\n            } catch (e) {\r\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\r\n                return function() {\r\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    // these private functions always need `this` to be set properly\r\n\r\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\r\n        return function () {\r\n            if (typeof console !== undefinedType) {\r\n                replaceLoggingMethods.call(this, level, loggerName);\r\n                this[methodName].apply(this, arguments);\r\n            }\r\n        };\r\n    }\r\n\r\n    function replaceLoggingMethods(level, loggerName) {\r\n        /*jshint validthis:true */\r\n        for (var i = 0; i < logMethods.length; i++) {\r\n            var methodName = logMethods[i];\r\n            this[methodName] = (i < level) ?\r\n                noop :\r\n                this.methodFactory(methodName, level, loggerName);\r\n        }\r\n    }\r\n\r\n    function defaultMethodFactory(methodName, level, loggerName) {\r\n        /*jshint validthis:true */\r\n        return realMethod(methodName) ||\r\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\r\n    }\r\n\r\n    var logMethods = [\r\n        "trace",\r\n        "debug",\r\n        "info",\r\n        "warn",\r\n        "error"\r\n    ];\r\n\r\n    function Logger(name, defaultLevel, factory) {\r\n      var self = this;\r\n      var currentLevel;\r\n      var storageKey = "loglevel";\r\n      if (name) {\r\n        storageKey += ":" + name;\r\n      }\r\n\r\n      function persistLevelIfPossible(levelNum) {\r\n          var levelName = (logMethods[levelNum] || \'silent\').toUpperCase();\r\n\r\n          // Use localStorage if available\r\n          try {\r\n              window.localStorage[storageKey] = levelName;\r\n              return;\r\n          } catch (ignore) {}\r\n\r\n          // Use session cookie as fallback\r\n          try {\r\n              window.document.cookie =\r\n                encodeURIComponent(storageKey) + "=" + levelName + ";";\r\n          } catch (ignore) {}\r\n      }\r\n\r\n      function getPersistedLevel() {\r\n          var storedLevel;\r\n\r\n          try {\r\n              storedLevel = window.localStorage[storageKey];\r\n          } catch (ignore) {}\r\n\r\n          if (typeof storedLevel === undefinedType) {\r\n              try {\r\n                  var cookie = window.document.cookie;\r\n                  var location = cookie.indexOf(\r\n                      encodeURIComponent(storageKey) + "=");\r\n                  if (location) {\r\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\r\n                  }\r\n              } catch (ignore) {}\r\n          }\r\n\r\n          // If the stored level is not valid, treat it as if nothing was stored.\r\n          if (self.levels[storedLevel] === undefined) {\r\n              storedLevel = undefined;\r\n          }\r\n\r\n          return storedLevel;\r\n      }\r\n\r\n      /*\r\n       *\r\n       * Public API\r\n       *\r\n       */\r\n\r\n      self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,\r\n          "ERROR": 4, "SILENT": 5};\r\n\r\n      self.methodFactory = factory || defaultMethodFactory;\r\n\r\n      self.getLevel = function () {\r\n          return currentLevel;\r\n      };\r\n\r\n      self.setLevel = function (level, persist) {\r\n          if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {\r\n              level = self.levels[level.toUpperCase()];\r\n          }\r\n          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {\r\n              currentLevel = level;\r\n              if (persist !== false) {  // defaults to true\r\n                  persistLevelIfPossible(level);\r\n              }\r\n              replaceLoggingMethods.call(self, level, name);\r\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\r\n                  return "No console available for logging";\r\n              }\r\n          } else {\r\n              throw "log.setLevel() called with invalid level: " + level;\r\n          }\r\n      };\r\n\r\n      self.setDefaultLevel = function (level) {\r\n          if (!getPersistedLevel()) {\r\n              self.setLevel(level, false);\r\n          }\r\n      };\r\n\r\n      self.enableAll = function(persist) {\r\n          self.setLevel(self.levels.TRACE, persist);\r\n      };\r\n\r\n      self.disableAll = function(persist) {\r\n          self.setLevel(self.levels.SILENT, persist);\r\n      };\r\n\r\n      // Initialize with the right level\r\n      var initialLevel = getPersistedLevel();\r\n      if (initialLevel == null) {\r\n          initialLevel = defaultLevel == null ? "WARN" : defaultLevel;\r\n      }\r\n      self.setLevel(initialLevel, false);\r\n    }\r\n\r\n    /*\r\n     *\r\n     * Package-level API\r\n     *\r\n     */\r\n\r\n    var defaultLogger = new Logger();\r\n\r\n    var _loggersByName = {};\r\n    defaultLogger.getLogger = function getLogger(name) {\r\n        if (typeof name !== "string" || name === "") {\r\n          throw new TypeError("You must supply a name when creating a logger.");\r\n        }\r\n\r\n        var logger = _loggersByName[name];\r\n        if (!logger) {\r\n          logger = _loggersByName[name] = new Logger(\r\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\r\n        }\r\n        return logger;\r\n    };\r\n\r\n    // Grab the current global log variable in case of overwrite\r\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\r\n    defaultLogger.noConflict = function() {\r\n        if (typeof window !== undefinedType &&\r\n               window.log === defaultLogger) {\r\n            window.log = _log;\r\n        }\r\n\r\n        return defaultLogger;\r\n    };\r\n\r\n    return defaultLogger;\r\n}));\r\n//@ sourceMappingURL=data:application/json;base64,')},function(module,exports){eval('"use strict";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Environment = (function () {\n  function Environment() {\n    _classCallCheck(this, Environment);\n  }\n\n  _createClass(Environment, null, [{\n    key: "getEnv",\n    value: function getEnv() {\n      if (typeof window === "undefined") {\n        if (typeof WorkerLocation !== "undefined" && location instanceof WorkerLocation) return Environment.SERVICE_WORKER;\n      } else {\n        // If the window is the root top-most level\n        if (window.self === window.top) {\n          if (location.href.indexOf("initOneSignal") > -1) return Environment.POPUP;else return Environment.HOST;\n        } else return Environment.IFRAME;\n      }\n    }\n  }, {\n    key: "isServiceWorker",\n    value: function isServiceWorker() {\n      return Environment.getEnv() === Environment.SERVICE_WORKER;\n    }\n  }, {\n    key: "isHost",\n    value: function isHost() {\n      return Environment.getEnv() === Environment.HOST;\n    }\n  }, {\n    key: "isPopup",\n    value: function isPopup() {\n      return Environment.getEnv() === Environment.POPUP;\n    }\n  }, {\n    key: "isIframe",\n    value: function isIframe() {\n      return Environment.getEnv() === Environment.IFRAME;\n    }\n  }, {\n    key: "isBrowser",\n    value: function isBrowser() {\n      return typeof window !== \'undefined\';\n    }\n  }, {\n    key: "SERVICE_WORKER",\n    get: function get() {\n      return \'ServiceWorker\';\n    }\n  }, {\n    key: "HOST",\n    get: function get() {\n      return "host";\n    }\n  }, {\n    key: "POPUP",\n    get: function get() {\n      return "popup";\n    }\n  }, {\n    key: "IFRAME",\n    get: function get() {\n      return "iFrame";\n    }\n  }]);\n\n  return Environment;\n})();\n\nexports.default = Environment;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZW52aXJvbm1lbnQuanM/MDA0YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQXFCLFdBQVc7V0FBWCxXQUFXOzBCQUFYLFdBQVc7OztlQUFYLFdBQVc7OzZCQWlCZDtBQUNkLFVBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxFQUFFO0FBQ2pDLFlBQUksT0FBTyxjQUFjLEtBQUssV0FBVyxJQUFJLFFBQVEsWUFBWSxjQUFjLEVBQzdFLE9BQU8sV0FBVyxDQUFDLGNBQWMsQ0FBQztPQUNyQyxNQUNJOztBQUVILFlBQUksTUFBTSxDQUFDLElBQUksS0FBSyxNQUFNLENBQUMsR0FBRyxFQUFFO0FBQzlCLGNBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQzdDLE9BQU8sV0FBVyxDQUFDLEtBQUssQ0FBQyxLQUV6QixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUM7U0FDM0IsTUFFQyxPQUFPLFdBQVcsQ0FBQyxNQUFNLENBQUM7T0FDN0I7S0FDRjs7O3NDQUV3QjtBQUN2QixhQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxXQUFXLENBQUMsY0FBYyxDQUFDO0tBQzVEOzs7NkJBRWU7QUFDZCxhQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxXQUFXLENBQUMsSUFBSSxDQUFDO0tBQ2xEOzs7OEJBRWdCO0FBQ2YsYUFBTyxXQUFXLENBQUMsTUFBTSxFQUFFLEtBQUssV0FBVyxDQUFDLEtBQUssQ0FBQztLQUNuRDs7OytCQUVpQjtBQUNoQixhQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxXQUFXLENBQUMsTUFBTSxDQUFDO0tBQ3BEOzs7Z0NBRWtCO0FBQ2pCLGFBQU8sT0FBTyxNQUFNLEtBQUssV0FBVyxDQUFDO0tBQ3RDOzs7d0JBcEQyQjtBQUMxQixhQUFPLGVBQWUsQ0FBQztLQUN4Qjs7O3dCQUVpQjtBQUNoQixhQUFPLE1BQU0sQ0FBQztLQUNmOzs7d0JBRWtCO0FBQ2pCLGFBQU8sT0FBTyxDQUFDO0tBQ2hCOzs7d0JBRW1CO0FBQ2xCLGFBQU8sUUFBUSxDQUFDO0tBQ2pCOzs7U0Fma0IsV0FBVzs7O2tCQUFYLFdBQVciLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEVudmlyb25tZW50IHtcbiAgc3RhdGljIGdldCBTRVJWSUNFX1dPUktFUigpIHtcbiAgICByZXR1cm4gJ1NlcnZpY2VXb3JrZXInO1xuICB9XG5cbiAgc3RhdGljIGdldCBIT1NUKCkge1xuICAgIHJldHVybiBcImhvc3RcIjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgUE9QVVAoKSB7XG4gICAgcmV0dXJuIFwicG9wdXBcIjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgSUZSQU1FKCkge1xuICAgIHJldHVybiBcImlGcmFtZVwiO1xuICB9XG5cbiAgc3RhdGljIGdldEVudigpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgaWYgKHR5cGVvZiBXb3JrZXJMb2NhdGlvbiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBsb2NhdGlvbiBpbnN0YW5jZW9mIFdvcmtlckxvY2F0aW9uKVxuICAgICAgICByZXR1cm4gRW52aXJvbm1lbnQuU0VSVklDRV9XT1JLRVI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgLy8gSWYgdGhlIHdpbmRvdyBpcyB0aGUgcm9vdCB0b3AtbW9zdCBsZXZlbFxuICAgICAgaWYgKHdpbmRvdy5zZWxmID09PSB3aW5kb3cudG9wKSB7XG4gICAgICAgIGlmIChsb2NhdGlvbi5ocmVmLmluZGV4T2YoXCJpbml0T25lU2lnbmFsXCIpID4gLTEpXG4gICAgICAgICAgcmV0dXJuIEVudmlyb25tZW50LlBPUFVQO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgcmV0dXJuIEVudmlyb25tZW50LkhPU1Q7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICAgIHJldHVybiBFbnZpcm9ubWVudC5JRlJBTUU7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGlzU2VydmljZVdvcmtlcigpIHtcbiAgICByZXR1cm4gRW52aXJvbm1lbnQuZ2V0RW52KCkgPT09IEVudmlyb25tZW50LlNFUlZJQ0VfV09SS0VSO1xuICB9XG5cbiAgc3RhdGljIGlzSG9zdCgpIHtcbiAgICByZXR1cm4gRW52aXJvbm1lbnQuZ2V0RW52KCkgPT09IEVudmlyb25tZW50LkhPU1Q7XG4gIH1cblxuICBzdGF0aWMgaXNQb3B1cCgpIHtcbiAgICByZXR1cm4gRW52aXJvbm1lbnQuZ2V0RW52KCkgPT09IEVudmlyb25tZW50LlBPUFVQO1xuICB9XG5cbiAgc3RhdGljIGlzSWZyYW1lKCkge1xuICAgIHJldHVybiBFbnZpcm9ubWVudC5nZXRFbnYoKSA9PT0gRW52aXJvbm1lbnQuSUZSQU1FO1xuICB9XG5cbiAgc3RhdGljIGlzQnJvd3NlcigpIHtcbiAgICByZXR1cm4gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG4gIH1cbn1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9lbnZpcm9ubWVudC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["OneSignal"] = __webpack_require__(6);\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2RrLmpzP2RmYjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMEdBQStLLEUiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsW1wiT25lU2lnbmFsXCJdID0gcmVxdWlyZShcIi0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvaW5kZXguanM/e1xcXCJwcmVzZXRzXFxcIjpbXFxcImVzMjAxNVxcXCJdLFxcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZX0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL3NyYy9zZGsuanNcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vZXhwb3NlLWxvYWRlcj9PbmVTaWduYWwhLi9zcmMvc2RrLmpzXG4gKiogbW9kdWxlIGlkID0gNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nvar _vars = __webpack_require__(1);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\n__webpack_require__(8);\n\nvar _api = __webpack_require__(9);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\n__webpack_require__(11);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _bell = __webpack_require__(13);\n\nvar _bell2 = _interopRequireDefault(_bell);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OneSignal = {\n  _VERSION: (\"109020\"),\n  _API_URL: _vars.API_URL,\n  _app_id: null,\n  _tagsToSendOnRegister: null,\n  _notificationOpened_callback: null,\n  _idsAvailable_callback: [],\n  _defaultLaunchURL: null,\n  _initOptions: null,\n  _httpRegistration: false,\n  _main_page_port: null,\n  _isNotificationEnabledCallback: [],\n  _subscriptionSet: true,\n  _initOneSignalHttp: null,\n  _sessionIframeAdded: false,\n  _useHttpMode: null,\n  _windowWidth: 550,\n  _windowHeight: 480,\n  _isUninitiatedVisitor: false,\n  _isNewVisitor: false,\n  _isInitialized: false,\n  bell: null,\n  store: _limitStore2.default,\n  environment: _environment2.default,\n  event: _events2.default,\n  LOGGING: (true),\n  log: _loglevel2.default,\n  SERVICE_WORKER_UPDATER_PATH: \"OneSignalSDKUpdaterWorker.js\",\n  SERVICE_WORKER_PATH: \"OneSignalSDKWorker.js\",\n  SERVICE_WORKER_PARAM: {},\n\n  /* Event Definitions */\n  EVENTS: {\n    CUSTOM_PROMPT_CLICKED: 'onesignal.prompt.custom.clicked',\n    NATIVE_PROMPT_PERMISSIONCHANGED: 'onesignal.prompt.native.permissionchanged',\n    SUBSCRIPTION_CHANGED: 'onesignal.subscription.changed',\n    WELCOME_NOTIFICATION_SENT: 'onesignal.actions.welcomenotificationsent',\n    DB_VALUE_RETRIEVED: 'onesignal.db.valueretrieved',\n    DB_VALUE_SET: 'onesignal.db.valueset',\n    INTERNAL_SUBSCRIPTIONSET: 'onesignal.internal.subscriptionset',\n    SDK_INITIALIZED: 'onesignal.sdk.initialized'\n  },\n\n  _ensureDbInstance: function _ensureDbInstance() {\n    return new Promise(function (resolve, reject) {\n      if (OneSignal._oneSignal_db) {\n        resolve(OneSignal._oneSignal_db);\n      } else {\n        var request = indexedDB.open(\"ONE_SIGNAL_SDK_DB\", 1);\n        request.onsuccess = function (event) {\n          var database = event.target.result;\n          OneSignal._oneSignal_db = database;\n          resolve(database);\n        };\n        request.onerror = function (event) {\n          _loglevel2.default.error('Unable to open IndexedDB.', event);\n          reject(event);\n        };\n\n        request.onupgradeneeded = function (event) {\n          _loglevel2.default.info('The OneSignal SDK is rebuilding its IndexedDB schema from a clean slate.');\n          OneSignal._isNewVisitor = true;\n          var db = event.target.result;\n          db.createObjectStore(\"Ids\", { keyPath: \"type\" });\n          db.createObjectStore(\"NotificationOpened\", { keyPath: \"url\" });\n          db.createObjectStore(\"Options\", { keyPath: \"key\" });\n        };\n      }\n    });\n  },\n\n  _getDbValue: function _getDbValue(table, key) {\n    return new Promise(function (resolve, reject) {\n      OneSignal._ensureDbInstance().then(function (database) {\n        var request = database.transaction(table).objectStore(table).get(key);\n        request.onsuccess = function (event) {\n          if (request.result) OneSignal._triggerEvent_dbValueRetrieved(request.result);\n          resolve(request.result);\n        };\n        request.onerror = function (event) {\n          reject(request.errorCode);\n        };\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n      ;\n    });\n  },\n\n  _getDbValues: function _getDbValues(table) {\n    return new Promise(function (resolve, reject) {\n      OneSignal._ensureDbInstance().then(function (database) {\n        var jsonResult = {};\n        var cursor = database.transaction(table).objectStore(table).openCursor();\n        cursor.onsuccess = function (event) {\n          var cursor = event.target.result;\n          if (cursor) {\n            OneSignal._triggerEvent_dbValueRetrieved(cursor);\n            jsonResult[cursor.key] = cursor.value.value;\n            cursor.continue();\n          } else resolve(jsonResult);\n        };\n        cursor.onerror = function (event) {\n          reject(cursor.errorCode);\n        };\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    });\n  },\n\n  _putDbValue: function _putDbValue(table, value) {\n    return new Promise(function (resolve, reject) {\n      OneSignal._ensureDbInstance().then(function (database) {\n        database.transaction([table], \"readwrite\").objectStore(table).put(value);\n        OneSignal._triggerEvent_dbValueSet(value);\n        resolve(value);\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    });\n  },\n\n  _deleteDbValue: function _deleteDbValue(table, key) {\n    return new Promise(function (resolve, reject) {\n      OneSignal._ensureDbInstance().then(function (database) {\n        database.transaction([table], \"readwrite\").objectStore(table).delete(key);\n        resolve(key);\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n      ;\n    });\n  },\n\n  _sendToOneSignalApi: function _sendToOneSignalApi(url, action, inData, callback, failedCallback) {\n    _loglevel2.default.debug('Calling ' + action + ' ' + (OneSignal._API_URL + url) + ' with data:', inData);\n    var contents = {\n      method: action\n    };\n\n    //mode: 'no-cors', // no-cors is disabled for non-serviceworker.\n    if (inData) {\n      contents.headers = { \"Content-type\": \"application/json;charset=UTF-8\" };\n      contents.body = JSON.stringify(inData);\n    }\n\n    fetch(OneSignal._API_URL + url, contents).then(function status(response) {\n      if (response.status >= 200 && response.status < 300) return Promise.resolve(response);else return Promise.reject(new Error(response.statusText));\n    }).then(function status(response) {\n      return response.json();\n    }).then(function (jsonData) {\n      if (callback != null) callback(jsonData);\n    }).catch(function (e) {\n      _loglevel2.default.error('OneSignal._sendToOneSignalApi() failed:', e);\n      if (failedCallback != null) failedCallback();\n    });\n  },\n\n  _getLanguage: function _getLanguage() {\n    return navigator.language ? navigator.language.length > 3 ? navigator.language.substring(0, 2) : navigator.language : 'en';\n  },\n\n  _getPlayerId: function _getPlayerId(value, callback) {\n    if (value) callback(value);else {\n      OneSignal._getDbValue('Ids', 'userId').then(function _getPlayerId_gotUserId(result) {\n        if (result) callback(result.id);else callback(null);\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n      ;\n    }\n  },\n\n  _getBrowserName: function _getBrowserName() {\n    if (navigator.appVersion.match(/Chrome\\/(.*?) /)) return \"Chrome\";\n    if (navigator.appVersion.match(\"Version/(.*) (Safari)\")) return \"Safari\";\n    if (navigator.userAgent.match(/Firefox\\/([0-9]{2,}\\.[0-9]{1,})/)) return \"Firefox\";\n\n    return \"\";\n  },\n\n  _registerWithOneSignal: function _registerWithOneSignal(appId, registrationId, deviceType) {\n\n    OneSignal._getDbValue('Ids', 'userId').then(function _registerWithOneSignal_GotUserId(userIdResult) {\n      OneSignal._getNotificationTypes(function (notif_types) {\n        var requestUrl = 'players';\n\n        var jsonData = {\n          app_id: appId,\n          device_type: deviceType,\n          language: OneSignal._getLanguage(),\n          timezone: new Date().getTimezoneOffset() * -60,\n          device_model: navigator.platform + \" \" + OneSignal._getBrowserName(),\n          device_os: (navigator.appVersion.match(/Chrome\\/(.*?) /) || navigator.appVersion.match(\"Version/(.*) Safari\") || navigator.userAgent.match(/Firefox\\/([0-9]{2,}\\.[0-9]{1,})/))[1],\n          sdk: OneSignal._VERSION\n        };\n\n        if (userIdResult) {\n          requestUrl = 'players/' + userIdResult.id + '/on_session';\n          jsonData.notification_types = notif_types;\n        } else if (notif_types != 1) jsonData.notification_types = notif_types;\n\n        if (registrationId) {\n          jsonData.identifier = registrationId;\n          OneSignal._putDbValue(\"Ids\", { type: \"registrationId\", id: registrationId });\n        }\n\n        OneSignal._sendToOneSignalApi(requestUrl, 'POST', jsonData, function registeredCallback(responseJSON) {\n          sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n\n          if (responseJSON.id) {\n            OneSignal._putDbValue(\"Ids\", { type: \"userId\", id: responseJSON.id });\n            OneSignal._sendUnsentTags();\n          }\n\n          OneSignal._getPlayerId(responseJSON.id, function (userId) {\n            if (OneSignal._idsAvailable_callback.length > 0) {\n              while (OneSignal._idsAvailable_callback.length > 0) {\n                var curr_callback = OneSignal._idsAvailable_callback.pop();\n                curr_callback({ userId: userId, registrationId: registrationId });\n              }\n            }\n\n            if (OneSignal._httpRegistration) {\n              // 12/16/2015 -- At this point, the user has just clicked Allow on the HTTP prompt!!\n              _loglevel2.default.debug(\"Sending player Id and registrationId back to host page\");\n              _loglevel2.default.debug(OneSignal._initOptions);\n              var creator = opener || parent;\n              OneSignal._safePostMessage(creator, {\n                idsAvailable: {\n                  userId: userId,\n                  registrationId: registrationId\n                },\n                from: _environment2.default.getEnv()\n              }, OneSignal._initOptions.origin, null);\n              OneSignal._safePostMessage(creator, {\n                httpNativePromptPermissionChanged: OneSignal._getNotificationPermission(),\n                from: _environment2.default.getEnv()\n              }, OneSignal._initOptions.origin, null);\n\n              if (opener) window.close();\n            }\n          });\n        });\n      });\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  _sendUnsentTags: function _sendUnsentTags() {\n    if (OneSignal._tagsToSendOnRegister) {\n      OneSignal.sendTags(OneSignal._tagsToSendOnRegister);\n      OneSignal._tagsToSendOnRegister = null;\n    }\n  },\n\n  setDefaultNotificationUrl: function setDefaultNotificationUrl(url) {\n    OneSignal._putDbValue(\"Options\", { key: \"defaultUrl\", value: url });\n  },\n\n  setDefaultIcon: function setDefaultIcon(icon) {\n    OneSignal._putDbValue(\"Options\", { key: \"defaultIcon\", value: icon });\n  },\n\n  setDefaultTitle: function setDefaultTitle(title) {\n    OneSignal._putDbValue(\"Options\", { key: \"defaultTitle\", value: title });\n  },\n\n  _visibilitychange: function _visibilitychange() {\n    if (document.visibilityState == \"visible\") {\n      document.removeEventListener(\"visibilitychange\", OneSignal._visibilitychange);\n      OneSignal._sessionInit({});\n    }\n  },\n\n  onCustomPromptClicked: function onCustomPromptClicked(event) {\n    OneSignal._checkTrigger_eventSubscriptionChanged();\n  },\n\n  onNativePromptChanged: function onNativePromptChanged(event) {\n    OneSignal._checkTrigger_eventSubscriptionChanged();\n  },\n\n  _onSubscriptionChanged: function _onSubscriptionChanged(event) {\n    if (OneSignal._isUninitiatedVisitor && event.detail === true) {\n      OneSignal._getDbValue('Ids', 'userId').then(function (result) {\n        var welcome_notification_opts = OneSignal._initOptions['welcomeNotification'];\n        var welcome_notification_disabled = welcome_notification_opts !== undefined && welcome_notification_opts['disable'] === true;\n        var title = welcome_notification_opts !== undefined && welcome_notification_opts['title'] !== undefined && welcome_notification_opts['title'] !== null ? welcome_notification_opts['title'] : '';\n        var message = welcome_notification_opts !== undefined && welcome_notification_opts['message'] !== undefined && welcome_notification_opts['message'] !== null && welcome_notification_opts['message'].length > 0 ? welcome_notification_opts['message'] : 'Thanks for subscribing!';\n        if (!welcome_notification_disabled) {\n          _loglevel2.default.debug('Because this user is a new site visitor, a welcome notification will be sent.');\n          (0, _api.sendNotification)(OneSignal._app_id, [result.id], { 'en': title }, { 'en': message });\n          _events2.default.trigger(OneSignal.EVENTS.WELCOME_NOTIFICATION_SENT, { title: title, message: message });\n          OneSignal._isUninitiatedVisitor = false;\n        }\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    }\n    _limitStore2.default.put('subscription.value', event.detail);\n  },\n\n  _onDbValueRetrieved: function _onDbValueRetrieved(event) {},\n\n  _onDbValueSet: function _onDbValueSet(event) {\n    var info = event.detail;\n    if (info.type === 'userId') {\n      _limitStore2.default.put('db.ids.userId', info.id);\n      OneSignal._checkTrigger_eventSubscriptionChanged();\n    }\n  },\n\n  _onInternalSubscriptionSet: function _onInternalSubscriptionSet(event) {\n    var newSubscriptionValue = event.detail;\n    _limitStore2.default.put('setsubscription.value', newSubscriptionValue);\n    OneSignal._checkTrigger_eventSubscriptionChanged();\n  },\n\n  _onSdkInitialized: function _onSdkInitialized() {\n    if (_environment2.default.isBrowser() && !OneSignal.bell) {\n      _loglevel2.default.info('Showing bell.');\n      OneSignal.bell = new _bell2.default({\n        size: 'large',\n        position: 'bottom-right',\n        theme: 'default'\n      });\n      OneSignal.bell.create();\n    }\n\n    OneSignal._isInitialized = true;\n    _loglevel2.default.trace('OneSignal SDK has been fully initialized.');\n  },\n\n  _checkTrigger_nativePermissionChanged: function _checkTrigger_nativePermissionChanged() {\n    var currentPermission = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);\n    var lastPermission = _limitStore2.default.getLast('notification.permission');\n    if (lastPermission !== currentPermission) {\n      OneSignal._triggerEvent_nativePromptPermissionChanged(lastPermission, currentPermission);\n    }\n  },\n\n  _checkTrigger_eventSubscriptionChanged: function _checkTrigger_eventSubscriptionChanged() {\n    _loglevel2.default.debug('Called %c_checkTrigger_eventSubscriptionChanged()', (0, _utils.getConsoleStyle)('code'));\n    var permissions = _limitStore2.default.get('notification.permission');\n    var lastPermission = permissions[permissions.length - 2];\n    var currentPermission = permissions[permissions.length - 1];\n    _loglevel2.default.debug('%c_checkTrigger_eventSubscriptionChanged():', (0, _utils.getConsoleStyle)('code'), 'Permissions:', { lastPermission: lastPermission, currentPermission: currentPermission });\n\n    var ids = _limitStore2.default.get('db.ids.userId');\n    var lastId = ids[ids.length - 2];\n    var currentId = ids[ids.length - 1];\n    _loglevel2.default.debug('%c_checkTrigger_eventSubscriptionChanged():', (0, _utils.getConsoleStyle)('code'), 'Ids:', { lastId: lastId, currentId: currentId });\n\n    var subscriptionStates = _limitStore2.default.get('setsubscription.value');\n    var lastSubscriptionState = subscriptionStates[subscriptionStates.length - 2];\n    var currentSubscriptionState = subscriptionStates[subscriptionStates.length - 1];\n    _loglevel2.default.debug('%c_checkTrigger_eventSubscriptionChanged():', (0, _utils.getConsoleStyle)('code'), 'Subscriptions:', { lastSubscriptionState: lastSubscriptionState, currentSubscriptionState: currentSubscriptionState });\n\n    var newSubscriptionState = 'unchanged';\n\n    if ((lastPermission === 'default' || lastPermission === 'denied' || lastPermission === null) && currentPermission === 'granted' && currentId !== null && currentSubscriptionState === true || lastSubscriptionState === false && currentSubscriptionState === true && currentId != null && currentPermission === 'granted') {\n      newSubscriptionState = true;\n    }\n\n    if (lastPermission !== 'denied' && currentPermission === 'denied' || lastPermission === 'granted' && currentPermission !== 'granted' || lastId !== null && currentId === null || lastSubscriptionState !== false && currentSubscriptionState === false) {\n      newSubscriptionState = false;\n    }\n\n    if (newSubscriptionState !== \"unchanged\") {\n      var lastTriggerTimes = _limitStore2.default.put('event.subscriptionchanged.lastriggered', Date.now());\n      var currentTime = lastTriggerTimes[lastTriggerTimes.length - 1];\n      var lastTriggerTime = lastTriggerTimes[lastTriggerTimes.length - 2];\n      var elapsedTimeSeconds = (currentTime - lastTriggerTime) / 1000;\n\n      var lastEventStates = _limitStore2.default.put('event.subscriptionchanged.laststates', newSubscriptionState);\n      var currentState = lastEventStates[lastEventStates.length - 1];\n      var lastState = lastEventStates[lastEventStates.length - 2];\n\n      // If event already triggered within the last second, don't re-trigger.\n      var shouldNotTriggerEvent = lastTriggerTime != null && elapsedTimeSeconds <= 1 || currentState === lastState;\n      if (shouldNotTriggerEvent === false) {\n        OneSignal._triggerEvent_subscriptionChanged(newSubscriptionState);\n      }\n    }\n  },\n\n  isPushNotificationsSupported: function isPushNotificationsSupported() {\n    return (0, _utils.isPushNotificationsSupported)();\n  },\n\n  _installNativePromptPermissionChangedHook: function _installNativePromptPermissionChangedHook() {\n    if (navigator.permissions && !((0, _utils.isBrowserFirefox)() && (0, _utils.getFirefoxVersion)() <= 45)) {\n      OneSignal._usingNativePermissionHook = true;\n      // If the browser natively supports hooking the subscription prompt permission change event\n      //     use it instead of our SDK method\n      navigator.permissions.query({ name: 'notifications' }).then(function (permissionStatus) {\n        permissionStatus.onchange = function () {\n          var permissionBeforePrompt = _limitStore2.default.getFirst('notification.permission');\n          OneSignal._triggerEvent_nativePromptPermissionChanged(permissionBeforePrompt);\n\n          // If we are not the main page, send this event back to main page\n          if (!_environment2.default.isHost()) {\n            var creator = opener || parent;\n            OneSignal._safePostMessage(creator, {\n              httpNativePromptPermissionChanged: OneSignal._getNotificationPermission(),\n              from: _environment2.default.getEnv()\n            }, OneSignal._initOptions.origin, null);\n          }\n        };\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    }\n  },\n\n  init: function init(options) {\n    if (_environment2.default.isBrowser() && window.localStorage[\"onesignal.debugger.init\"]) {\n      debugger;\n    }\n\n    _loglevel2.default.debug('Called %cinit(' + JSON.stringify(options, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n\n    if (OneSignal._isInitialized) {\n      _loglevel2.default.warn('OneSignal.init() was called again, but the SDK is already initialized. Skipping initialization.');\n      return;\n    }\n    OneSignal._initOptions = options;\n    OneSignal._app_id = OneSignal._initOptions.appId;\n\n    if (!(0, _utils.isPushNotificationsSupported)()) {\n      _loglevel2.default.warn(\"Your browser does not support push notifications.\");\n      return;\n    }\n\n    var currentNotificationPermission = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);\n    _limitStore2.default.put('notification.permission', currentNotificationPermission);\n\n    OneSignal._installNativePromptPermissionChangedHook();\n\n    // Store the current value of Ids:registrationId, so that we can see if the value changes in the future\n    OneSignal._getDbValue('Ids', 'userId').then(function (result) {\n      if (result === undefined) {\n        OneSignal._isUninitiatedVisitor = true;\n      }\n      var storeValue = result ? result.id : null;\n      _limitStore2.default.put('db.ids.userId', storeValue);\n    });\n\n    // Store the current value of subscription, so that we can see if the value changes in the future\n    OneSignal._getSubscription(function (currentSubscription) {\n      _limitStore2.default.put('setsubscription.value', currentSubscription);\n    });\n\n    window.addEventListener(OneSignal.EVENTS.CUSTOM_PROMPT_CLICKED, OneSignal.onCustomPromptClicked);\n    window.addEventListener(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, OneSignal.onNativePromptChanged);\n    window.addEventListener(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, OneSignal._onSubscriptionChanged);\n    window.addEventListener(OneSignal.EVENTS.DB_VALUE_RETRIEVED, OneSignal._onDbValueRetrieved);\n    window.addEventListener(OneSignal.EVENTS.DB_VALUE_SET, OneSignal._onDbValueSet);\n    window.addEventListener(OneSignal.EVENTS.INTERNAL_SUBSCRIPTIONSET, OneSignal._onInternalSubscriptionSet);\n    window.addEventListener(OneSignal.EVENTS.SDK_INITIALIZED, OneSignal._onSdkInitialized);\n\n    OneSignal._useHttpMode = !(0, _utils.isSupportedSafari)() && (!OneSignal._supportsDirectPermission() || OneSignal._initOptions.subdomainName);\n\n    if (OneSignal._useHttpMode) OneSignal._initOneSignalHttp = 'https://' + OneSignal._initOptions.subdomainName + '.onesignal.com/sdks/initOneSignalHttp';else OneSignal._initOneSignalHttp = 'https://onesignal.com/sdks/initOneSignalHttps';\n\n    if (true) OneSignal._initOneSignalHttp = _vars.DEV_HOST + '/dev_sdks/initOneSignalHttp';\n\n    // If Safari - add 'fetch' pollyfill if it isn't already added.\n    if ((0, _utils.isSupportedSafari)() && typeof window.fetch == \"undefined\") {\n      var s = document.createElement('script');\n      s.setAttribute('src', \"https://cdnjs.cloudflare.com/ajax/libs/fetch/0.9.0/fetch.js\");\n      document.head.appendChild(s);\n    }\n\n    if (document.readyState === \"complete\") OneSignal._internalInit();else window.addEventListener('load', OneSignal._internalInit);\n  },\n\n  _internalInit: function _internalInit() {\n    _loglevel2.default.debug('Called %c_internalInit()', (0, _utils.getConsoleStyle)('code'));\n    Promise.all([OneSignal._getDbValue('Ids', 'appId'), OneSignal._getDbValue('Ids', 'registrationId'), OneSignal._getDbValue('Options', 'subscription')]).then(function _internalInit_GotAppRegistrationSubscriptionIds(result) {\n      var appIdResult = result[0];\n      var registrationIdResult = result[1];\n      var subscriptionResult = result[2];\n\n      // If AppId changed delete playerId and continue.\n      if (appIdResult && appIdResult.id != OneSignal._initOptions.appId) {\n        OneSignal._deleteDbValue(\"Ids\", \"userId\");\n        sessionStorage.removeItem(\"ONE_SIGNAL_SESSION\");\n      }\n\n      // HTTPS - Only register for push notifications once per session or if the user changes notification permission to Ask or Allow.\n      if (sessionStorage.getItem(\"ONE_SIGNAL_SESSION\") && !OneSignal._initOptions.subdomainName && (Notification.permission == \"denied\" || sessionStorage.getItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\") == Notification.permission)) {\n        _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n        return;\n      }\n\n      sessionStorage.setItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\", Notification.permission);\n\n      if (OneSignal._initOptions.autoRegister == false && !registrationIdResult && !OneSignal._initOptions.subdomainName) {\n        _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n        return;\n      }\n\n      if (document.visibilityState != \"visible\") {\n        document.addEventListener(\"visibilitychange\", OneSignal._visibilitychange);\n        return;\n      }\n\n      OneSignal._sessionInit({});\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n  },\n\n  registerForPushNotifications: function registerForPushNotifications(options) {\n    if (!(0, _utils.isPushNotificationsSupported)()) {\n      _loglevel2.default.warn(\"Your browser does not support push notifications.\");\n      return;\n    }\n    // WARNING: Do NOT add callbacks that have to fire to get from here to window.open in _sessionInit.\n    //          Otherwise the pop-up to ask for push permission on HTTP connections will be blocked by Chrome.\n    if (!options) options = {};\n    options.fromRegisterFor = true;\n    OneSignal._sessionInit(options);\n  },\n\n  // Http only - Only called from iframe's init.js\n  _initHttp: function _initHttp(options) {\n    _loglevel2.default.debug('Called %c _initHttp', (0, _utils.getConsoleStyle)('code'));\n    OneSignal._initOptions = options;\n\n    OneSignal._installNativePromptPermissionChangedHook();\n    if (options.continuePressed) {\n      OneSignal.setSubscription(true);\n    }\n\n    var isIframe = parent != null && parent != window;\n    var creator = opener || parent;\n\n    if (!creator) {\n      _loglevel2.default.error('_initHttp (from <iframe>):', 'No opener or parent found!');\n      return;\n    }\n    // Setting up message channel to receive message from host page.\n    var messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = function (event) {\n      _loglevel2.default.debug('%c' + _environment2.default.getEnv().capitalize() + ' ⬸ ' + event.data.from.capitalize() + ':', (0, _utils.getConsoleStyle)('postmessage'), event.data);\n\n      if (event.data.initOptions) {\n        OneSignal.setDefaultNotificationUrl(event.data.initOptions.defaultUrl);\n        OneSignal.setDefaultTitle(event.data.initOptions.defaultTitle);\n        if (event.data.initOptions.defaultIcon) OneSignal.setDefaultIcon(event.data.initOptions.defaultIcon);\n\n        OneSignal._getDbValue(\"NotificationOpened\", event.data.initOptions.parent_url).then(function registerForPushNotifications_GotNotificationOpened(notificationOpenedResult) {\n          if (notificationOpenedResult) {\n            OneSignal._deleteDbValue(\"NotificationOpened\", event.data.initOptions.parent_url);\n            _loglevel2.default.debug(\"OneSignal._safePostMessage:targetOrigin:\", OneSignal._initOptions.origin);\n\n            OneSignal._safePostMessage(creator, { openedNotification: notificationOpenedResult.data, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, null);\n          }\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n        });\n        ;\n      } else if (event.data.getNotificationPermission) {\n        //log.info('%cIn the <iframe>: getNotificationPermission message was received.', getConsoleStyle('alert'));\n        OneSignal._getSubdomainState(function (curState) {\n          OneSignal._safePostMessage(creator, { currentNotificationPermission: curState, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, null);\n        });\n      } else if (event.data.setSubdomainState) OneSignal.setSubscription(event.data.setSubdomainState.setSubscription);\n    };\n\n    OneSignal._getSubdomainState(function (curState) {\n      curState[\"isIframe\"] = isIframe;\n      OneSignal._safePostMessage(creator, { oneSignalInitPageReady: curState, from: _environment2.default.getEnv() }, OneSignal._initOptions.origin, [messageChannel.port2]);\n    });\n\n    OneSignal._initSaveState();\n    OneSignal._httpRegistration = true;\n    if (location.search.indexOf(\"?session=true\") == 0) return;\n\n    OneSignal._getPlayerId(null, function (player_id) {\n      if (!isIframe || player_id) {\n        navigator.serviceWorker.register(OneSignal.SERVICE_WORKER_PATH, OneSignal.SERVICE_WORKER_PARAM).then(OneSignal._enableNotifications, OneSignal._registerError);\n      }\n    });\n  },\n\n  _getSubdomainState: function _getSubdomainState(callback) {\n    var state = {};\n\n    Promise.all([OneSignal._getDbValue('Ids', 'userId'), OneSignal._getDbValue('Ids', 'registrationId'), OneSignal._getDbValue('Options', 'subscription')]).then(function _internalInit_GotAppRegistrationSubscriptionIds(result) {\n      var userIdResult = result[0];\n      var registrationIdResult = result[1];\n      var subscriptionResult = result[2];\n\n      callback({\n        userId: userIdResult ? userIdResult.id : null,\n        registrationId: registrationIdResult ? registrationIdResult.id : null,\n        notifPermssion: Notification.permission,\n        subscriptionSet: subscriptionResult ? subscriptionResult.value : null,\n        isPushEnabled: Notification.permission == \"granted\" && userIdResult && registrationIdResult && (subscriptionResult && subscriptionResult.value || subscriptionResult == null)\n      });\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  _initSaveState: function _initSaveState() {\n    OneSignal._app_id = OneSignal._initOptions.appId;\n    OneSignal._putDbValue(\"Ids\", { type: \"appId\", id: OneSignal._app_id });\n    OneSignal._putDbValue(\"Options\", { key: \"pageTitle\", value: document.title });\n  },\n\n  _supportsDirectPermission: function _supportsDirectPermission() {\n    return (0, _utils.isSupportedSafari)() || location.protocol == 'https:' || location.host.indexOf(\"localhost\") == 0 || location.host.indexOf(\"127.0.0.1\") == 0;\n  },\n\n  _sessionInit: function _sessionInit(options) {\n    _loglevel2.default.debug('Called %c_sessionInit(' + JSON.stringify(options) + ')', (0, _utils.getConsoleStyle)('code'));\n    OneSignal._initSaveState();\n\n    var hostPageProtocol = location.origin.match(/^http(s|):\\/\\/(www\\.|)/)[0];\n\n    // If HTTP or using subdomain mode\n    if (OneSignal._useHttpMode) {\n      if (options.fromRegisterFor) {\n        var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;\n        var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;\n\n        var thisWidth = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n        var thisHeight = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n        var childWidth = OneSignal._windowWidth;\n        var childHeight = OneSignal._windowHeight;\n\n        var left = thisWidth / 2 - childWidth / 2 + dualScreenLeft;\n        var top = thisHeight / 2 - childHeight / 2 + dualScreenTop;\n\n        _loglevel2.default.debug('Opening popup window.');\n        var message_localization_opts = OneSignal._initOptions['promptOptions'];\n        var message_localization_opts_str = '';\n        if (message_localization_opts) {\n          var message_localization_params = ['actionMessage', 'exampleNotificationTitleDesktop', 'exampleNotificationMessageDesktop', 'exampleNotificationTitleMobile', 'exampleNotificationMessageMobile', 'exampleNotificationCaption', 'acceptButtonText', 'cancelButtonText'];\n          for (var i = 0; i < message_localization_params.length; i++) {\n            var key = message_localization_params[i];\n            var value = message_localization_opts[key];\n            var encoded_value = encodeURIComponent(value);\n            if (value || value === '') {\n              message_localization_opts_str += '&' + key + '=' + encoded_value;\n            }\n          }\n        }\n        var childWindow = window.open(OneSignal._initOneSignalHttp + \"?\" + message_localization_opts_str + \"&hostPageProtocol=\" + hostPageProtocol, \"_blank\", 'scrollbars=yes, width=' + childWidth + ', height=' + childHeight + ', top=' + top + ', left=' + left);\n\n        if (childWindow) childWindow.focus();\n      } else {\n        OneSignal._addSessionIframe(hostPageProtocol);\n      }\n    } else {\n      if ((0, _utils.isSupportedSafari)()) {\n        if (OneSignal._initOptions.safari_web_id) {\n          var notificationPermissionBeforeRequest = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);\n          window.safari.pushNotification.requestPermission(OneSignal._API_URL + 'safari', OneSignal._initOptions.safari_web_id, { app_id: OneSignal._app_id }, function (data) {\n            _loglevel2.default.info('Safari requestPermission() callback:', data);\n            var notificationPermissionAfterRequest = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);\n            if (data.deviceToken) {\n              OneSignal._registerWithOneSignal(OneSignal._app_id, data.deviceToken.toLowerCase(), 7);\n            } else {\n              sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n            }\n            OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest);\n          });\n        }\n      } else if (options.modalPrompt && options.fromRegisterFor) {\n        // If HTTPS - Show modal\n        if (!(0, _utils.isPushNotificationsSupported)()) {\n          _loglevel2.default.warn('An attempt was made to open the HTTPS modal permission prompt, but push notifications are not supported on this browser. Opening canceled.');\n          return;\n        }\n        OneSignal.isPushNotificationsEnabled(function (pushEnabled) {\n          var element = document.createElement('div');\n          element.setAttribute('id', 'OneSignal-iframe-modal');\n          element.innerHTML = '<div id=\"notif-permission\" style=\"background: rgba(0, 0, 0, 0.7); position: fixed; top: 0; left: 0; right: 0; bottom: 0; z-index: 9000; display: block\"></div>';\n          document.body.appendChild(element);\n\n          var iframeStyle = document.createElement('style');\n          iframeStyle.innerHTML = \"@media (max-width: 560px) { .OneSignal-permission-iframe { width: 100%; height: 100%;} }\" + \"@media (min-width: 561px) { .OneSignal-permission-iframe { top: 50%; left: 50%; margin-left: -275px; margin-top: -248px;} }\";\n          document.getElementsByTagName('head')[0].appendChild(iframeStyle);\n\n          var iframeNode = document.createElement(\"iframe\");\n          iframeNode.className = \"OneSignal-permission-iframe\";\n          iframeNode.style.cssText = \"background: rgba(255, 255, 255, 1); position: fixed;\";\n          iframeNode.src = OneSignal._initOneSignalHttp + '?id=' + OneSignal._app_id + '&httpsPrompt=true' + '&pushEnabled=' + pushEnabled + '&permissionBlocked=' + (typeof Notification === \"undefined\" || Notification.permission == \"denied\") + '&hostPageProtocol=' + hostPageProtocol;\n          iframeNode.setAttribute('frameborder', '0');\n          iframeNode.width = OneSignal._windowWidth.toString();\n          iframeNode.height = OneSignal._windowHeight.toString();\n\n          _loglevel2.default.debug('Opening HTTPS modal prompt.');\n          document.getElementById(\"notif-permission\").appendChild(iframeNode);\n        });\n      } else if ('serviceWorker' in navigator) // If HTTPS - Show native prompt\n        OneSignal._registerForW3CPush(options);else _loglevel2.default.debug('Service workers are not supported in this browser.');\n\n      _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n    }\n  },\n\n  _registerForW3CPush: function _registerForW3CPush(options) {\n\n    OneSignal._getDbValue('Ids', 'registrationId').then(function _registerForW3CPush_GotRegistrationId(registrationIdResult) {\n      if (!registrationIdResult || !options.fromRegisterFor || Notification.permission != \"granted\") {\n        navigator.serviceWorker.getRegistration().then(function (serviceWorkerRegistration) {\n          var sw_path = \"\";\n\n          if (OneSignal._initOptions.path) sw_path = OneSignal._initOptions.path;\n\n          if (typeof serviceWorkerRegistration === \"undefined\") // Nothing registered, very first run\n            OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);else {\n            if (serviceWorkerRegistration.active) {\n              if (serviceWorkerRegistration.active.scriptURL.indexOf(sw_path + OneSignal.SERVICE_WORKER_PATH) > -1) {\n\n                OneSignal._getDbValue('Ids', 'WORKER1_ONE_SIGNAL_SW_VERSION').then(function (versionResult) {\n                  if (versionResult) {\n                    if (versionResult.id != OneSignal._VERSION) OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\n                  } else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\n                }).catch(function (e) {\n                  _loglevel2.default.error(e);\n                });\n              } else if (serviceWorkerRegistration.active.scriptURL.indexOf(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH) > -1) {\n\n                OneSignal._getDbValue('Ids', 'WORKER2_ONE_SIGNAL_SW_VERSION').then(function (versionResult) {\n                  if (versionResult) {\n                    if (versionResult.id != OneSignal._VERSION) OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);\n                  } else OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_UPDATER_PATH);\n                }).catch(function (e) {\n                  _loglevel2.default.error(e);\n                });\n              }\n            } else if (serviceWorkerRegistration.installing == null) OneSignal._registerServiceWorker(sw_path + OneSignal.SERVICE_WORKER_PATH);\n          }\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  _registerServiceWorker: function _registerServiceWorker(full_sw_and_path) {\n    navigator.serviceWorker.register(full_sw_and_path, OneSignal.SERVICE_WORKER_PARAM).then(OneSignal._enableNotifications, OneSignal._registerError);\n  },\n\n  _addSessionIframe: function _addSessionIframe(hostPageProtocol) {\n    _loglevel2.default.debug('Called %c_addSessionIframe(' + JSON.stringify(hostPageProtocol, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n\n    var node = document.createElement(\"iframe\");\n    node.style.display = \"none\";\n    node.src = OneSignal._initOneSignalHttp + \"Iframe\";\n    if (sessionStorage.getItem(\"ONE_SIGNAL_SESSION\")) node.src += \"?session=true\" + \"&hostPageProtocol=\" + hostPageProtocol;else node.src += \"?hostPageProtocol=\" + hostPageProtocol;\n    document.body.appendChild(node);\n\n    OneSignal._sessionIframeAdded = true;\n  },\n\n  _registerError: function _registerError(err) {\n    _loglevel2.default.error(\"ServiceWorker registration\", err);\n  },\n\n  _enableNotifications: function _enableNotifications(existingServiceWorkerRegistration) {\n    // is ServiceWorkerRegistration type\n    if (existingServiceWorkerRegistration) _loglevel2.default.debug('An older ServiceWorker exists:', existingServiceWorkerRegistration);\n    if (!('PushManager' in window)) {\n      _loglevel2.default.error(\"Push messaging is not supported. No PushManager.\");\n      sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n      return;\n    }\n\n    if (!('showNotification' in ServiceWorkerRegistration.prototype)) {\n      _loglevel2.default.error(\"Notifications are not supported. showNotification not available in ServiceWorkerRegistration.\");\n      sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n      return;\n    }\n\n    if (Notification.permission === 'denied') {\n      _loglevel2.default.warn(\"The user has disabled notifications.\");\n      return;\n    }\n\n    navigator.serviceWorker.ready.then(function (serviceWorkerRegistration) {\n      _loglevel2.default.info('Service worker now active:', serviceWorkerRegistration);\n\n      OneSignal._subscribeForPush(serviceWorkerRegistration);\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  /*\n   Returns the current browser-agnostic notification permission as \"default\", \"granted\", \"denied\".\n   safariWebId: Used only to get the current notification permission state in Safari (required as part of the spec).\n   */\n  _getNotificationPermission: function _getNotificationPermission(safariWebId) {\n    if (window.safari) {\n      // The user is on Safari\n      // A web ID is required to determine the current notificiation permission\n      if (safariWebId) {\n        return window.safari.pushNotification.permission(safariWebId).permission;\n      } else {\n        // The user didn't set up Safari web push properly; notifications are unlikely to be enabled\n        return \"default\";\n      }\n    } else {\n      // Identical API on Firefox and Chrome\n      return Notification.permission;\n    }\n  },\n\n  _triggerEvent_customPromptClicked: function _triggerEvent_customPromptClicked(clickResult) {\n    var recentPermissions = _limitStore2.default.put('prompt.custom.permission', clickResult);\n    _events2.default.trigger(OneSignal.EVENTS.CUSTOM_PROMPT_CLICKED, {\n      result: clickResult\n    });\n  },\n\n  _triggerEvent_nativePromptPermissionChanged: function _triggerEvent_nativePromptPermissionChanged(from, to) {\n    if (to === undefined) {\n      to = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);\n    }\n    if (from !== to) {\n      var recentPermissions = _limitStore2.default.put('notification.permission', to);\n      _events2.default.trigger(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, {\n        from: from,\n        to: to\n      });\n    }\n  },\n\n  _triggerEvent_subscriptionChanged: function _triggerEvent_subscriptionChanged(to) {\n    _events2.default.trigger(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, to);\n  },\n\n  _triggerEvent_dbValueRetrieved: function _triggerEvent_dbValueRetrieved(value) {\n    _events2.default.trigger(OneSignal.EVENTS.DB_VALUE_RETRIEVED, value);\n  },\n\n  _triggerEvent_dbValueSet: function _triggerEvent_dbValueSet(value) {\n    _events2.default.trigger(OneSignal.EVENTS.DB_VALUE_SET, value);\n  },\n\n  _triggerEvent_internalSubscriptionSet: function _triggerEvent_internalSubscriptionSet(value) {\n    _events2.default.trigger(OneSignal.EVENTS.INTERNAL_SUBSCRIPTIONSET, value);\n  },\n\n  _subscribeForPush: function _subscribeForPush(serviceWorkerRegistration) {\n    var notificationPermissionBeforeRequest = OneSignal._getNotificationPermission(OneSignal._initOptions.safari_web_id);\n    serviceWorkerRegistration.pushManager.subscribe({ userVisibleOnly: true }).then(function (subscription) {\n      sessionStorage.setItem(\"ONE_SIGNAL_NOTIFICATION_PERMISSION\", Notification.permission);\n\n      OneSignal._getDbValue('Ids', 'appId').then(function _subscribeForPush_GotAppId(appIdResult) {\n        var appId = appIdResult.id;\n        _loglevel2.default.debug(\"Called OneSignal._subscribeForPush() -> serviceWorkerRegistration.pushManager.subscribe().\");\n\n        var registrationId = null;\n        if (subscription) {\n          if (typeof subscription.subscriptionId != \"undefined\") // Chrome 43 & 42\n            registrationId = subscription.subscriptionId;else // Chrome 44+ and FireFox\n            registrationId = subscription.endpoint.replace(new RegExp(\"^(https://android.googleapis.com/gcm/send/|https://updates.push.services.mozilla.com/push/)\"), \"\");\n        } else _loglevel2.default.warn('Could not subscribe your browser for push notifications.');\n\n        OneSignal._registerWithOneSignal(appId, registrationId, (0, _utils.isSupportedFireFox)() ? 8 : 5);\n\n        if (!OneSignal._usingNativePermissionHook) {\n          OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest);\n        }\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    }).catch(function (e) {\n      _loglevel2.default.error('Error while subscribing for push:', e);\n\n      if (!OneSignal._usingNativePermissionHook) OneSignal._triggerEvent_nativePromptPermissionChanged(notificationPermissionBeforeRequest);\n\n      if (e.code == 20 && opener && OneSignal._httpRegistration) window.close();\n    });\n  },\n\n  sendTag: function sendTag(key, value) {\n    var jsonKeyValue = {};\n    jsonKeyValue[key] = value;\n    OneSignal.sendTags(jsonKeyValue);\n  },\n\n  sendTags: function sendTags(jsonPair) {\n    OneSignal._getDbValue('Ids', 'userId').then(function sendTags_GotUserId(userIdResult) {\n      if (userIdResult) OneSignal._sendToOneSignalApi(\"players/\" + userIdResult.id, \"PUT\", {\n        app_id: OneSignal._app_id,\n        tags: jsonPair\n      });else {\n        if (OneSignal._tagsToSendOnRegister == null) OneSignal._tagsToSendOnRegister = jsonPair;else {\n          var resultObj = {};\n          for (var _obj in OneSignal._tagsToSendOnRegister) {\n            resultObj[_obj] = OneSignal._tagsToSendOnRegister[_obj];\n          }for (var _obj in jsonPair) {\n            resultObj[_obj] = jsonPair[_obj];\n          }OneSignal._tagsToSendOnRegister = resultObj;\n        }\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error('sendTags:', e);\n    });\n  },\n\n  deleteTag: function deleteTag(key) {\n    OneSignal.deleteTags([key]);\n  },\n\n  deleteTags: function deleteTags(keyArray) {\n    var jsonPair = {};\n    var length = keyArray.length;\n    for (var i = 0; i < length; i++) {\n      jsonPair[keyArray[i]] = \"\";\n    }OneSignal.sendTags(jsonPair);\n  },\n\n  _handleNotificationOpened: function _handleNotificationOpened(event) {\n    var notificationData = JSON.parse(event.notification.tag);\n    event.notification.close();\n\n    Promise.all([OneSignal._getDbValue('Ids', 'appId'), OneSignal._getDbValue('Ids', 'userId')]).then(function _handleNotificationOpened_GotAppUserIds(results) {\n      var appIdResult = results[0];\n      var userIdResult = results[1];\n      if (appIdResult && userIdResult) {\n        OneSignal._sendToOneSignalApi(\"notifications/\" + notificationData.id, \"PUT\", {\n          app_id: appIdResult.id,\n          player_id: userIdResult.id,\n          opened: true\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n\n    event.waitUntil(clients.matchAll({ type: \"window\" }).then(function (clientList) {\n      var launchURL = registration.scope;\n      if (OneSignal._defaultLaunchURL) launchURL = OneSignal._defaultLaunchURL;\n      if (notificationData.launchURL) launchURL = notificationData.launchURL;\n\n      for (var i = 0; i < clientList.length; i++) {\n        var client = clientList[i];\n        if ('focus' in client && client.url == launchURL) {\n          client.focus();\n\n          // targetOrigin not valid here as the service worker owns the page.\n          client.postMessage(notificationData);\n          return;\n        }\n      }\n\n      if (launchURL !== 'javascript:void(0);' && launchURL !== 'do_not_open') {\n        OneSignal._putDbValue(\"NotificationOpened\", { url: launchURL, data: notificationData });\n        clients.openWindow(launchURL).catch(function (error) {\n          // Should only fall into here if going to an external URL on Chrome older than 43.\n          clients.openWindow(registration.scope + \"redirector.html?url=\" + launchURL);\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    }));\n  },\n\n  _getTitle: function _getTitle(incomingTitle, callback) {\n    if (incomingTitle != null) {\n      callback(incomingTitle);\n      return;\n    }\n\n    Promise.all([OneSignal._getDbValue('Options', 'defaultTitle'), OneSignal._getDbValue('Options', 'pageTitle')]).then(function _getTitle_GotDefaultPageTitles(results) {\n      var defaultTitleResult = results[0];\n      var pageTitleResult = results[1];\n\n      if (defaultTitleResult) {\n        callback(defaultTitleResult.value);\n        return;\n      } else if (pageTitleResult && pageTitleResult.value != null) {\n        callback(pageTitleResult.value);\n        return;\n      } else {\n        callback('');\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n  },\n\n  _getLastNotifications: function _getLastNotifications(itemCallback, completeCallback) {\n    OneSignal._getDbValue('Ids', 'userId').then(function _getLastNotifications_GotUserId(userIdResult) {\n      if (userIdResult) {\n        OneSignal._sendToOneSignalApi(\"players/\" + userIdResult.id + \"/chromeweb_notification\", \"GET\", null, function (response) {\n          for (var i = 0; i < response.length; i++) {\n            itemCallback(JSON.parse(response[i]));\n          }\n        }, function () {\n          completeCallback();\n        }); // Failed callback\n      } else {\n          _loglevel2.default.debug(\"Error: could not get notificationId\");\n          completeCallback();\n        }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  // HTTP & HTTPS - Runs on main page (receives events from iframe / popup)\n  _listener_receiveMessage: function receiveMessage(event) {\n    if (event.data.from) {\n      var from = event.data.from.capitalize();\n    } else {\n      var from = 'IFrame/Popup';\n    }\n    _loglevel2.default.debug('%c' + _environment2.default.getEnv().capitalize() + ' ⬸ ' + from + ':', (0, _utils.getConsoleStyle)('postmessage'), event.data);\n\n    if (OneSignal._initOptions == undefined) return;\n\n    if (false) return;\n\n    if (event.data.oneSignalInitPageReady) {\n      // Only called on HTTP pages.\n      var eventData = event.data.oneSignalInitPageReady;\n\n      if (eventData.isIframe) {\n        OneSignal._iframePort = event.ports[0];\n      }\n\n      if (eventData.userId) OneSignal._putDbValue(\"Ids\", { type: \"userId\", id: eventData.userId });\n      if (eventData.registrationId) OneSignal._putDbValue(\"Ids\", { type: \"registrationId\", id: eventData.registrationId });\n\n      OneSignal._fireNotificationEnabledCallback(eventData.isPushEnabled);\n      OneSignal._sendUnsentTags();\n\n      OneSignal._getDbValues(\"Options\").then(function _listener_receiveMessage(options) {\n        if (!options.defaultUrl) options.defaultUrl = document.URL;\n        if (!options.defaultTitle) options.defaultTitle = document.title;\n\n        options.parent_url = document.URL;\n        event.ports[0].postMessage({ initOptions: options, from: _environment2.default.getEnv() });\n\n        // For HTTP sites, only now is the SDK initialized and able to communicate with the iframe\n        _events2.default.trigger(OneSignal.EVENTS.SDK_INITIALIZED);\n      }).catch(function (e) {\n        _loglevel2.default.error('_listener_receiveMessage:', e);\n      });\n    } else if (event.data.currentNotificationPermission) {\n      // Subdomain Only\n      OneSignal._fireNotificationEnabledCallback(event.data.currentNotificationPermission.isPushEnabled);\n    } else if (event.data.idsAvailable) {\n      // Only called on HTTP pages.\n      sessionStorage.setItem(\"ONE_SIGNAL_SESSION\", true);\n      OneSignal._putDbValue(\"Ids\", { type: \"userId\", id: event.data.idsAvailable.userId });\n      OneSignal._putDbValue(\"Ids\", { type: \"registrationId\", id: event.data.idsAvailable.registrationId });\n\n      if (OneSignal._idsAvailable_callback.length > 0) {\n        while (OneSignal._idsAvailable_callback.length > 0) {\n          var curr_callback = OneSignal._idsAvailable_callback.pop();\n          curr_callback({\n            userId: event.data.idsAvailable.userId,\n            registrationId: event.data.idsAvailable.registrationId\n          });\n        }\n      }\n      OneSignal._sendUnsentTags();\n    } else if (event.data.httpsPromptAccepted) {\n      // HTTPS Only\n      OneSignal.registerForPushNotifications();\n      OneSignal.setSubscription(true);\n      var elem = document.getElementById('OneSignal-iframe-modal');\n      elem.parentNode.removeChild(elem);\n      OneSignal._triggerEvent_customPromptClicked('granted');\n    } else if (event.data.httpsPromptCanceled) {\n      // HTTPS Only\n      var elem = document.getElementById('OneSignal-iframe-modal');\n      elem.parentNode.removeChild(elem);\n      OneSignal._triggerEvent_customPromptClicked('denied');\n    } else if (event.data.httpPromptAccepted) {\n      // HTTP Only\n      OneSignal._triggerEvent_customPromptClicked('granted');\n    } else if (event.data.httpPromptCanceled) {\n      // HTTP Only\n      OneSignal._triggerEvent_customPromptClicked('denied');\n    } else if (event.data.httpNativePromptPermissionChanged) {\n      var recentPermissions = _limitStore2.default.get('notification.permission');\n      var permissionBeforePrompt = recentPermissions[0];\n      OneSignal._triggerEvent_nativePromptPermissionChanged(permissionBeforePrompt, event.data.httpNativePromptPermissionChanged);\n    } else if (OneSignal._notificationOpened_callback) {\n      // HTTP and HTTPS\n      OneSignal._notificationOpened_callback(event.data);\n    }\n  },\n\n  addListenerForNotificationOpened: function addListenerForNotificationOpened(callback) {\n    OneSignal._notificationOpened_callback = callback;\n    if (window) {\n      OneSignal._getDbValue(\"NotificationOpened\", document.URL).then(function (notificationOpenedResult) {\n        if (notificationOpenedResult) {\n          OneSignal._deleteDbValue(\"NotificationOpened\", document.URL);\n          OneSignal._notificationOpened_callback(notificationOpenedResult.data);\n        }\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n      ;\n    }\n  },\n\n  // Subdomain - Fired from message received from iframe.\n  _fireNotificationEnabledCallback: function _fireNotificationEnabledCallback(newNotificationPermission) {\n    if (OneSignal._isNotificationEnabledCallback) {\n      while (OneSignal._isNotificationEnabledCallback.length > 0) {\n        var callback = OneSignal._isNotificationEnabledCallback.pop();\n        callback(newNotificationPermission);\n      }\n    }\n  },\n\n  getIdsAvailable: function getIdsAvailable(callback) {\n    if (callback === undefined) return;\n\n    OneSignal._idsAvailable_callback.push(callback);\n\n    Promise.all([OneSignal._getDbValue('Ids', 'userId'), OneSignal._getDbValue('Ids', 'registrationId')]).then(function getIdsAvailable_GotUserRegistrationIds(results) {\n      var userIdResult = results[0];\n      var registrationIdResult = results[1];\n\n      if (userIdResult) {\n        if (registrationIdResult) {\n          while (OneSignal._idsAvailable_callback.length > 0) {\n            var curr_callback = OneSignal._idsAvailable_callback.pop();\n            curr_callback({\n              userId: userIdResult.id,\n              registrationId: registrationIdResult.id\n            });\n          }\n        } else while (OneSignal._idsAvailable_callback.length > 0) {\n          var curr_callback = OneSignal._idsAvailable_callback.pop();\n          curr_callback({ userId: userIdResult.id, registrationId: null });\n        }\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  getTags: function getTags(callback) {\n    OneSignal._getDbValue('Ids', 'userId').then(function (userIdResult) {\n      if (userIdResult) {\n        OneSignal._sendToOneSignalApi(\"players/\" + userIdResult.id, 'GET', null, function (response) {\n          callback(response.tags);\n        });\n      }\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  isPushNotificationsEnabled: function isPushNotificationsEnabled(callback) {\n    if (!(0, _utils.isPushNotificationsSupported)()) {\n      _loglevel2.default.warn(\"Your browser does not support push notifications.\");\n      return;\n    }\n\n    // If Subdomain\n    if (OneSignal._initOptions.subdomainName && !(0, _utils.isBrowserSafari)()) {\n      OneSignal._isNotificationEnabledCallback.push(callback);\n      if (OneSignal._iframePort) {\n        OneSignal._iframePort.postMessage({ getNotificationPermission: true, from: _environment2.default.getEnv() });\n      }\n      return;\n    }\n\n    // If HTTPS\n\n    Promise.all([OneSignal._getDbValue('Ids', 'registrationId'), OneSignal._getDbValue('Options', 'subscription')]).then(function (results) {\n      var registrationIdResult = results[0];\n      var subscriptionResult = results[1];\n\n      if (registrationIdResult) {\n        if (subscriptionResult && !subscriptionResult.value) return callback(false);\n\n        callback(Notification.permission == \"granted\");\n      } else callback(false);\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n  },\n\n  _getNotificationTypes: function _getNotificationTypes(callback) {\n    OneSignal._getSubscription(function (db_subscriptionSet) {\n      callback(db_subscriptionSet ? 1 : -2);\n    });\n  },\n\n  setSubscription: function setSubscription(newSubscription) {\n    if (OneSignal._iframePort) OneSignal._iframePort.postMessage({ setSubdomainState: { setSubscription: newSubscription }, from: _environment2.default.getEnv() });else {\n      OneSignal._getSubscription(function (currentSubscription) {\n        if (currentSubscription != newSubscription) {\n          OneSignal._putDbValue(\"Options\", { key: \"subscription\", value: newSubscription });\n          OneSignal._getDbValue('Ids', 'userId').then(function (userIdResult) {\n            if (userIdResult) OneSignal._sendToOneSignalApi(\"players/\" + userIdResult.id, \"PUT\", {\n              app_id: OneSignal._app_id,\n              notification_types: newSubscription ? 1 : -2\n            }, function setSubscriptionSetCallback() {\n              OneSignal._triggerEvent_internalSubscriptionSet(newSubscription);\n            });\n          }).catch(function (e) {\n            _loglevel2.default.error(e);\n          });\n        }\n      });\n    }\n  },\n\n  /**\n   * Returns false if setSubscription(false) has been explicitly called at any point in time. Otherwise returns true.\n   * This means a return value of true does not mean the user is subscribed, only that the user did not call setSubcription(false).\n   * @param callback\n   * @private\n   */\n  _getSubscription: function _getSubscription(callback) {\n    OneSignal._getDbValue('Options', 'subscription').then(function (subscriptionResult) {\n      callback(!(subscriptionResult && subscriptionResult.value == false));\n    }).catch(function (e) {\n      _loglevel2.default.error(e);\n    });\n    ;\n  },\n\n  _safePostMessage: function _safePostMessage(creator, data, targetOrigin, receiver) {\n    var tOrigin = targetOrigin.toLowerCase();\n\n    // If we are trying to target a http site allow the https version. (w/ or w/o 'wwww.' too)\n    if (tOrigin.startsWith(\"http://\")) {\n      var queryDict = {};\n      location.search.substr(1).split(\"&\").forEach(function (item) {\n        queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1];\n      });\n      var validPreURLRegex = /^http(s|):\\/\\/(www\\.|)/;\n      tOrigin = tOrigin.replace(validPreURLRegex, queryDict[\"hostPageProtocol\"]);\n    }\n\n    if (!data.from) {\n      data['from'] = _environment2.default.getEnv();\n    }\n\n    if (receiver) creator.postMessage(data, tOrigin, receiver);else creator.postMessage(data, tOrigin);\n  },\n\n  _process_pushes: function _process_pushes(array) {\n    for (var i = 0; i < array.length; i++) {\n      OneSignal.push(array[i]);\n    }\n  },\n\n  push: function push(item) {\n    if (typeof item == \"function\") item();else {\n      var functionName = item.shift();\n      OneSignal[functionName].apply(null, item);\n    }\n  }\n};\n\n// If imported on your page.\nif (_environment2.default.isBrowser()) window.addEventListener(\"message\", OneSignal._listener_receiveMessage, false);else {// if imported from the service worker.\n\n}\n\nif (OneSignal.LOGGING) _loglevel2.default.setDefaultLevel(_loglevel2.default.levels.TRACE);else _loglevel2.default.setDefaultLevel(_loglevel2.default.levels.ERROR);\n\n_loglevel2.default.info('%cOneSignal Web SDK loaded (version ' + OneSignal._VERSION + ', ' + _environment2.default.getEnv() + ' environment).', (0, _utils.getConsoleStyle)('bold'));\n\nmodule.exports = OneSignal;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(global) {/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = global.fetch\n}.call(global));\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,")},function(module,exports){eval('"use strict";\n\n/**\n * Capitalizes the first letter of the string.\n * @returns {string} The string with the first letter capitalized.\n */\nString.prototype.capitalize = function () {\n  return this.charAt(0).toUpperCase() + this.slice(1);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3RyaW5nLmpzPzJjZTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBSUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsWUFBVztBQUN2QyxTQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztDQUNyRCIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDYXBpdGFsaXplcyB0aGUgZmlyc3QgbGV0dGVyIG9mIHRoZSBzdHJpbmcuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHdpdGggdGhlIGZpcnN0IGxldHRlciBjYXBpdGFsaXplZC5cbiAqL1xuU3RyaW5nLnByb3RvdHlwZS5jYXBpdGFsaXplID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgdGhpcy5zbGljZSgxKTtcbn07XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc3RyaW5nLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.apiCall = apiCall;\nexports.sendNotification = sendNotification;\n\nvar _vars = __webpack_require__(1);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction apiCall(action, method, data) {\n  var headers = new Headers();\n  headers.append('Content-Type', 'application/json;charset=UTF-8');\n\n  var contents = {\n    method: method || 'NO_METHOD_SPECIFIED',\n    headers: headers,\n    cache: 'no-cache',\n    body: JSON.stringify(data)\n  };\n\n  return new Promise(function (resolve, reject) {\n    fetch(_vars.API_URL + action, contents).then(function status(response) {\n      if (response.status >= 200 && response.status < 300) resolve(response.json());else reject(new Error(response.statusText));\n    }).catch(function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction sendNotification(appId, playerIds, titles, contents) {\n  var params = {\n    'app_id': appId,\n    'headings': titles,\n    'contents': contents,\n    'include_player_ids': playerIds,\n    'isAnyWeb': true,\n    'url': 'javascript:void(0);'\n  };\n  return apiCall('notifications', 'POST', params);\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBpLmpzPzlmOTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFHZ0IsT0FBTyxHQUFQLE9BQU87UUF5QlAsZ0JBQWdCLEdBQWhCLGdCQUFnQjs7Ozs7Ozs7OztBQXpCekIsU0FBUyxPQUFPLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFDNUMsTUFBSSxPQUFPLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztBQUM1QixTQUFPLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxnQ0FBZ0MsQ0FBQyxDQUFDOztBQUVqRSxNQUFJLFFBQVEsR0FBRztBQUNiLFVBQU0sRUFBRSxNQUFNLElBQUkscUJBQXFCO0FBQ3ZDLFdBQU8sRUFBRSxPQUFPO0FBQ2hCLFNBQUssRUFBRSxVQUFVO0FBQ2pCLFFBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztHQUMzQixDQUFDOztBQUVGLFNBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFLO0FBQ3RDLFNBQUssQ0FBQyxNQWZELE9BQU8sR0FlSSxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQzlCLElBQUksQ0FBQyxTQUFTLE1BQU0sQ0FBQyxRQUFRLEVBQUU7QUFDOUIsVUFBSSxRQUFRLENBQUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxRQUFRLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFDakQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBRXpCLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztLQUMxQyxDQUFDLENBQ0QsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQ2xCLFlBQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNYLENBQUMsQ0FBQztHQUNOLENBQUMsQ0FBQztDQUNKOztBQUVNLFNBQVMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFO0FBQ25FLE1BQUksTUFBTSxHQUFHO0FBQ1gsWUFBUSxFQUFFLEtBQUs7QUFDZixjQUFVLEVBQUUsTUFBTTtBQUNsQixjQUFVLEVBQUUsUUFBUTtBQUNwQix3QkFBb0IsRUFBRSxTQUFTO0FBQy9CLGNBQVUsRUFBRSxJQUFJO0FBQ2hCLFNBQUssRUFBRSxxQkFBcUI7R0FDN0IsQ0FBQztBQUNGLFNBQU8sT0FBTyxDQUFDLGVBQWUsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMiLCJmaWxlIjoiOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFQSV9VUkwgfSBmcm9tICcuL3ZhcnMuanMnXG5pbXBvcnQgbG9nIGZyb20gJ2xvZ2xldmVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFwaUNhbGwoYWN0aW9uLCBtZXRob2QsIGRhdGEpIHtcbiAgbGV0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICBoZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCcpO1xuXG4gIGxldCBjb250ZW50cyA9IHtcbiAgICBtZXRob2Q6IG1ldGhvZCB8fCAnTk9fTUVUSE9EX1NQRUNJRklFRCcsXG4gICAgaGVhZGVyczogaGVhZGVycyxcbiAgICBjYWNoZTogJ25vLWNhY2hlJyxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxuICB9O1xuXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgZmV0Y2goQVBJX1VSTCArIGFjdGlvbiwgY29udGVudHMpXG4gICAgICAudGhlbihmdW5jdGlvbiBzdGF0dXMocmVzcG9uc2UpIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA+PSAyMDAgJiYgcmVzcG9uc2Uuc3RhdHVzIDwgMzAwKVxuICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UuanNvbigpKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzVGV4dCkpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZW5kTm90aWZpY2F0aW9uKGFwcElkLCBwbGF5ZXJJZHMsIHRpdGxlcywgY29udGVudHMpIHtcbiAgdmFyIHBhcmFtcyA9IHtcbiAgICAnYXBwX2lkJzogYXBwSWQsXG4gICAgJ2hlYWRpbmdzJzogdGl0bGVzLFxuICAgICdjb250ZW50cyc6IGNvbnRlbnRzLFxuICAgICdpbmNsdWRlX3BsYXllcl9pZHMnOiBwbGF5ZXJJZHMsXG4gICAgJ2lzQW55V2ViJzogdHJ1ZSxcbiAgICAndXJsJzogJ2phdmFzY3JpcHQ6dm9pZCgwKTsnXG4gIH07XG4gIHJldHVybiBhcGlDYWxsKCdub3RpZmljYXRpb25zJywgJ1BPU1QnLCBwYXJhbXMpO1xufVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2FwaS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");
},function(module,exports){eval('"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n/*\n LimitStore.put(\'colorado\', \'rocky\');\n ["rocky"]\n LimitStore.put(\'colorado\', \'mountain\');\n ["rocky", "mountain"]\n LimitStore.put(\'colorado\', \'national\');\n ["mountain", "national"]\n LimitStore.put(\'colorado\', \'park\');\n ["national", "park"]\n */\nfunction LimitStore() {}\n\nLimitStore.store = {};\nLimitStore.LIMIT = 2;\n\nLimitStore.put = function (key, value) {\n  if (LimitStore.store[key] === undefined) {\n    LimitStore.store[key] = [null, null];\n  }\n  LimitStore.store[key].push(value);\n  if (LimitStore.store[key].length == LimitStore.LIMIT + 1) {\n    LimitStore.store[key].shift();\n  }\n  return LimitStore.store[key];\n};\n\nLimitStore.get = function (key) {\n  if (LimitStore.store[key] === undefined) {\n    LimitStore.store[key] = [null, null];\n  }\n  return LimitStore.store[key];\n};\n\nLimitStore.getFirst = function (key) {\n  return LimitStore.get(key)[0];\n};\n\nLimitStore.getLast = function (key) {\n  return LimitStore.get(key)[1];\n};\n\nLimitStore.isEmpty = function (key) {\n  var values = LimitStore.get(key);\n  return values[0] === null && values[1] === null;\n};\n\nexports.default = LimitStore;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGltaXRTdG9yZS5qcz8yZDQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQVVBLFNBQVMsVUFBVSxHQUFHLEVBQ3JCOztBQUVELFVBQVUsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLFVBQVUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDOztBQUVyQixVQUFVLENBQUMsR0FBRyxHQUFHLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRTtBQUNyQyxNQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssU0FBUyxFQUFFO0FBQ3ZDLGNBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7R0FDdEM7QUFDRCxZQUFVLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNsQyxNQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxJQUFJLFVBQVUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFFO0FBQ3hELGNBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7R0FDL0I7QUFDRCxTQUFPLFVBQVUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDOUIsQ0FBQzs7QUFFRixVQUFVLENBQUMsR0FBRyxHQUFHLFVBQVUsR0FBRyxFQUFFO0FBQzlCLE1BQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxTQUFTLEVBQUU7QUFDdkMsY0FBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztHQUN0QztBQUNELFNBQU8sVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUM5QixDQUFDOztBQUVGLFVBQVUsQ0FBQyxRQUFRLEdBQUcsVUFBVSxHQUFHLEVBQUU7QUFDbkMsU0FBTyxVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0NBQy9CLENBQUM7O0FBRUYsVUFBVSxDQUFDLE9BQU8sR0FBRyxVQUFVLEdBQUcsRUFBRTtBQUNsQyxTQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Q0FDL0IsQ0FBQzs7QUFFRixVQUFVLENBQUMsT0FBTyxHQUFHLFVBQVMsR0FBRyxFQUFFO0FBQ2pDLE1BQUksTUFBTSxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDakMsU0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUM7Q0FDakQsQ0FBQzs7a0JBRWEsVUFBVSIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gTGltaXRTdG9yZS5wdXQoJ2NvbG9yYWRvJywgJ3JvY2t5Jyk7XG4gW1wicm9ja3lcIl1cbiBMaW1pdFN0b3JlLnB1dCgnY29sb3JhZG8nLCAnbW91bnRhaW4nKTtcbiBbXCJyb2NreVwiLCBcIm1vdW50YWluXCJdXG4gTGltaXRTdG9yZS5wdXQoJ2NvbG9yYWRvJywgJ25hdGlvbmFsJyk7XG4gW1wibW91bnRhaW5cIiwgXCJuYXRpb25hbFwiXVxuIExpbWl0U3RvcmUucHV0KCdjb2xvcmFkbycsICdwYXJrJyk7XG4gW1wibmF0aW9uYWxcIiwgXCJwYXJrXCJdXG4gKi9cbmZ1bmN0aW9uIExpbWl0U3RvcmUoKSB7XG59XG5cbkxpbWl0U3RvcmUuc3RvcmUgPSB7fTtcbkxpbWl0U3RvcmUuTElNSVQgPSAyO1xuXG5MaW1pdFN0b3JlLnB1dCA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIGlmIChMaW1pdFN0b3JlLnN0b3JlW2tleV0gPT09IHVuZGVmaW5lZCkge1xuICAgIExpbWl0U3RvcmUuc3RvcmVba2V5XSA9IFtudWxsLCBudWxsXTtcbiAgfVxuICBMaW1pdFN0b3JlLnN0b3JlW2tleV0ucHVzaCh2YWx1ZSk7XG4gIGlmIChMaW1pdFN0b3JlLnN0b3JlW2tleV0ubGVuZ3RoID09IExpbWl0U3RvcmUuTElNSVQgKyAxKSB7XG4gICAgTGltaXRTdG9yZS5zdG9yZVtrZXldLnNoaWZ0KCk7XG4gIH1cbiAgcmV0dXJuIExpbWl0U3RvcmUuc3RvcmVba2V5XTtcbn07XG5cbkxpbWl0U3RvcmUuZ2V0ID0gZnVuY3Rpb24gKGtleSkge1xuICBpZiAoTGltaXRTdG9yZS5zdG9yZVtrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICBMaW1pdFN0b3JlLnN0b3JlW2tleV0gPSBbbnVsbCwgbnVsbF07XG4gIH1cbiAgcmV0dXJuIExpbWl0U3RvcmUuc3RvcmVba2V5XTtcbn07XG5cbkxpbWl0U3RvcmUuZ2V0Rmlyc3QgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBMaW1pdFN0b3JlLmdldChrZXkpWzBdO1xufTtcblxuTGltaXRTdG9yZS5nZXRMYXN0ID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gTGltaXRTdG9yZS5nZXQoa2V5KVsxXTtcbn07XG5cbkxpbWl0U3RvcmUuaXNFbXB0eSA9IGZ1bmN0aW9uKGtleSkge1xuICBsZXQgdmFsdWVzID0gTGltaXRTdG9yZS5nZXQoa2V5KTtcbiAgcmV0dXJuIHZhbHVlc1swXSA9PT0gbnVsbCAmJiB2YWx1ZXNbMV0gPT09IG51bGw7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBMaW1pdFN0b3JlO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2xpbWl0U3RvcmUuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('"use strict";\n\nif (typeof window !== "undefined") {\n  (function () {\n    function CustomEvent(event, params) {\n      params = params || { bubbles: false, cancelable: false, details: undefined };\n      var evt = document.createEvent(\'CustomEvent\');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.details);\n      return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n  })();\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXZlbnRzLXBvbHlmaWxsLmpzPzUzYTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsRUFBRTtBQUNqQyxHQUFDLFlBQVk7QUFDWCxhQUFTLFdBQVcsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFO0FBQ2xDLFlBQU0sR0FBRyxNQUFNLElBQUksRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBQyxDQUFDO0FBQzNFLFVBQUksR0FBRyxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDOUMsU0FBRyxDQUFDLGVBQWUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM5RSxhQUFPLEdBQUcsQ0FBQztLQUNaOztBQUVELGVBQVcsQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUM7O0FBRS9DLFVBQU0sQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO0dBQ2xDLEdBQUcsQ0FBQyIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ3VzdG9tRXZlbnQoZXZlbnQsIHBhcmFtcykge1xuICAgICAgcGFyYW1zID0gcGFyYW1zIHx8IHtidWJibGVzOiBmYWxzZSwgY2FuY2VsYWJsZTogZmFsc2UsIGRldGFpbHM6IHVuZGVmaW5lZH07XG4gICAgICB2YXIgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0N1c3RvbUV2ZW50Jyk7XG4gICAgICBldnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50LCBwYXJhbXMuYnViYmxlcywgcGFyYW1zLmNhbmNlbGFibGUsIHBhcmFtcy5kZXRhaWxzKTtcbiAgICAgIHJldHVybiBldnQ7XG4gICAgfVxuXG4gICAgQ3VzdG9tRXZlbnQucHJvdG90eXBlID0gd2luZG93LkV2ZW50LnByb3RvdHlwZTtcblxuICAgIHdpbmRvdy5DdXN0b21FdmVudCA9IEN1c3RvbUV2ZW50O1xuICB9KSgpO1xufVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2V2ZW50cy1wb2x5ZmlsbC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SILENT_EVENTS = ['onesignal.bell.hovering', 'onesignal.bell.hovered', 'onesignal.bell.button.click', 'onesignal.bell.click', 'onesignal.db.valueretrieved', 'onesignal.db.valueset'];\n\nvar Event = (function () {\n  function Event() {\n    _classCallCheck(this, Event);\n  }\n\n  _createClass(Event, null, [{\n    key: 'trigger',\n    value: function trigger(eventName, data) {\n      if (SILENT_EVENTS.indexOf(eventName) == -1) {\n        if (!_environment2.default.isBrowser()) {\n          _loglevel2.default.debug('%c' + eventName + ':', (0, _utils.getConsoleStyle)('event'), data, '(not triggered in a ServiceWorker environment)');\n          return;\n        } else {\n          var displayData = data;\n          if (typeof IDBCursorWithValue !== \"undefined\" && displayData instanceof IDBCursorWithValue) {\n            displayData = data.value;\n          }\n          if (displayData || displayData === false) {\n            _loglevel2.default.debug('%c' + eventName + ':', (0, _utils.getConsoleStyle)('event'), displayData);\n          } else {\n            _loglevel2.default.debug('%c' + eventName, (0, _utils.getConsoleStyle)('event'));\n          }\n        }\n      }\n      if (_environment2.default.isBrowser()) {\n        var event = new CustomEvent(eventName, {\n          bubbles: true, cancelable: true, details: data\n        });\n        window.dispatchEvent(event);\n      }\n    }\n  }]);\n\n  return Event;\n})();\n\nexports.default = Event;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXZlbnRzLmpzPzlmZjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtBLElBQU0sYUFBYSxHQUFHLENBQ3BCLHlCQUF5QixFQUN6Qix3QkFBd0IsRUFDeEIsNkJBQTZCLEVBQzdCLHNCQUFzQixFQUN0Qiw2QkFBNkIsRUFDN0IsdUJBQXVCLENBQUMsQ0FBQzs7SUFFTixLQUFLO1dBQUwsS0FBSzswQkFBTCxLQUFLOzs7ZUFBTCxLQUFLOzs0QkFDVCxTQUFTLEVBQUUsSUFBSSxFQUFFO0FBQzlCLFVBQUksYUFBYSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRTtBQUMxQyxZQUFJLENBQUMsc0JBQVksU0FBUyxFQUFFLEVBQUU7QUFDNUIsNkJBQUksS0FBSyxRQUFNLFNBQVMsUUFBSyxXQWY1QixlQUFlLEVBZTZCLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxnREFBZ0QsQ0FBQyxDQUFDO0FBQy9HLGlCQUFPO1NBQ1IsTUFBTTtBQUNMLGNBQUksV0FBVyxHQUFHLElBQUksQ0FBQztBQUN2QixjQUFJLE9BQU8sa0JBQWtCLEtBQUssV0FBVyxJQUFJLFdBQVcsWUFBWSxrQkFBa0IsRUFBRTtBQUMxRix1QkFBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7V0FDMUI7QUFDRCxjQUFJLFdBQVcsSUFBSSxXQUFXLEtBQUssS0FBSyxFQUFFO0FBQ3hDLCtCQUFJLEtBQUssUUFBTSxTQUFTLFFBQUssV0F2QjlCLGVBQWUsRUF1QitCLE9BQU8sQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1dBQ3JFLE1BQU07QUFDTCwrQkFBSSxLQUFLLFFBQU0sU0FBUyxFQUFJLFdBekI3QixlQUFlLEVBeUI4QixPQUFPLENBQUMsQ0FBQyxDQUFDO1dBQ3ZEO1NBQ0Y7T0FDRjtBQUNELFVBQUksc0JBQVksU0FBUyxFQUFFLEVBQUU7QUFDM0IsWUFBSSxLQUFLLEdBQUcsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFO0FBQ3JDLGlCQUFPLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUk7U0FDL0MsQ0FBQyxDQUFDO0FBQ0gsY0FBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztPQUM3QjtLQUNGOzs7U0F4QmtCLEtBQUs7OztrQkFBTCxLQUFLIiwiZmlsZSI6IjEyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvZyBmcm9tICdsb2dsZXZlbCc7XG5pbXBvcnQgRW52aXJvbm1lbnQgZnJvbSAnLi9lbnZpcm9ubWVudC5qcyc7XG5pbXBvcnQgeyBnZXRDb25zb2xlU3R5bGUgfSBmcm9tICcuL3V0aWxzLmpzJztcblxuXG5jb25zdCBTSUxFTlRfRVZFTlRTID0gW1xuICAnb25lc2lnbmFsLmJlbGwuaG92ZXJpbmcnLFxuICAnb25lc2lnbmFsLmJlbGwuaG92ZXJlZCcsXG4gICdvbmVzaWduYWwuYmVsbC5idXR0b24uY2xpY2snLFxuICAnb25lc2lnbmFsLmJlbGwuY2xpY2snLFxuICAnb25lc2lnbmFsLmRiLnZhbHVlcmV0cmlldmVkJyxcbiAgJ29uZXNpZ25hbC5kYi52YWx1ZXNldCddO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudCB7XG4gIHN0YXRpYyB0cmlnZ2VyKGV2ZW50TmFtZSwgZGF0YSkge1xuICAgIGlmIChTSUxFTlRfRVZFTlRTLmluZGV4T2YoZXZlbnROYW1lKSA9PSAtMSkge1xuICAgICAgaWYgKCFFbnZpcm9ubWVudC5pc0Jyb3dzZXIoKSkge1xuICAgICAgICBsb2cuZGVidWcoYCVjJHtldmVudE5hbWV9OmAsIGdldENvbnNvbGVTdHlsZSgnZXZlbnQnKSwgZGF0YSwgJyhub3QgdHJpZ2dlcmVkIGluIGEgU2VydmljZVdvcmtlciBlbnZpcm9ubWVudCknKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGV0IGRpc3BsYXlEYXRhID0gZGF0YTtcbiAgICAgICAgaWYgKHR5cGVvZiBJREJDdXJzb3JXaXRoVmFsdWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZGlzcGxheURhdGEgaW5zdGFuY2VvZiBJREJDdXJzb3JXaXRoVmFsdWUpIHtcbiAgICAgICAgICBkaXNwbGF5RGF0YSA9IGRhdGEudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRpc3BsYXlEYXRhIHx8IGRpc3BsYXlEYXRhID09PSBmYWxzZSkge1xuICAgICAgICAgIGxvZy5kZWJ1ZyhgJWMke2V2ZW50TmFtZX06YCwgZ2V0Q29uc29sZVN0eWxlKCdldmVudCcpLCBkaXNwbGF5RGF0YSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbG9nLmRlYnVnKGAlYyR7ZXZlbnROYW1lfWAsIGdldENvbnNvbGVTdHlsZSgnZXZlbnQnKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKEVudmlyb25tZW50LmlzQnJvd3NlcigpKSB7XG4gICAgICB2YXIgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCB7XG4gICAgICAgIGJ1YmJsZXM6IHRydWUsIGNhbmNlbGFibGU6IHRydWUsIGRldGFpbHM6IGRhdGFcbiAgICAgIH0pO1xuICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgIH1cbiAgfVxufVxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2V2ZW50cy5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _bowser = __webpack_require__(14);\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nvar _vars = __webpack_require__(1);\n\nvar _AnimatedElement = __webpack_require__(15);\n\nvar _AnimatedElement2 = _interopRequireDefault(_AnimatedElement);\n\nvar _ActiveAnimatedElement = __webpack_require__(16);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nvar _Launcher = __webpack_require__(17);\n\nvar _Launcher2 = _interopRequireDefault(_Launcher);\n\nvar _Badge = __webpack_require__(18);\n\nvar _Badge2 = _interopRequireDefault(_Badge);\n\nvar _Button = __webpack_require__(19);\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Dialog = __webpack_require__(20);\n\nvar _Dialog2 = _interopRequireDefault(_Dialog);\n\nvar _Message = __webpack_require__(21);\n\nvar _Message2 = _interopRequireDefault(_Message);\n\n__webpack_require__(22);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar logoSvg = __webpack_require__(26);\n\n/*\n {\n size = ['small', 'medium', 'large'],\n position = 'bottom-left', 'bottom-right'],\n offset = '15px 15px',\n theme = ['red-white', 'white-red'],\n inactiveOpacity: 0.75,\n showLauncherAfter: 1000,\n messages: {\n 'unsubscribed': 'Subscribe to notifications',\n 'subscribed': 'You're subscribed to notifications'\n }\n }\n */\n\nvar Bell = (function () {\n  _createClass(Bell, null, [{\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        STATE_CHANGED: 'onesignal.bell.state.changed',\n        LAUNCHER_CLICK: 'onesignal.bell.launcher.click',\n        BELL_CLICK: 'onesignal.bell.launcher.button.click',\n        SUBSCRIBE_CLICK: 'onesignal.bell.launcher.dialog.button.subscribe.click',\n        UNSUBSCRIBE_CLICK: 'onesignal.bell.launcher.dialog.button.unsubscribe.click',\n        HOVERING: 'onesignal.bell.hovering',\n        HOVERED: 'onesignal.bell.hovered'\n      };\n    }\n  }, {\n    key: 'STATES',\n    get: function get() {\n      return {\n        UNINITIALIZED: 'uninitialized',\n        SUBSCRIBED: 'subscribed',\n        UNSUBSCRIBED: 'unsubscribed',\n        BLOCKED: 'blocked'\n      };\n    }\n  }]);\n\n  function Bell() {\n    var _this = this;\n\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var _ref$size = _ref.size;\n    var size = _ref$size === undefined ? 'small' : _ref$size;\n    var _ref$position = _ref.position;\n    var position = _ref$position === undefined ? 'bottom-left' : _ref$position;\n    var _ref$theme = _ref.theme;\n    var theme = _ref$theme === undefined ? 'default' : _ref$theme;\n    var _ref$showLauncherAfte = _ref.showLauncherAfter;\n    var showLauncherAfter = _ref$showLauncherAfte === undefined ? 10 : _ref$showLauncherAfte;\n    var _ref$showBadgeAfter = _ref.showBadgeAfter;\n    var showBadgeAfter = _ref$showBadgeAfter === undefined ? 300 : _ref$showBadgeAfter;\n    var _ref$text = _ref.text;\n    var text = _ref$text === undefined ? {\n      'tip.state.unsubscribed': 'Subscribe to notifications',\n      'tip.state.subscribed': \"You're subscribed to notifications\",\n      'tip.state.blocked': \"You've blocked notifications\",\n      'tip.action.subscribed': \"Thanks for subscribing!\",\n      'tip.action.unsubscribed': \"You won't receive notifications again\",\n      'dialog.main.title': 'Manage Site Notifications',\n      'dialog.main.button.subscribe': 'SUBSCRIBE',\n      'dialog.main.button.unsubscribe': 'UNSUBSCRIBE',\n      'dialog.blocked.title': 'Unblock Notifications',\n      'dialog.blocked.message': \"Follow these instructions to allow notifications:\"\n    } : _ref$text;\n    var _ref$prenotify = _ref.prenotify;\n    var prenotify = _ref$prenotify === undefined ? true : _ref$prenotify;\n\n    _classCallCheck(this, Bell);\n\n    this.options = {\n      size: size,\n      position: position,\n      theme: theme,\n      showLauncherAfter: showLauncherAfter,\n      showBadgeAfter: showBadgeAfter,\n      text: text,\n      prenotify: prenotify\n    };\n    if (['small', 'medium', 'large'].indexOf(this.options.size) < 0) throw new Error('Invalid size ' + this.options.size + ' for bell. Choose among \\'small\\', \\'medium\\', or \\'large\\'.');\n    if (['bottom-left', 'bottom-right'].indexOf(this.options.position) < 0) throw new Error('Invalid position ' + this.options.position + ' for bell. Choose either \\'bottom-left\\', or \\'bottom-right\\'.');\n    if (['default', 'inverse'].indexOf(this.options.theme) < 0) throw new Error('Invalid theme ' + this.options.theme + ' for bell. Choose either \\'default\\', or \\'inverse\\'.');\n    if (this.options.showLauncherAfter < 0) throw new Error('Invalid delay duration of ' + this.options.showLauncherAfter + ' for showing the bell. Choose a value above 0.');\n    if (this.options.showBadgeAfter < 0) throw new Error('Invalid delay duration of ' + this.options.showBadgeAfter + ' for showing the bell\\'s badge. Choose a value above 0.');\n    this.size = this.options.size;\n    this.position = this.options.position;\n    this.text = this.options.text;\n    this.messages = {};\n    this.messages.queued = [];\n    if (!this.text['tip.state.unsubscribed']) this.text['tip.state.unsubscribed'] = 'Subscribe to notifications';\n    if (!this.text['tip.state.subscribed']) this.text['tip.state.subscribed'] = \"You're subscribed to notifications\";\n    if (!this.text['tip.state.blocked']) this.text['tip.state.blocked'] = \"You've blocked notifications\";\n    if (!this.text['tip.action.subscribed']) this.text['tip.action.subscribed'] = \"Thanks for subscribing!\";\n    if (!this.text['tip.action.unsubscribed']) this.text['tip.action.unsubscribed'] = \"You won't receive notifications again\";\n    if (!this.text['dialog.main.title']) this.text['dialog.main.title'] = 'Manage Site Notifications';\n    if (!this.text['dialog.main.button.subscribe']) this.text['dialog.main.button.subscribe'] = 'SUBSCRIBE';\n    if (!this.text['dialog.main.button.unsubscribe']) this.text['dialog.main.button.unsubscribe'] = 'UNSUBSCRIBE';\n    if (!this.text['dialog.blocked.title']) this.text['dialog.blocked.title'] = 'Unblock Notifications';\n    this.messages[Bell.STATES.UNSUBSCRIBED] = this.text['tip.state.unsubscribed'];\n    this.messages[Bell.STATES.SUBSCRIBED] = this.text['tip.state.subscribed'];\n    this.messages[Bell.STATES.BLOCKED] = this.text['tip.state.blocked'];\n    this.state = Bell.STATES.UNINITIALIZED;\n\n    // Install event hooks\n    window.addEventListener('focus', function (event) {\n      // Checks if permission changed everytime a user focuses on the page, since a user has to click out of and back on the page to check permissions\n      OneSignal._checkTrigger_nativePermissionChanged();\n    });\n\n    window.addEventListener(Bell.EVENTS.LAUNCHER_CLICK, function (event) {\n      _this.launcher.activateIfInactive().then(function () {\n        return _this.message.hide();\n      }).then(function () {\n        if (_this.unsubscribed) {\n          var setSubscriptionState = _limitStore2.default.getLast('setsubscription.value');\n          if (setSubscriptionState === false) {\n            // The user manually called setSubscription(false), but the user is actually subscribed\n            _this.showDialogProcedure();\n          } else {\n            // The user is actually subscribed, register him for notifications\n            OneSignal.registerForPushNotifications();\n          }\n        } else if (_this.subscribed) {\n          _this.showDialogProcedure();\n        } else if (_this.blocked) {\n          _this.showDialogProcedure();\n        }\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      });\n    });\n\n    window.addEventListener(Bell.EVENTS.HOVERING, function () {\n      _this.launcher.activateIfInactive().then(function () {\n        // If there's already a message being force shown, do not override\n        if (_this.message.shown || _this.dialog.shown) {\n          console.debug('There is already a message being displayed; wait until it is hidden again.');\n          return;\n        }\n\n        if (_this.messages.queued.length > 0) {\n          return _this.message.dequeue().then(function (msg) {\n            return _this.message.content = msg;\n          });\n        } else {\n          return Promise.resolve(function () {\n            return _this.message.content = _this.messages[_this.state];\n          });\n        }\n      }).then(function () {\n        return _this.message.show();\n      });\n    });\n\n    window.addEventListener(Bell.EVENTS.HOVERED, function () {\n      if (_this.message.shown) {\n        _this.message.hide().then(function () {\n          _this.message.content = _this.messages[_this.state];\n          if (_this.launcher.wasInactive && !_this.dialog.shown) {\n            _this.launcher.inactivate();\n            _this.launcher.wasInactive = null;\n          }\n        });\n      }\n    });\n\n    window.addEventListener(OneSignal.EVENTS.SUBSCRIPTION_CHANGED, function (e) {\n      var isSubscribed = e.detail;\n      _this.setState(isSubscribed ? Bell.STATES.SUBSCRIBED : Bell.STATES.UNSUBSCRIBED);\n    });\n\n    window.addEventListener(OneSignal.EVENTS.NATIVE_PROMPT_PERMISSIONCHANGED, function (from, to) {\n      _this.updateState();\n    });\n\n    window.addEventListener(OneSignal.EVENTS.WELCOME_NOTIFICATION_SENT, function (e) {\n      _this.displayMessage(_this.text['tip.action.subscribed'], 2500).then(function () {\n        _this.setInactive(true);\n      }).catch(function (e) {\n        _loglevel2.default.error(e);\n      });\n    });\n\n    this.updateState();\n  }\n\n  _createClass(Bell, [{\n    key: 'showDialogProcedure',\n    value: function showDialogProcedure() {\n      var _this2 = this;\n\n      if (!this.isDialogOpened()) {\n        this.showDialog().then(function (e) {\n          (0, _utils.once)(document, 'click', function (e, destroyEventListener) {\n            var wasDialogClicked = _this2.launcherDialog.contains(e.target);\n            if (wasDialogClicked) {} else {\n              destroyEventListener();\n              _this2.hideDialog().then(function (e) {\n                if (_this2.wasInactive) {\n                  _this2.setInactive(true);\n                  _this2.wasInactive = undefined;\n                }\n              }).catch(function (e) {\n                _loglevel2.default.error(e);\n              });\n            }\n          }, true);\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n        });\n      }\n    }\n  }, {\n    key: 'create',\n    value: function create() {\n      var _this3 = this;\n\n      if (!(0, _utils.isPushNotificationsSupported)()) return;\n\n      // Remove any existing bell\n      if (this.container) {\n        (0, _utils.removeDomElement)('onesignal-bell-container');\n      }\n\n      window.addDomElement = _utils.addDomElement;\n      // Insert the bell container\n      (0, _utils.addDomElement)('body', 'beforeend', '<div id=\"onesignal-bell-container\" class=\"onesignal-bell-container onesignal-reset\"></div>');\n      // Insert the bell launcher\n      (0, _utils.addDomElement)(this.container, 'beforeend', '<div id=\"onesignal-bell-launcher\" class=\"onesignal-bell-launcher\"></div>');\n      // Insert the bell launcher button\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-button\"></div>');\n      // Insert the bell launcher badge\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-badge\"></div>');\n      // Insert the bell launcher message\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message\"></div>');\n      (0, _utils.addDomElement)(this.message.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-message-body\"></div>');\n      // Insert the bell launcher dialog\n      (0, _utils.addDomElement)(this.launcher.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog\"></div>');\n      (0, _utils.addDomElement)(this.dialog.selector, 'beforeend', '<div class=\"onesignal-bell-launcher-dialog-body\"></div>');\n\n      // Install events\n\n      // Add visual elements\n      (0, _utils.addDomElement)(this.button.selector, 'beforeEnd', logoSvg);\n\n      // Add default classes\n      this.launcher.resize(this.options.size);\n\n      if (this.options.position === 'bottom-left') {\n        (0, _utils.addCssClass)(this.container, 'onesignal-bell-container-bottom-left');\n        (0, _utils.addCssClass)(this.launcher.selector, 'onesignal-bell-launcher-bottom-left');\n      } else if (this.options.position === 'bottom-right') {\n        (0, _utils.addCssClass)(this.container, 'onesignal-bell-container-bottom-right');\n        (0, _utils.addCssClass)(this.launcher.selector, 'onesignal-bell-launcher-bottom-right');\n      } else {\n        throw new Error('Invalid OneSignal bell position ' + this.options.position);\n      }\n\n      if (this.options.theme === 'default') {\n        (0, _utils.addCssClass)(this.launcher.selector, 'onesignal-bell-launcher-theme-default');\n      } else if (this.options.theme === 'inverse') {\n        (0, _utils.addCssClass)(this.launcher.selector, 'onesignal-bell-launcher-theme-inverse');\n      } else {\n        throw new Error('Invalid OneSignal bell theme ' + this.options.theme);\n      }\n\n      OneSignal.isPushNotificationsEnabled(function (pushEnabled) {\n        pushEnabled ? _this3.launcher.inactivate() : (0, _utils.nothing)().then(function () {\n          return (0, _utils.delay)(_this3.options.showLauncherAfter);\n        }).then(function () {\n          return _this3.launcher.show();\n        }).then(function () {\n          return (0, _utils.delay)(_this3.options.showBadgeAfter);\n        }).then(function () {\n          if (_this3.options.prenotify && !pushEnabled && OneSignal._isNewVisitor) {\n            return _this3.message.enqueue('Click to subscribe to notifications').then(function () {\n              return _this3.badge.show();\n            });\n          } else return (0, _utils.nothing)();\n        }).then(function () {\n          return _this3.initialized = true;\n        }).catch(function (e) {\n          return _loglevel2.default.error(e);\n        });\n      });\n    }\n  }, {\n    key: '_getCurrentSetSubscriptionState',\n    value: function _getCurrentSetSubscriptionState() {\n      var setSubscriptionState = _limitStore2.default.get('setsubscription.value');\n      var currentSetSubscription = setSubscriptionState[setSubscriptionState.length - 1];\n      return currentSetSubscription;\n    }\n\n    /**\n     * Updates the current state to the correct new current state. Returns a promise.\n     */\n\n  }, {\n    key: 'updateState',\n    value: function updateState() {\n      var _this4 = this;\n\n      OneSignal.isPushNotificationsEnabled(function (isEnabled) {\n        _this4.setState(isEnabled ? Bell.STATES.SUBSCRIBED : Bell.STATES.UNSUBSCRIBED);\n        if (_limitStore2.default.getLast('notification.permission') === 'denied') {\n          _this4.setState(Bell.STATES.BLOCKED);\n        }\n      });\n    }\n\n    /**\n     * Updates the current state to the specified new state.\n     * @param newState One of ['subscribed', 'unsubscribed'].\n     */\n\n  }, {\n    key: 'setState',\n    value: function setState(newState) {\n      var _this5 = this;\n\n      console.trace('%cCalled setState().', (0, _utils.getConsoleStyle)('bold'));\n      var lastState = this.state;\n      this.state = newState;\n      if (lastState !== newState) {\n        _events2.default.trigger(Bell.EVENTS.STATE_CHANGED, { from: lastState, to: newState });\n        // Update anything that should be changed here in the new state\n      }\n\n      // Update anything that should be reset to the same state\n      // Unless a display message is being set\n      this.message.waitUntilHidden().then(function () {\n        return _this5.message.content = _this5.messages[newState];\n      });\n    }\n  }, {\n    key: 'container',\n    get: function get() {\n      return document.querySelector('#onesignal-bell-container');\n    }\n  }, {\n    key: 'launcher',\n    get: function get() {\n      if (!this._launcher) this._launcher = new _Launcher2.default(this);\n      return this._launcher;\n    }\n  }, {\n    key: 'button',\n    get: function get() {\n      if (!this._button) this._button = new _Button2.default(this);\n      return this._button;\n    }\n  }, {\n    key: 'badge',\n    get: function get() {\n      if (!this._badge) this._badge = new _Badge2.default(this);\n      return this._badge;\n    }\n  }, {\n    key: 'message',\n    get: function get() {\n      if (!this._message) this._message = new _Message2.default(this);\n      return this._message;\n    }\n  }, {\n    key: 'dialog',\n    get: function get() {\n      if (!this._dialog) this._dialog = new _Dialog2.default(this);\n      return this._dialog;\n    }\n  }, {\n    key: 'subscribed',\n    get: function get() {\n      return this.state === Bell.STATES.SUBSCRIBED;\n    }\n  }, {\n    key: 'unsubscribed',\n    get: function get() {\n      return this.state === Bell.STATES.UNSUBSCRIBED;\n    }\n  }, {\n    key: 'blocked',\n    get: function get() {\n      return this.state === Bell.STATES.BLOCKED;\n    }\n  }]);\n\n  return Bell;\n})();\n\nexports.default = Bell;//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  * Bowser - a browser detector\n  * https://github.com/ded/bowser\n  * MIT License | (c) Dustin Diaz 2015\n  */\n\n!function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else this[name] = definition()\n}('bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , chromeBook = /CrOS/.test(ua)\n      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , result\n\n    if (/opera|opr/i.test(ua)) {\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/windows phone/i.test(ua)) {\n      result = {\n        name: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeBook) {\n      result = {\n        name: 'Chrome'\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/chrome.+? edge/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (/sailfish/i.test(ua)) {\n      result = {\n        name: 'Sailfish'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n      }\n    }\n    else if (/silk/i.test(ua)) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n      , version: versionIdentifier\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/(web|hpw)os/i.test(ua)) {\n      result = {\n        name: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (/tizen/i.test(ua)) {\n      result = {\n        name: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/safari/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      , version: versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      result.name = result.name || \"Webkit\"\n      result.webkit = t\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.msedge && (android || result.silk)) {\n      result.android = t\n    } else if (iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = osVersion.split('.')[0];\n    if (tablet || iosdevice == 'ipad' || (android && (osMajorVersion == 3 || (osMajorVersion == 4 && !mobile))) || result.silk) {\n      result.tablet = t\n    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || result.blackberry || result.webos || result.bada) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n        (result.chrome && result.version >= 20) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  return bowser\n});\n//@ sourceMappingURL=data:application/json;base64,")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnimatedElement = (function () {\n\n  /**\n   * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n   * @param selector {string} The CSS selector of the element.\n   * @param showClass {string} The CSS class name to add to show the element.\n   * @param hideClass {string} The CSS class name to remove to hide the element.\n   * @param state {string} The current state of the element, defaults to 'shown'.\n   * @param targetTransitionEvent {string} A single property (e.g. 'transform' or 'opacity') to look for on transitionend of show() and hide() to know the transition is complete.\n   * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n   */\n\n  function AnimatedElement(selector, showClass, hideClass) {\n    var state = arguments.length <= 3 || arguments[3] === undefined ? 'shown' : arguments[3];\n    var targetTransitionEvent = arguments.length <= 4 || arguments[4] === undefined ? 'opacity' : arguments[4];\n    var nestedContentSelector = arguments.length <= 5 || arguments[5] === undefined ? null : arguments[5];\n\n    _classCallCheck(this, AnimatedElement);\n\n    this.selector = selector;\n    this.showClass = showClass;\n    this.hideClass = hideClass;\n    this.state = state;\n    this.targetTransitionEvent = targetTransitionEvent;\n    this.nestedContentSelector = nestedContentSelector;\n  }\n\n  /**\n   * Asynchronously shows an element by applying its {showClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n\n  _createClass(AnimatedElement, [{\n    key: 'show',\n    value: function show() {\n      var _this = this;\n\n      if (this.shown) return Promise.resolve(this);else return new Promise(function (resolve) {\n        _this.state = 'showing';\n        _events2.default.trigger(AnimatedElement.EVENTS.SHOWING, _this);\n        if (_this.hideClass) (0, _utils.removeCssClass)(_this.element, _this.hideClass);\n        if (_this.showClass) (0, _utils.addCssClass)(_this.element, _this.showClass);\n        (0, _utils.once)(_this.element, 'transitionend', function (event, destroyListenerFn) {\n          if (event.target === _this.element && event.propertyName === _this.targetTransitionEvent) {\n            // Uninstall the event listener for transitionend\n            destroyListenerFn();\n            _this.state = 'shown';\n            _events2.default.trigger(AnimatedElement.EVENTS.SHOWN, _this);\n            return resolve(_this);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously hides an element by applying its {hideClass} CSS class.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      var _this2 = this;\n\n      if (this.hidden) return Promise.resolve(this);else return new Promise(function (resolve) {\n        _this2.state = 'hiding';\n        _events2.default.trigger(AnimatedElement.EVENTS.HIDING, _this2);\n        if (_this2.showClass) (0, _utils.removeCssClass)(_this2.element, _this2.showClass);\n        if (_this2.hideClass) (0, _utils.addCssClass)(_this2.element, _this2.hideClass);\n        (0, _utils.once)(_this2.element, 'transitionend', function (event, destroyListenerFn) {\n          if (event.target === _this2.element && event.propertyName === _this2.targetTransitionEvent) {\n            // Uninstall the event listener for transitionend\n            destroyListenerFn();\n            _this2.state = 'hidden';\n            _events2.default.trigger(AnimatedElement.EVENTS.HIDDEN, _this2);\n            return resolve(_this2);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being shown.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilShown',\n    value: function waitUntilShown() {\n      var _this3 = this;\n\n      if (this.state === 'shown') return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, AnimatedElement.EVENTS.SHOWN, function (event, destroyListenerFn) {\n          if (event.details === _this3) {\n            destroyListenerFn();\n            return resolve(_this3);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being hidden.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilHidden',\n    value: function waitUntilHidden() {\n      var _this4 = this;\n\n      if (this.state === 'hidden') return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, AnimatedElement.EVENTS.HIDDEN, function (event, destroyListenerFn) {\n          if (event.details === _this4) {\n            destroyListenerFn();\n            return resolve(_this4);\n          }\n        }, true);\n      });\n    }\n  }, {\n    key: 'content',\n\n    /**\n     * Returns the native element's innerHTML property.\n     * @returns {string} Returns the native element's innerHTML property.\n     */\n    get: function get() {\n      if (this.nestedContentSelector) return this.element.querySelector(this.nestedContentSelector).innerHTML;else return this.element.innerHTML;\n    }\n\n    /**\n     * Sets the native element's innerHTML property.\n     * @param value {string} The HTML to set to the element.\n     */\n    ,\n    set: function set(value) {\n      if (this.nestedContentSelector) this.element.querySelector(this.nestedContentSelector).innerHTML = value;else this.element.innerHTML = value;\n    }\n\n    /**\n     * Returns the native {Element} via document.querySelector().\n     * @returns {Element} Returns the native {Element} via document.querySelector().\n     */\n\n  }, {\n    key: 'element',\n    get: function get() {\n      return document.querySelector(this.selector);\n    }\n\n    /* States an element can be in */\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to being shown.\n     */\n\n  }, {\n    key: 'showing',\n    get: function get() {\n      return this.state === 'showing';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already shown.\n     */\n\n  }, {\n    key: 'shown',\n    get: function get() {\n      return this.state === 'shown';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to hiding.\n     */\n\n  }, {\n    key: 'hiding',\n    get: function get() {\n      return this.state === 'hiding';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already hidden.\n     */\n\n  }, {\n    key: 'hidden',\n    get: function get() {\n      return this.state === 'hidden';\n    }\n  }], [{\n    key: 'EVENTS',\n    get: function get() {\n      return {\n        SHOWING: 'onesignal.bell.animatedelement.showing',\n        SHOWN: 'onesignal.bell.animatedelement.shown',\n        HIDING: 'onesignal.bell.animatedelement.hiding',\n        HIDDEN: 'onesignal.bell.animatedelement.hidden'\n      };\n    }\n  }]);\n\n  return AnimatedElement;\n})();\n\nexports.default = AnimatedElement;//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement2 = __webpack_require__(15);\n\nvar _AnimatedElement3 = _interopRequireDefault(_AnimatedElement2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ActiveAnimatedElement = (function (_AnimatedElement) {\n  _inherits(ActiveAnimatedElement, _AnimatedElement);\n\n  /**\n   * Abstracts common DOM operations like hiding and showing transitionable elements into chainable promises.\n   * @param selector {string} The CSS selector of the element.\n   * @param showClass {string} The CSS class name to add to show the element.\n   * @param hideClass {string} The CSS class name to remove to hide the element.\n   * @param activeClass {string} The CSS class name to add to activate the element.\n   * @param inactiveClass {string} The CSS class name to remove to inactivate the element.\n   * @param state {string} The current state of the element, defaults to 'shown'.\n   * @param activeState {string} The current state of the element, defaults to 'active'.\n   * @param targetTransitionEvent {string} A single property (e.g. 'transform' or 'opacity') to look for on transitionend of show() and hide() to know the transition is complete.\n   * @param nestedContentSelector {string} The CSS selector targeting the nested element within the current element. This nested element will be used for content getters and setters.\n   */\n\n  function ActiveAnimatedElement(selector, showClass, hideClass, activeClass, inactiveClass) {\n    var state = arguments.length <= 5 || arguments[5] === undefined ? 'shown' : arguments[5];\n    var activeState = arguments.length <= 6 || arguments[6] === undefined ? 'active' : arguments[6];\n    var targetTransitionEvent = arguments.length <= 7 || arguments[7] === undefined ? 'opacity' : arguments[7];\n    var nestedContentSelector = arguments.length <= 8 || arguments[8] === undefined ? null : arguments[8];\n\n    _classCallCheck(this, ActiveAnimatedElement);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ActiveAnimatedElement).call(this, selector, showClass, hideClass, state, targetTransitionEvent, nestedContentSelector));\n\n    _this.activeClass = activeClass;\n    _this.inactiveClass = inactiveClass;\n    _this.activeState = activeState;\n    return _this;\n  }\n\n  /**\n   * Asynchronously activates an element by applying its {activeClass} CSS class.\n   * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n   */\n\n  _createClass(ActiveAnimatedElement, [{\n    key: 'activate',\n    value: function activate() {\n      var _this2 = this;\n\n      if (this.active) return Promise.resolve(this);else return new Promise(function (resolve) {\n        _this2.activeState = 'activating';\n        _events2.default.trigger(ActiveAnimatedElement.EVENTS.ACTIVATING, _this2);\n        if (_this2.inactiveClass) (0, _utils.removeCssClass)(_this2.element, _this2.inactiveClass);\n        if (_this2.activeClass) (0, _utils.addCssClass)(_this2.element, _this2.activeClass);\n        (0, _utils.once)(_this2.element, 'transitionend', function (event, destroyListenerFn) {\n          if (event.target === _this2.element && event.propertyName === _this2.targetTransitionEvent) {\n            // Uninstall the event listener for transitionend\n            destroyListenerFn();\n            _this2.activeState = 'active';\n            _events2.default.trigger(_AnimatedElement3.default.EVENTS.ACTIVE, _this2);\n            return resolve(_this2);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously activates an element by applying its {activeClass} CSS class.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'inactivate',\n    value: function inactivate() {\n      var _this3 = this;\n\n      if (this.inactive) return Promise.resolve(this);else return new Promise(function (resolve) {\n        _this3.activeState = 'inactivating';\n        _events2.default.trigger(ActiveAnimatedElement.EVENTS.INACTIVATING, _this3);\n        if (_this3.activeClass) (0, _utils.removeCssClass)(_this3.element, _this3.activeClass);\n        if (_this3.inactiveClass) (0, _utils.addCssClass)(_this3.element, _this3.inactiveClass);\n        (0, _utils.once)(_this3.element, 'transitionend', function (event, destroyListenerFn) {\n          if (event.target === _this3.element && event.propertyName === _this3.targetTransitionEvent) {\n            // Uninstall the event listener for transitionend\n            destroyListenerFn();\n            _this3.activeState = 'inactive';\n            _events2.default.trigger(_AnimatedElement3.default.EVENTS.INACTIVE, _this3);\n            return resolve(_this3);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being active.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilActive',\n    value: function waitUntilActive() {\n      var _this4 = this;\n\n      if (this.active) return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, _AnimatedElement3.default.EVENTS.ACTIVE, function (event, destroyListenerFn) {\n          if (event.details === _this4) {\n            destroyListenerFn();\n            return resolve(_this4);\n          }\n        }, true);\n      });\n    }\n\n    /**\n     * Asynchronously waits for an element to finish transitioning to being inactive.\n     * @returns {Promise} Returns a promise that is resolved with this element when it has completed its transition.\n     */\n\n  }, {\n    key: 'waitUntilInactive',\n    value: function waitUntilInactive() {\n      var _this5 = this;\n\n      if (this.inactive) return Promise.resolve(this);else return new Promise(function (resolve) {\n        (0, _utils.once)(window, _AnimatedElement3.default.EVENTS.INACTIVE, function (event, destroyListenerFn) {\n          if (event.details === _this5) {\n            destroyListenerFn();\n            return resolve(_this5);\n          }\n        }, true);\n      });\n    }\n  }, {\n    key: 'activating',\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to being activated.\n     */\n    get: function get() {\n      return this.activeState === 'activating';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already active.\n     */\n\n  }, {\n    key: 'active',\n    get: function get() {\n      return this.activeState === 'active';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be transitioning to inactive.\n     */\n\n  }, {\n    key: 'inactivating',\n    get: function get() {\n      return this.activeState === 'inactivating';\n    }\n\n    /**\n     * Synchronously returns the last known state of the element.\n     * @returns {boolean} Returns true if the element was last known to be already inactive.\n     */\n\n  }, {\n    key: 'inactive',\n    get: function get() {\n      return this.activeState === 'inactive';\n    }\n  }], [{\n    key: 'EVENTS',\n    get: function get() {\n      return Object.assign({}, _AnimatedElement3.default.EVENTS, {\n        ACTIVATING: 'onesignal.bell.activeanimatedelement.activating',\n        ACTIVE: 'onesignal.bell.activeanimatedelement.active',\n        INACTIVATING: 'onesignal.bell.activeanimatedelement.inactivating',\n        INACTIVE: 'onesignal.bell.activeanimatedelement.inactive'\n      });\n    }\n  }]);\n\n  return ActiveAnimatedElement;\n})(_AnimatedElement3.default);\n\nexports.default = ActiveAnimatedElement;//@ sourceMappingURL=data:application/json;base64,")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement = __webpack_require__(15);\n\nvar _AnimatedElement2 = _interopRequireDefault(_AnimatedElement);\n\nvar _ActiveAnimatedElement = __webpack_require__(16);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Launcher = (function (_ActiveAnimatedElemen) {\n  _inherits(Launcher, _ActiveAnimatedElemen);\n\n  function Launcher(bell) {\n    _classCallCheck(this, Launcher);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Launcher).call(this, '.onesignal-bell-launcher', 'onesignal-bell-launcher-active', null, null, 'onesignal-bell-launcher-inactive', 'hidden', 'active'));\n\n    _this.bell = bell;\n    _this.wasInactive = false;\n    return _this;\n  }\n\n  _createClass(Launcher, [{\n    key: 'resize',\n    value: function resize(size) {\n      var _this2 = this;\n\n      (0, _utils.removeCssClass)(this.element, 'onesignal-bell-launcher-sm');\n      (0, _utils.removeCssClass)(this.element, 'onesignal-bell-launcher-md');\n      (0, _utils.removeCssClass)(this.element, 'onesignal-bell-launcher-lg');\n      if (size === 'small') {\n        (0, _utils.addCssClass)(this.element, 'onesignal-bell-launcher-sm');\n      } else if (size === 'medium') {\n        (0, _utils.addCssClass)(this.element, 'onesignal-bell-launcher-md');\n      } else if (size === 'large') {\n        (0, _utils.addCssClass)(this.element, 'onesignal-bell-launcher-lg');\n      } else {\n        throw new Error('Invalid OneSignal bell size ' + size);\n      }\n      return new Promise(function (resolve) {\n        // Once the launcher has finished shrinking down\n        (0, _utils.once)(_this2.element, 'transitionend', function (event, destroyListenerFn) {\n          if (event.target === _this2.element && event.propertyName === _this2.targetTransitionEvent) {\n            // Uninstall the event listener for transitionend\n            destroyListenerFn();\n            return resolve(_this2);\n          }\n        }, true);\n      });\n    }\n  }, {\n    key: 'activateIfInactive',\n    value: function activateIfInactive() {\n      if (this.inactive) {\n        this.wasInactive = true;\n        return this.activate();\n      } else return (0, _utils.nothing)();\n    }\n  }, {\n    key: 'inactivateIfWasInactive',\n    value: function inactivateIfWasInactive() {\n      if (this.wasInactive) {\n        this.wasInactive = false;\n        return this.inactivate();\n      } else return (0, _utils.nothing)();\n    }\n  }, {\n    key: 'inactivate',\n    value: function inactivate() {\n      var _this3 = this;\n\n      return this.bell.message.hide().then(function () {\n        if (_this3.bell.badge.content.length > 0) {\n          return _this3.bell.badge.hide().then(function () {\n            return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'inactivate', _this3).call(_this3), _this3.resize('small')]);\n          }).then(function () {\n            return _this3.bell.badge.show();\n          }).catch(function (e) {\n            return _loglevel2.default.error(e);\n          });\n        } else {\n          return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'inactivate', _this3).call(_this3), _this3.resize('small')]);\n        }\n      });\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      var _this4 = this;\n\n      if (this.bell.badge.content.length > 0) {\n        return this.bell.badge.hide().then(function () {\n          return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'activate', _this4).call(_this4), _this4.resize(_this4.bell.options.size)]);\n        }).then(function () {\n          return _this4.bell.badge.show();\n        }).catch(function (e) {\n          return _loglevel2.default.error(e);\n        });\n      } else {\n        return Promise.all([_get(Object.getPrototypeOf(Launcher.prototype), 'activate', this).call(this), this.resize(this.bell.options.size)]);\n      }\n    }\n  }]);\n\n  return Launcher;\n})(_ActiveAnimatedElement2.default);\n\nexports.default = Launcher;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9MYXVuY2hlci5qcz9iYTNjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQU9xQixRQUFRO1lBQVIsUUFBUTs7QUFFM0IsV0FGbUIsUUFBUSxDQUVmLElBQUksRUFBRTswQkFGQyxRQUFROzt1RUFBUixRQUFRLGFBR25CLDBCQUEwQixFQUFFLGdDQUFnQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsa0NBQWtDLEVBQUUsUUFBUSxFQUFFLFFBQVE7O0FBRXRJLFVBQUssSUFBSSxHQUFHLElBQUksQ0FBQztBQUNqQixVQUFLLFdBQVcsR0FBRyxLQUFLLENBQUM7O0dBQzFCOztlQVBrQixRQUFROzsyQkFTcEIsSUFBSSxFQUFFOzs7QUFDWCxpQkFqQjhKLGNBQWMsRUFpQjdKLElBQUksQ0FBQyxPQUFPLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztBQUMzRCxpQkFsQjhKLGNBQWMsRUFrQjdKLElBQUksQ0FBQyxPQUFPLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztBQUMzRCxpQkFuQjhKLGNBQWMsRUFtQjdKLElBQUksQ0FBQyxPQUFPLEVBQUUsNEJBQTRCLENBQUMsQ0FBQztBQUMzRCxVQUFJLElBQUksS0FBSyxPQUFPLEVBQUU7QUFDcEIsbUJBckIrSSxXQUFXLEVBcUI5SSxJQUFJLENBQUMsT0FBTyxFQUFFLDRCQUE0QixDQUFDO09BQ3hELE1BQ0ksSUFBSSxJQUFJLEtBQUssUUFBUSxFQUFFO0FBQzFCLG1CQXhCK0ksV0FBVyxFQXdCOUksSUFBSSxDQUFDLE9BQU8sRUFBRSw0QkFBNEIsQ0FBQztPQUN4RCxNQUNJLElBQUksSUFBSSxLQUFLLE9BQU8sRUFBRTtBQUN6QixtQkEzQitJLFdBQVcsRUEyQjlJLElBQUksQ0FBQyxPQUFPLEVBQUUsNEJBQTRCLENBQUM7T0FDeEQsTUFDSTtBQUNILGNBQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLEdBQUcsSUFBSSxDQUFDLENBQUM7T0FDeEQ7QUFDRCxhQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFLOztBQUU5QixtQkFsQzRLLElBQUksRUFrQzNLLE9BQUssT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFDLEtBQUssRUFBRSxpQkFBaUIsRUFBSztBQUNoRSxjQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssT0FBSyxPQUFPLElBQy9CLEtBQUssQ0FBQyxZQUFZLEtBQUssT0FBSyxxQkFBcUIsRUFBRTs7QUFFbkQsNkJBQWlCLEVBQUUsQ0FBQztBQUNwQixtQkFBTyxPQUFPLFFBQU0sQ0FBQztXQUN0QjtTQUNGLEVBQUUsSUFBSSxDQUFDLENBQUM7T0FDVixDQUFDLENBQUM7S0FDSjs7O3lDQUVvQjtBQUNuQixVQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7QUFDakIsWUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7QUFDeEIsZUFBTyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7T0FDeEIsTUFDSSxPQUFPLFdBbER3SyxPQUFPLEdBa0R0SyxDQUFDO0tBQ3ZCOzs7OENBRXlCO0FBQ3hCLFVBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtBQUNwQixZQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztBQUN6QixlQUFPLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztPQUMxQixNQUNJLE9BQU8sV0ExRHdLLE9BQU8sR0EwRHRLLENBQUM7S0FDdkI7OztpQ0FFWTs7O0FBQ1gsYUFBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FDNUIsSUFBSSxDQUFDLFlBQU07QUFDVixZQUFJLE9BQUssSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtBQUN0QyxpQkFBTyxPQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQzFCLElBQUksQ0FBQzttQkFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLDRCQTNEZixRQUFRLGlEQTJENEIsT0FBSyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztXQUFBLENBQUMsQ0FDbkUsSUFBSSxDQUFDO21CQUFNLE9BQUssSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUU7V0FBQSxDQUFDLENBQ2xDLEtBQUssQ0FBQyxVQUFDLENBQUM7bUJBQUssbUJBQUksS0FBSyxDQUFDLENBQUMsQ0FBQztXQUFBLENBQUM7U0FDOUIsTUFDSTtBQUNILGlCQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBaEVSLFFBQVEsaURBZ0VxQixPQUFLLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDaEU7T0FDRixDQUFDLENBQUM7S0FDTjs7OytCQUVVOzs7QUFDVCxVQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3RDLGVBQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQzFCLElBQUksQ0FBQztpQkFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLDRCQXhFWCxRQUFRLCtDQXdFc0IsT0FBSyxNQUFNLENBQUMsT0FBSyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FBQSxDQUFDLENBQ2hGLElBQUksQ0FBQztpQkFBTSxPQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFO1NBQUEsQ0FBQyxDQUNsQyxLQUFLLENBQUMsVUFBQyxDQUFDO2lCQUFLLG1CQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FBQSxDQUFDO09BQzlCLE1BQ0k7QUFDSCxlQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBN0VKLFFBQVEsMkNBNkVlLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO09BQzdFO0tBQ0Y7OztTQS9Fa0IsUUFBUTs7O2tCQUFSLFFBQVEiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1B1c2hOb3RpZmljYXRpb25zU3VwcG9ydGVkLCBpc0Jyb3dzZXJTYWZhcmksIGlzU3VwcG9ydGVkRmlyZUZveCwgaXNCcm93c2VyRmlyZWZveCwgZ2V0RmlyZWZveFZlcnNpb24sIGlzU3VwcG9ydGVkU2FmYXJpLCBnZXRDb25zb2xlU3R5bGUsIGFkZENzc0NsYXNzLCByZW1vdmVDc3NDbGFzcywgb25jZSwgbm90aGluZyB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCBsb2cgZnJvbSAnbG9nbGV2ZWwnO1xuaW1wb3J0IEV2ZW50IGZyb20gJy4uL2V2ZW50cy5qcyc7XG5pbXBvcnQgQW5pbWF0ZWRFbGVtZW50IGZyb20gJy4vQW5pbWF0ZWRFbGVtZW50LmpzJztcbmltcG9ydCBBY3RpdmVBbmltYXRlZEVsZW1lbnQgZnJvbSAnLi9BY3RpdmVBbmltYXRlZEVsZW1lbnQuanMnO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExhdW5jaGVyIGV4dGVuZHMgQWN0aXZlQW5pbWF0ZWRFbGVtZW50IHtcblxuICBjb25zdHJ1Y3RvcihiZWxsKSB7XG4gICAgc3VwZXIoJy5vbmVzaWduYWwtYmVsbC1sYXVuY2hlcicsICdvbmVzaWduYWwtYmVsbC1sYXVuY2hlci1hY3RpdmUnLCBudWxsLCBudWxsLCAnb25lc2lnbmFsLWJlbGwtbGF1bmNoZXItaW5hY3RpdmUnLCAnaGlkZGVuJywgJ2FjdGl2ZScpO1xuXG4gICAgdGhpcy5iZWxsID0gYmVsbDtcbiAgICB0aGlzLndhc0luYWN0aXZlID0gZmFsc2U7XG4gIH1cblxuICByZXNpemUoc2l6ZSkge1xuICAgIHJlbW92ZUNzc0NsYXNzKHRoaXMuZWxlbWVudCwgJ29uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLXNtJyk7XG4gICAgcmVtb3ZlQ3NzQ2xhc3ModGhpcy5lbGVtZW50LCAnb25lc2lnbmFsLWJlbGwtbGF1bmNoZXItbWQnKTtcbiAgICByZW1vdmVDc3NDbGFzcyh0aGlzLmVsZW1lbnQsICdvbmVzaWduYWwtYmVsbC1sYXVuY2hlci1sZycpO1xuICAgIGlmIChzaXplID09PSAnc21hbGwnKSB7XG4gICAgICBhZGRDc3NDbGFzcyh0aGlzLmVsZW1lbnQsICdvbmVzaWduYWwtYmVsbC1sYXVuY2hlci1zbScpXG4gICAgfVxuICAgIGVsc2UgaWYgKHNpemUgPT09ICdtZWRpdW0nKSB7XG4gICAgICBhZGRDc3NDbGFzcyh0aGlzLmVsZW1lbnQsICdvbmVzaWduYWwtYmVsbC1sYXVuY2hlci1tZCcpXG4gICAgfVxuICAgIGVsc2UgaWYgKHNpemUgPT09ICdsYXJnZScpIHtcbiAgICAgIGFkZENzc0NsYXNzKHRoaXMuZWxlbWVudCwgJ29uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLWxnJylcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgT25lU2lnbmFsIGJlbGwgc2l6ZSAnICsgc2l6ZSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgLy8gT25jZSB0aGUgbGF1bmNoZXIgaGFzIGZpbmlzaGVkIHNocmlua2luZyBkb3duXG4gICAgICBvbmNlKHRoaXMuZWxlbWVudCwgJ3RyYW5zaXRpb25lbmQnLCAoZXZlbnQsIGRlc3Ryb3lMaXN0ZW5lckZuKSA9PiB7XG4gICAgICAgIGlmIChldmVudC50YXJnZXQgPT09IHRoaXMuZWxlbWVudCAmJlxuICAgICAgICAgIGV2ZW50LnByb3BlcnR5TmFtZSA9PT0gdGhpcy50YXJnZXRUcmFuc2l0aW9uRXZlbnQpIHtcbiAgICAgICAgICAvLyBVbmluc3RhbGwgdGhlIGV2ZW50IGxpc3RlbmVyIGZvciB0cmFuc2l0aW9uZW5kXG4gICAgICAgICAgZGVzdHJveUxpc3RlbmVyRm4oKTtcbiAgICAgICAgICByZXR1cm4gcmVzb2x2ZSh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgfSwgdHJ1ZSk7XG4gICAgfSk7XG4gIH1cblxuICBhY3RpdmF0ZUlmSW5hY3RpdmUoKSB7XG4gICAgaWYgKHRoaXMuaW5hY3RpdmUpIHtcbiAgICAgIHRoaXMud2FzSW5hY3RpdmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRoaXMuYWN0aXZhdGUoKTtcbiAgICB9XG4gICAgZWxzZSByZXR1cm4gbm90aGluZygpO1xuICB9XG5cbiAgaW5hY3RpdmF0ZUlmV2FzSW5hY3RpdmUoKSB7XG4gICAgaWYgKHRoaXMud2FzSW5hY3RpdmUpIHtcbiAgICAgIHRoaXMud2FzSW5hY3RpdmUgPSBmYWxzZTtcbiAgICAgIHJldHVybiB0aGlzLmluYWN0aXZhdGUoKTtcbiAgICB9XG4gICAgZWxzZSByZXR1cm4gbm90aGluZygpO1xuICB9XG5cbiAgaW5hY3RpdmF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5iZWxsLm1lc3NhZ2UuaGlkZSgpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLmJlbGwuYmFkZ2UuY29udGVudC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuYmVsbC5iYWRnZS5oaWRlKClcbiAgICAgICAgICAgIC50aGVuKCgpID0+IFByb21pc2UuYWxsKFtzdXBlci5pbmFjdGl2YXRlKCksIHRoaXMucmVzaXplKCdzbWFsbCcpXSkpXG4gICAgICAgICAgICAudGhlbigoKSA9PiB0aGlzLmJlbGwuYmFkZ2Uuc2hvdygpKVxuICAgICAgICAgICAgLmNhdGNoKChlKSA9PiBsb2cuZXJyb3IoZSkpXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFtzdXBlci5pbmFjdGl2YXRlKCksIHRoaXMucmVzaXplKCdzbWFsbCcpXSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9XG5cbiAgYWN0aXZhdGUoKSB7XG4gICAgaWYgKHRoaXMuYmVsbC5iYWRnZS5jb250ZW50Lmxlbmd0aCA+IDApIHtcbiAgICAgIHJldHVybiB0aGlzLmJlbGwuYmFkZ2UuaGlkZSgpXG4gICAgICAgIC50aGVuKCgpID0+IFByb21pc2UuYWxsKFtzdXBlci5hY3RpdmF0ZSgpLCB0aGlzLnJlc2l6ZSh0aGlzLmJlbGwub3B0aW9ucy5zaXplKV0pKVxuICAgICAgICAudGhlbigoKSA9PiB0aGlzLmJlbGwuYmFkZ2Uuc2hvdygpKVxuICAgICAgICAuY2F0Y2goKGUpID0+IGxvZy5lcnJvcihlKSlcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3N1cGVyLmFjdGl2YXRlKCksIHRoaXMucmVzaXplKHRoaXMuYmVsbC5vcHRpb25zLnNpemUpXSk7XG4gICAgfVxuICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9iZWxsL0xhdW5jaGVyLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _ActiveAnimatedElement = __webpack_require__(16);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Badge = (function (_ActiveAnimatedElemen) {\n  _inherits(Badge, _ActiveAnimatedElemen);\n\n  function Badge() {\n    _classCallCheck(this, Badge);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Badge).call(this, '.onesignal-bell-launcher-badge', 'onesignal-bell-launcher-badge-opened', null, 'onesignal-bell-launcher-badge-active', null, 'hidden'));\n  }\n\n  _createClass(Badge, [{\n    key: 'increment',\n    value: function increment() {\n      // If it IS a number (is not not a number)\n      if (!isNaN(this.content)) {\n        var badgeNumber = +this.content; // Coerce to int\n        badgeNumber += 1;\n        this.content = badgeNumber.toString();\n        return badgeNumber;\n      }\n    }\n  }, {\n    key: 'decrement',\n    value: function decrement() {\n      // If it IS a number (is not not a number)\n      if (!isNaN(this.content)) {\n        var badgeNumber = +this.content; // Coerce to int\n        badgeNumber -= 1;\n        if (badgeNumber > 0) this.content = badgeNumber.toString();else this.content = '';\n        return badgeNumber;\n      }\n    }\n  }]);\n\n  return Badge;\n})(_ActiveAnimatedElement2.default);\n\nexports.default = Badge;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9CYWRnZS5qcz82MDVmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQU1xQixLQUFLO1lBQUwsS0FBSzs7QUFFeEIsV0FGbUIsS0FBSyxHQUVWOzBCQUZLLEtBQUs7O2tFQUFMLEtBQUssYUFHaEIsZ0NBQWdDLEVBQUUsc0NBQXNDLEVBQUUsSUFBSSxFQUFFLHNDQUFzQyxFQUFFLElBQUksRUFBRSxRQUFRO0dBQzdJOztlQUprQixLQUFLOztnQ0FNWjs7QUFFVixVQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUN4QixZQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQy9CLG1CQUFXLElBQUksQ0FBQyxDQUFDO0FBQ2pCLFlBQUksQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ3RDLGVBQU8sV0FBVyxDQUFDO09BQ3BCO0tBQ0Y7OztnQ0FFVzs7QUFFVixVQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtBQUN4QixZQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPO0FBQy9CLG1CQUFXLElBQUksQ0FBQyxDQUFDO0FBQ2pCLFlBQUksV0FBVyxHQUFHLENBQUMsRUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUMsUUFBUSxFQUFFLENBQUMsS0FFdEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7QUFDcEIsZUFBTyxXQUFXLENBQUM7T0FDcEI7S0FDRjs7O1NBM0JrQixLQUFLOzs7a0JBQUwsS0FBSyIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzUHVzaE5vdGlmaWNhdGlvbnNTdXBwb3J0ZWQsIGlzQnJvd3NlclNhZmFyaSwgaXNTdXBwb3J0ZWRGaXJlRm94LCBpc0Jyb3dzZXJGaXJlZm94LCBnZXRGaXJlZm94VmVyc2lvbiwgaXNTdXBwb3J0ZWRTYWZhcmksIGdldENvbnNvbGVTdHlsZSwgYWRkQ3NzQ2xhc3MsIHJlbW92ZUNzc0NsYXNzLCBvbmNlIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IGxvZyBmcm9tICdsb2dsZXZlbCc7XG5pbXBvcnQgRXZlbnQgZnJvbSAnLi4vZXZlbnRzLmpzJztcbmltcG9ydCBBY3RpdmVBbmltYXRlZEVsZW1lbnQgZnJvbSAnLi9BY3RpdmVBbmltYXRlZEVsZW1lbnQuanMnO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhZGdlIGV4dGVuZHMgQWN0aXZlQW5pbWF0ZWRFbGVtZW50IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcignLm9uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLWJhZGdlJywgJ29uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLWJhZGdlLW9wZW5lZCcsIG51bGwsICdvbmVzaWduYWwtYmVsbC1sYXVuY2hlci1iYWRnZS1hY3RpdmUnLCBudWxsLCAnaGlkZGVuJyk7XG4gIH1cblxuICBpbmNyZW1lbnQoKSB7XG4gICAgLy8gSWYgaXQgSVMgYSBudW1iZXIgKGlzIG5vdCBub3QgYSBudW1iZXIpXG4gICAgaWYgKCFpc05hTih0aGlzLmNvbnRlbnQpKSB7XG4gICAgICBsZXQgYmFkZ2VOdW1iZXIgPSArdGhpcy5jb250ZW50OyAvLyBDb2VyY2UgdG8gaW50XG4gICAgICBiYWRnZU51bWJlciArPSAxO1xuICAgICAgdGhpcy5jb250ZW50ID0gYmFkZ2VOdW1iZXIudG9TdHJpbmcoKTtcbiAgICAgIHJldHVybiBiYWRnZU51bWJlcjtcbiAgICB9XG4gIH1cblxuICBkZWNyZW1lbnQoKSB7XG4gICAgLy8gSWYgaXQgSVMgYSBudW1iZXIgKGlzIG5vdCBub3QgYSBudW1iZXIpXG4gICAgaWYgKCFpc05hTih0aGlzLmNvbnRlbnQpKSB7XG4gICAgICBsZXQgYmFkZ2VOdW1iZXIgPSArdGhpcy5jb250ZW50OyAvLyBDb2VyY2UgdG8gaW50XG4gICAgICBiYWRnZU51bWJlciAtPSAxO1xuICAgICAgaWYgKGJhZGdlTnVtYmVyID4gMClcbiAgICAgICAgdGhpcy5jb250ZW50ID0gYmFkZ2VOdW1iZXIudG9TdHJpbmcoKTtcbiAgICAgIGVsc2VcbiAgICAgICAgdGhpcy5jb250ZW50ID0gJyc7XG4gICAgICByZXR1cm4gYmFkZ2VOdW1iZXI7XG4gICAgfVxuICB9XG59XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvYmVsbC9CYWRnZS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _ActiveAnimatedElement = __webpack_require__(16);\n\nvar _ActiveAnimatedElement2 = _interopRequireDefault(_ActiveAnimatedElement);\n\nvar _bell = __webpack_require__(13);\n\nvar _bell2 = _interopRequireDefault(_bell);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Button = (function (_ActiveAnimatedElemen) {\n  _inherits(Button, _ActiveAnimatedElemen);\n\n  function Button(bell) {\n    _classCallCheck(this, Button);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Button).call(this, '.onesignal-bell-launcher-button', null, null, 'onesignal-bell-launcher-button-active', null, 'shown'));\n\n    _this.bell = bell;\n    _this.events = {\n      mouse: 'bell.launcher.button.mouse'\n    };\n\n    _this.element.addEventListener('mouseover', function () {\n      if (_limitStore2.default.isEmpty(_this.events.mouse) || _limitStore2.default.getLast(_this.events.mouse) === 'out') {\n        _events2.default.trigger(_bell2.default.EVENTS.HOVERING);\n      }\n      _limitStore2.default.put(_this.events.mouse, 'over');\n    });\n\n    _this.element.addEventListener('mouseleave', function () {\n      _limitStore2.default.put(_this.events.mouse, 'out');\n      _events2.default.trigger(_bell2.default.EVENTS.HOVERED);\n    });\n\n    _this.element.addEventListener('mousedown', function () {\n      _this.pulse();\n      _this.activate();\n      _this.bell.badge.activate();\n    });\n\n    _this.element.addEventListener('mouseup', function () {\n      _this.inactivate();\n      _this.bell.badge.inactivate();\n    });\n\n    _this.element.addEventListener('click', function () {\n      _events2.default.trigger(_bell2.default.EVENTS.BELL_CLICK);\n      _events2.default.trigger(_bell2.default.EVENTS.LAUNCHER_CLICK);\n    });\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: 'pulse',\n    value: function pulse() {\n      (0, _utils.removeDomElement)('.pulse-ring');\n      addDomElement(this.element, 'beforeend', '<div class=\"pulse-ring\"></div>');\n    }\n  }]);\n\n  return Button;\n})(_ActiveAnimatedElement2.default);\n\nexports.default = Button;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9CdXR0b24uanM/NjRlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQVFxQixNQUFNO1lBQU4sTUFBTTs7QUFFekIsV0FGbUIsTUFBTSxDQUViLElBQUksRUFBRTswQkFGQyxNQUFNOzt1RUFBTixNQUFNLGFBR2pCLGlDQUFpQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsdUNBQXVDLEVBQUUsSUFBSSxFQUFFLE9BQU87O0FBRTNHLFVBQUssSUFBSSxHQUFHLElBQUksQ0FBQztBQUNqQixVQUFLLE1BQU0sR0FBRztBQUNaLFdBQUssRUFBRSw0QkFBNEI7S0FDcEMsQ0FBQzs7QUFFRixVQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsWUFBTTtBQUMvQyxVQUFJLHFCQUFXLE9BQU8sQ0FBQyxNQUFLLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxxQkFBVyxPQUFPLENBQUMsTUFBSyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxFQUFFO0FBQzVGLHlCQUFNLE9BQU8sQ0FBQyxlQUFLLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztPQUNyQztBQUNELDJCQUFXLEdBQUcsQ0FBQyxNQUFLLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDM0MsQ0FBQyxDQUFDOztBQUVILFVBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLFlBQVksRUFBRSxZQUFNO0FBQ2hELDJCQUFXLEdBQUcsQ0FBQyxNQUFLLE1BQU0sQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDekMsdUJBQU0sT0FBTyxDQUFDLGVBQUssTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ3BDLENBQUMsQ0FBQzs7QUFFSCxVQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsWUFBTTtBQUMvQyxZQUFLLEtBQUssRUFBRSxDQUFDO0FBQ2IsWUFBSyxRQUFRLEVBQUUsQ0FBQztBQUNoQixZQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7S0FDNUIsQ0FBQyxDQUFDOztBQUVILFVBQUssT0FBTyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxZQUFNO0FBQzdDLFlBQUssVUFBVSxFQUFFLENBQUM7QUFDbEIsWUFBSyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDO0tBQzlCLENBQUMsQ0FBQzs7QUFFSCxVQUFLLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBTTtBQUMzQyx1QkFBTSxPQUFPLENBQUMsZUFBSyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDdEMsdUJBQU0sT0FBTyxDQUFDLGVBQUssTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0tBQzNDLENBQUMsQ0FBQzs7R0FDSjs7ZUFyQ2tCLE1BQU07OzRCQXVDakI7QUFDTixpQkFoRDhLLGdCQUFnQixFQWdEN0ssYUFBYSxDQUFDLENBQUM7QUFDaEMsbUJBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxnQ0FBZ0MsQ0FBQyxDQUFDO0tBQzVFOzs7U0ExQ2tCLE1BQU07OztrQkFBTixNQUFNIiwiZmlsZSI6IjE5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNQdXNoTm90aWZpY2F0aW9uc1N1cHBvcnRlZCwgaXNCcm93c2VyU2FmYXJpLCBpc1N1cHBvcnRlZEZpcmVGb3gsIGlzQnJvd3NlckZpcmVmb3gsIGdldEZpcmVmb3hWZXJzaW9uLCBpc1N1cHBvcnRlZFNhZmFyaSwgZ2V0Q29uc29sZVN0eWxlLCBhZGRDc3NDbGFzcywgcmVtb3ZlQ3NzQ2xhc3MsIHJlbW92ZURvbUVsZW1lbnQsIG9uY2UsIHdoZW4gfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgbG9nIGZyb20gJ2xvZ2xldmVsJztcbmltcG9ydCBFdmVudCBmcm9tICcuLi9ldmVudHMuanMnO1xuaW1wb3J0IEFjdGl2ZUFuaW1hdGVkRWxlbWVudCBmcm9tICcuL0FjdGl2ZUFuaW1hdGVkRWxlbWVudC5qcyc7XG5pbXBvcnQgQmVsbCBmcm9tICcuL2JlbGwuanMnO1xuaW1wb3J0IExpbWl0U3RvcmUgZnJvbSAnLi4vbGltaXRTdG9yZS5qcyc7XG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnV0dG9uIGV4dGVuZHMgQWN0aXZlQW5pbWF0ZWRFbGVtZW50IHtcblxuICBjb25zdHJ1Y3RvcihiZWxsKSB7XG4gICAgc3VwZXIoJy5vbmVzaWduYWwtYmVsbC1sYXVuY2hlci1idXR0b24nLCBudWxsLCBudWxsLCAnb25lc2lnbmFsLWJlbGwtbGF1bmNoZXItYnV0dG9uLWFjdGl2ZScsIG51bGwsICdzaG93bicpO1xuXG4gICAgdGhpcy5iZWxsID0gYmVsbDtcbiAgICB0aGlzLmV2ZW50cyA9IHtcbiAgICAgIG1vdXNlOiAnYmVsbC5sYXVuY2hlci5idXR0b24ubW91c2UnXG4gICAgfTtcblxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCAoKSA9PiB7XG4gICAgICBpZiAoTGltaXRTdG9yZS5pc0VtcHR5KHRoaXMuZXZlbnRzLm1vdXNlKSB8fCBMaW1pdFN0b3JlLmdldExhc3QodGhpcy5ldmVudHMubW91c2UpID09PSAnb3V0Jykge1xuICAgICAgICBFdmVudC50cmlnZ2VyKEJlbGwuRVZFTlRTLkhPVkVSSU5HKTtcbiAgICAgIH1cbiAgICAgIExpbWl0U3RvcmUucHV0KHRoaXMuZXZlbnRzLm1vdXNlLCAnb3ZlcicpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoKSA9PiB7XG4gICAgICBMaW1pdFN0b3JlLnB1dCh0aGlzLmV2ZW50cy5tb3VzZSwgJ291dCcpO1xuICAgICAgRXZlbnQudHJpZ2dlcihCZWxsLkVWRU5UUy5IT1ZFUkVEKTtcbiAgICB9KTtcblxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoKSA9PiB7XG4gICAgICB0aGlzLnB1bHNlKCk7XG4gICAgICB0aGlzLmFjdGl2YXRlKCk7XG4gICAgICB0aGlzLmJlbGwuYmFkZ2UuYWN0aXZhdGUoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgKCkgPT4ge1xuICAgICAgdGhpcy5pbmFjdGl2YXRlKCk7XG4gICAgICB0aGlzLmJlbGwuYmFkZ2UuaW5hY3RpdmF0ZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgRXZlbnQudHJpZ2dlcihCZWxsLkVWRU5UUy5CRUxMX0NMSUNLKTtcbiAgICAgIEV2ZW50LnRyaWdnZXIoQmVsbC5FVkVOVFMuTEFVTkNIRVJfQ0xJQ0spO1xuICAgIH0pO1xuICB9XG5cbiAgcHVsc2UoKSB7XG4gICAgcmVtb3ZlRG9tRWxlbWVudCgnLnB1bHNlLXJpbmcnKTtcbiAgICBhZGREb21FbGVtZW50KHRoaXMuZWxlbWVudCwgJ2JlZm9yZWVuZCcsICc8ZGl2IGNsYXNzPVwicHVsc2UtcmluZ1wiPjwvZGl2PicpO1xuICB9XG59XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvYmVsbC9CdXR0b24uanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement2 = __webpack_require__(15);\n\nvar _AnimatedElement3 = _interopRequireDefault(_AnimatedElement2);\n\nvar _bowser = __webpack_require__(14);\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nvar _bell = __webpack_require__(13);\n\nvar _bell2 = _interopRequireDefault(_bell);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Dialog = (function (_AnimatedElement) {\n  _inherits(Dialog, _AnimatedElement);\n\n  function Dialog(bell) {\n    _classCallCheck(this, Dialog);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dialog).call(this, '.onesignal-bell-launcher-dialog', 'onesignal-bell-launcher-dialog-opened', null, 'hidden', 'opacity', '.onesignal-bell-launcher-dialog-body'));\n\n    _this.bell = bell;\n    _this.subscribeButtonId = '#onesignal-bell-container .onesignal-bell-launcher #subscribe-button';\n    _this.unsubscribeButtonId = '#onesignal-bell-container .onesignal-bell-launcher #unsubscribe-button';\n    _this.notificationIcons = null;\n\n    window.addEventListener(_bell2.default.EVENTS.STATE_CHANGED, function (state) {\n      state = state.detail;\n      if (state.to === _bell2.default.STATES.SUBSCRIBED) {\n        if (_this.notificationIcons === null) {\n          _this.getNotificationIcons().then(function (icons) {\n            _this.notificationIcons = icons;\n          });\n        }\n      }\n    });\n\n    window.addEventListener('click', function (event) {\n      if (event.target === document.querySelector(_this.subscribeButtonId)) _events2.default.trigger(_bell2.default.EVENTS.SUBSCRIBE_CLICK);else if (event.target === document.querySelector(_this.unsubscribeButtonId)) _events2.default.trigger(_bell2.default.EVENTS.UNSUBSCRIBE_CLICK);\n    });\n    return _this;\n  }\n\n  _createClass(Dialog, [{\n    key: 'getNotificationIcons',\n    value: function getNotificationIcons() {\n      if (!OneSignal._app_id) {\n        return Promise.resolve(null);\n      }\n      var url = OneSignal._API_URL + 'apps/' + OneSignal._app_id + '/icon';\n      return new Promise(function (resolve, reject) {\n        fetch(url).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.errors) {\n            console.error('API call %c' + url, (0, _utils.getConsoleStyle)('code'), 'failed with:', data.errors);\n            reject(null);\n          }\n          resolve(data);\n        }).catch(function (ex) {\n          console.error('Call %cgetNotificationIcons()', (0, _utils.getConsoleStyle)('code'), 'failed with:', ex);\n          reject(null);\n        });\n      });\n    }\n  }, {\n    key: 'getPlatformNotificationIcon',\n    value: function getPlatformNotificationIcon() {\n      if (this.notificationIcons) {\n        if (_bowser2.default.chrome || _bowser2.default.firefox) {\n          return this.notificationIcons.chrome || this.notificationIcons.safari;\n        } else if (_bowser2.default.safari) {\n          return this.notificationIcons.safari || this.notificationIcons.chrome;\n        }\n      } else return null;\n    }\n  }, {\n    key: 'updateBellLauncherDialogBody',\n    value: function updateBellLauncherDialogBody() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        clearDomElementChildren(_this2.launcherDialogBody);\n\n        var currentSetSubscription = _this2._getCurrentSetSubscriptionState();\n        var contents = 'Nothing to show.';\n\n        if (_this2.state === _bell2.default.STATES.SUBSCRIBED && currentSetSubscription === true || _this2.state === _bell2.default.STATES.UNSUBSCRIBED && currentSetSubscription === false) {\n\n          var notificationIconHtml = '';\n          var imageUrl = _this2.getPlatformNotificationIcon();\n          if (imageUrl) {\n            notificationIconHtml = '<div class=\"push-notification-icon\"><img src=\"' + imageUrl + '\"></div>';\n          } else {\n            notificationIconHtml = '<div class=\"push-notification-icon push-notification-icon-default\"></div>';\n          }\n\n          var buttonHtml = '';\n          if (_this2.state !== _bell2.default.STATES.SUBSCRIBED) buttonHtml = '<button type=\"button\" class=\"action\" id=\"subscribe-button\">' + _this2.text['dialog.main.button.subscribe'] + '</button>';else buttonHtml = '<button type=\"button\" class=\"action\" id=\"unsubscribe-button\">' + _this2.text['dialog.main.button.unsubscribe'] + '</button>';\n\n          contents = '\\n                  <h1>' + _this2.text['dialog.main.title'] + '</h1>\\n                  <div class=\"divider\"></div>\\n                  <div class=\"push-notification\">\\n                    ' + notificationIconHtml + '\\n                    <div class=\"push-notification-text-container\">\\n                      <div class=\"push-notification-text push-notification-text-short\"></div>\\n                      <div class=\"push-notification-text\"></div>\\n                      <div class=\"push-notification-text push-notification-text-medium\"></div>\\n                      <div class=\"push-notification-text\"></div>\\n                      <div class=\"push-notification-text push-notification-text-medium\"></div>\\n                    </div>\\n                  </div>\\n                  <div class=\"action-container\">\\n                    ' + buttonHtml + '\\n                  </div>\\n                  <div class=\"divider\"></div>\\n                  <div class=\"kickback\">Powered by <a href=\"https://onesignal.com\" class=\"kickback\" target=\"_blank\">OneSignal</a></div>\\n                ';\n        } else if (_this2.state === _bell2.default.STATES.BLOCKED) {\n          var imageUrl = null;\n          if (_bowser2.default.chrome) imageUrl = HOST_URL + '/bell/chrome-unblock.jpg';else if (_bowser2.default.firefox) imageUrl = HOST_URL + '/bell/firefox-unblock.jpg';else if (_bowser2.default.safari) imageUrl = HOST_URL + '/bell/safari-unblock.jpg';\n\n          var instructionsHtml = '';\n          if (imageUrl) {\n            instructionsHtml = '\\n            <div class=\"instructions\">\\n              <a href=\"' + imageUrl + '\" target=\"_blank\"><img src=\"' + imageUrl + '\"></a></div>\\n            </div>\\n            ';\n          }\n          contents = '\\n                  <h1>' + _this2.text['dialog.blocked.title'] + '</h1>\\n                  <div class=\"divider\"></div>\\n                  <div class=\"instructions\">\\n                  <p>' + _this2.text['dialog.blocked.message'] + '</p>\\n                  ' + instructionsHtml + '\\n                  </div>\\n                  <div class=\"divider\"></div>\\n                  <div class=\"kickback\">Powered by <a href=\"https://onesignal.com\" class=\"kickback\" target=\"_blank\">OneSignal</a></div>\\n                ';\n        }\n\n        addDomElement(_this2.launcherDialogBody, 'beforeend', contents);\n        resolve();\n      });\n    }\n  }]);\n\n  return Dialog;\n})(_AnimatedElement3.default);\n\nexports.default = Dialog;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(2);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _events = __webpack_require__(12);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _AnimatedElement2 = __webpack_require__(15);\n\nvar _AnimatedElement3 = _interopRequireDefault(_AnimatedElement2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Message = (function (_AnimatedElement) {\n  _inherits(Message, _AnimatedElement);\n\n  function Message(bell) {\n    _classCallCheck(this, Message);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Message).call(this, '.onesignal-bell-launcher-message', 'onesignal-bell-launcher-message-opened', null, 'hidden', 'opacity', '.onesignal-bell-launcher-message-body'));\n\n    _this.bell = bell;\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: 'display',\n    value: function display(content) {\n      var _this2 = this;\n\n      var hideAfter = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n      return new Promise(function (resolve) {\n        _this2.shown ? _this2.hide() : (0, _utils.nothing)().then(function () {\n          return _this2.content = content;\n        }).then(function () {\n          return _this2.show();\n        }).then(function () {\n          return (0, _utils.delay)(hideAfter);\n        }).then(function () {\n          return _this2.hide();\n        }).then(resolve).catch(function (e) {\n          return _loglevel2.default.error(e);\n        });\n      });\n    }\n  }, {\n    key: 'enqueue',\n    value: function enqueue(message) {\n      var _this3 = this;\n\n      var notify = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      this.bell.messages.queued.push(message);\n      return new Promise(function (resolve) {\n        if (_this3.bell.badge.shown) {\n          _this3.bell.badge.hide().then(function () {\n            return _this3.bell.badge.increment();\n          }).then(function () {\n            return _this3.bell.badge.show();\n          }).then(resolve);\n        } else {\n          _this3.bell.badge.increment();\n          if (_this3.bell.initialized) _this3.bell.badge.show().then(resolve);else resolve();\n        }\n      });\n    }\n  }, {\n    key: 'dequeue',\n    value: function dequeue(message) {\n      var _this4 = this;\n\n      var dequeuedMessage = this.bell.messages.queued.pop(message);\n      return new Promise(function (resolve) {\n        if (_this4.bell.badge.shown) {\n          _this4.bell.badge.hide().then(function () {\n            return _this4.bell.badge.decrement();\n          }).then(function () {\n            return _this4.bell.badge.show();\n          }).then(resolve(dequeuedMessage));\n        } else {\n          _this4.bell.badge.decrement();\n          resolve(dequeuedMessage);\n        }\n      });\n    }\n  }]);\n\n  return Message;\n})(_AnimatedElement3.default);\n\nexports.default = Message;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9NZXNzYWdlLmpzPzc0NTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTXFCLE9BQU87WUFBUCxPQUFPOztBQUUxQixXQUZtQixPQUFPLENBRWQsSUFBSSxFQUFFOzBCQUZDLE9BQU87O3VFQUFQLE9BQU8sYUFHbEIsa0NBQWtDLEVBQUUsd0NBQXdDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsdUNBQXVDOztBQUV0SixVQUFLLElBQUksR0FBRyxJQUFJLENBQUM7O0dBQ2xCOztlQU5rQixPQUFPOzs0QkFRbEIsT0FBTyxFQUFpQjs7O1VBQWYsU0FBUyx5REFBRyxDQUFDOztBQUM1QixhQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFLO0FBQzlCLGVBQUssS0FBSyxHQUFHLE9BQUssSUFBSSxFQUFFLEdBQUcsV0FoQm9LLE9BQU8sR0FnQmxLLENBQ2pDLElBQUksQ0FBQztpQkFBTSxPQUFLLE9BQU8sR0FBRyxPQUFPO1NBQUEsQ0FBQyxDQUNsQyxJQUFJLENBQUM7aUJBQU0sT0FBSyxJQUFJLEVBQUU7U0FBQSxDQUFDLENBQ3ZCLElBQUksQ0FBQztpQkFBTSxXQW5Cb0ssS0FBSyxFQW1CbkssU0FBUyxDQUFDO1NBQUEsQ0FBQyxDQUM1QixJQUFJLENBQUM7aUJBQU0sT0FBSyxJQUFJLEVBQUU7U0FBQSxDQUFDLENBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FDYixLQUFLLENBQUMsVUFBQyxDQUFDO2lCQUFLLG1CQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FBQSxDQUFDLENBQUM7T0FDL0IsQ0FBQyxDQUFDO0tBQ0o7Ozs0QkFFTyxPQUFPLEVBQWtCOzs7VUFBaEIsTUFBTSx5REFBRyxLQUFLOztBQUM3QixVQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3hDLGFBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUs7QUFDOUIsWUFBSSxPQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFO0FBQ3pCLGlCQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQ25CLElBQUksQ0FBQzttQkFBTSxPQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFO1dBQUEsQ0FBQyxDQUN2QyxJQUFJLENBQUM7bUJBQU0sT0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtXQUFBLENBQUMsQ0FDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ2xCLE1BQU07QUFDTCxpQkFBSyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQzVCLGNBQUksT0FBSyxJQUFJLENBQUMsV0FBVyxFQUN2QixPQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUNqQyxPQUFPLEVBQUUsQ0FBQztTQUNoQjtPQUNGLENBQUMsQ0FBQztLQUNKOzs7NEJBRU8sT0FBTyxFQUFFOzs7QUFDZixVQUFJLGVBQWUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdELGFBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUs7QUFDOUIsWUFBSSxPQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFO0FBQ3pCLGlCQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQ25CLElBQUksQ0FBQzttQkFBTSxPQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFO1dBQUEsQ0FBQyxDQUN2QyxJQUFJLENBQUM7bUJBQU0sT0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtXQUFBLENBQUMsQ0FDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1NBQ25DLE1BQU07QUFDTCxpQkFBSyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQzVCLGlCQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDMUI7T0FDRixDQUFDLENBQUM7S0FDSjs7O1NBbERrQixPQUFPOzs7a0JBQVAsT0FBTyIsImZpbGUiOiIyMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzUHVzaE5vdGlmaWNhdGlvbnNTdXBwb3J0ZWQsIGlzQnJvd3NlclNhZmFyaSwgaXNTdXBwb3J0ZWRGaXJlRm94LCBpc0Jyb3dzZXJGaXJlZm94LCBnZXRGaXJlZm94VmVyc2lvbiwgaXNTdXBwb3J0ZWRTYWZhcmksIGdldENvbnNvbGVTdHlsZSwgYWRkQ3NzQ2xhc3MsIHJlbW92ZUNzc0NsYXNzLCBvbmNlLCBkZWxheSwgd2hlbiwgbm90aGluZyB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCBsb2cgZnJvbSAnbG9nbGV2ZWwnO1xuaW1wb3J0IEV2ZW50IGZyb20gJy4uL2V2ZW50cy5qcyc7XG5pbXBvcnQgQW5pbWF0ZWRFbGVtZW50IGZyb20gJy4vQW5pbWF0ZWRFbGVtZW50LmpzJztcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXNzYWdlIGV4dGVuZHMgQW5pbWF0ZWRFbGVtZW50IHtcblxuICBjb25zdHJ1Y3RvcihiZWxsKSB7XG4gICAgc3VwZXIoJy5vbmVzaWduYWwtYmVsbC1sYXVuY2hlci1tZXNzYWdlJywgJ29uZXNpZ25hbC1iZWxsLWxhdW5jaGVyLW1lc3NhZ2Utb3BlbmVkJywgbnVsbCwgJ2hpZGRlbicsICdvcGFjaXR5JywgJy5vbmVzaWduYWwtYmVsbC1sYXVuY2hlci1tZXNzYWdlLWJvZHknKTtcblxuICAgIHRoaXMuYmVsbCA9IGJlbGw7XG4gIH1cblxuICBkaXNwbGF5KGNvbnRlbnQsIGhpZGVBZnRlciA9IDApIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIHRoaXMuc2hvd24gPyB0aGlzLmhpZGUoKSA6IG5vdGhpbmcoKVxuICAgICAgICAudGhlbigoKSA9PiB0aGlzLmNvbnRlbnQgPSBjb250ZW50KVxuICAgICAgICAudGhlbigoKSA9PiB0aGlzLnNob3coKSlcbiAgICAgICAgLnRoZW4oKCkgPT4gZGVsYXkoaGlkZUFmdGVyKSlcbiAgICAgICAgLnRoZW4oKCkgPT4gdGhpcy5oaWRlKCkpXG4gICAgICAgIC50aGVuKHJlc29sdmUpXG4gICAgICAgIC5jYXRjaCgoZSkgPT4gbG9nLmVycm9yKGUpKTtcbiAgICB9KTtcbiAgfVxuXG4gIGVucXVldWUobWVzc2FnZSwgbm90aWZ5ID0gZmFsc2UpIHtcbiAgICB0aGlzLmJlbGwubWVzc2FnZXMucXVldWVkLnB1c2gobWVzc2FnZSk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICBpZiAodGhpcy5iZWxsLmJhZGdlLnNob3duKSB7XG4gICAgICAgIHRoaXMuYmVsbC5iYWRnZS5oaWRlKClcbiAgICAgICAgICAudGhlbigoKSA9PiB0aGlzLmJlbGwuYmFkZ2UuaW5jcmVtZW50KCkpXG4gICAgICAgICAgLnRoZW4oKCkgPT4gdGhpcy5iZWxsLmJhZGdlLnNob3coKSlcbiAgICAgICAgICAudGhlbihyZXNvbHZlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYmVsbC5iYWRnZS5pbmNyZW1lbnQoKTtcbiAgICAgICAgaWYgKHRoaXMuYmVsbC5pbml0aWFsaXplZClcbiAgICAgICAgICB0aGlzLmJlbGwuYmFkZ2Uuc2hvdygpLnRoZW4ocmVzb2x2ZSlcbiAgICAgICAgZWxzZSByZXNvbHZlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBkZXF1ZXVlKG1lc3NhZ2UpIHtcbiAgICBsZXQgZGVxdWV1ZWRNZXNzYWdlID0gdGhpcy5iZWxsLm1lc3NhZ2VzLnF1ZXVlZC5wb3AobWVzc2FnZSk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICBpZiAodGhpcy5iZWxsLmJhZGdlLnNob3duKSB7XG4gICAgICAgIHRoaXMuYmVsbC5iYWRnZS5oaWRlKClcbiAgICAgICAgICAudGhlbigoKSA9PiB0aGlzLmJlbGwuYmFkZ2UuZGVjcmVtZW50KCkpXG4gICAgICAgICAgLnRoZW4oKCkgPT4gdGhpcy5iZWxsLmJhZGdlLnNob3coKSlcbiAgICAgICAgICAudGhlbihyZXNvbHZlKGRlcXVldWVkTWVzc2FnZSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5iZWxsLmJhZGdlLmRlY3JlbWVudCgpO1xuICAgICAgICByZXNvbHZlKGRlcXVldWVkTWVzc2FnZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9iZWxsL01lc3NhZ2UuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(23);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n	// When the styles change, update the <style> tags\n	if(!content.locals) {\n		module.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./bell.scss\", function() {\n			var newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./bell.scss\");\n			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n			update(newContent);\n		});\n	}\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9iZWxsLnNjc3M/N2ZiMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFtRjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcyEuL2JlbGwuc2Nzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9iZWxsLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanMhLi9iZWxsLnNjc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvYmVsbC9iZWxsLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAyMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(24)();\n// imports\n\n\n// module\nexports.push([module.id, "/*!\\n* CleanSlate\\n*   github.com/premasagar/cleanslate\\n*\\n*/.onesignal-reset,.onesignal-reset a,.onesignal-reset abbr,.onesignal-reset acronym,.onesignal-reset address,.onesignal-reset applet,.onesignal-reset area,.onesignal-reset article,.onesignal-reset aside,.onesignal-reset audio,.onesignal-reset b,.onesignal-reset big,.onesignal-reset blockquote,.onesignal-reset button,.onesignal-reset canvas,.onesignal-reset caption,.onesignal-reset cite,.onesignal-reset code,.onesignal-reset col,.onesignal-reset colgroup,.onesignal-reset datalist,.onesignal-reset dd,.onesignal-reset del,.onesignal-reset dfn,.onesignal-reset div,.onesignal-reset dl,.onesignal-reset dt,.onesignal-reset em,.onesignal-reset fieldset,.onesignal-reset figcaption,.onesignal-reset figure,.onesignal-reset footer,.onesignal-reset form,.onesignal-reset h1,.onesignal-reset h2,.onesignal-reset h3,.onesignal-reset h4,.onesignal-reset h5,.onesignal-reset h6,.onesignal-reset header,.onesignal-reset hr,.onesignal-reset i,.onesignal-reset iframe,.onesignal-reset img,.onesignal-reset input,.onesignal-reset ins,.onesignal-reset kbd,.onesignal-reset label,.onesignal-reset legend,.onesignal-reset li,.onesignal-reset main,.onesignal-reset map,.onesignal-reset mark,.onesignal-reset menu,.onesignal-reset meta,.onesignal-reset nav,.onesignal-reset object,.onesignal-reset ol,.onesignal-reset optgroup,.onesignal-reset option,.onesignal-reset output,.onesignal-reset p,.onesignal-reset pre,.onesignal-reset progress,.onesignal-reset q,.onesignal-reset samp,.onesignal-reset section,.onesignal-reset select,.onesignal-reset small,.onesignal-reset span,.onesignal-reset strike,.onesignal-reset strong,.onesignal-reset sub,.onesignal-reset summary,.onesignal-reset sup,.onesignal-reset table,.onesignal-reset tbody,.onesignal-reset td,.onesignal-reset textarea,.onesignal-reset tfoot,.onesignal-reset th,.onesignal-reset thead,.onesignal-reset time,.onesignal-reset tr,.onesignal-reset tt,.onesignal-reset ul,.onesignal-reset var,.onesignal-reset video{background-attachment:scroll;background-color:transparent;background-image:none;background-position:0 0;background-repeat:repeat;border-color:#000;border:medium none currentColor;bottom:auto;clear:none;clip:auto;color:inherit;counter-increment:none;counter-reset:none;cursor:auto;direction:inherit;display:inline;float:none;font-family:inherit;font-size:inherit;font-style:inherit;font-variant:normal;font-weight:inherit;height:auto;left:auto;letter-spacing:normal;line-height:inherit;list-style-type:inherit;list-style-position:outside;list-style-image:none;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;outline:medium none invert;overflow:visible;padding:0;position:static;quotes:\\"\\" \\"\\";right:auto;table-layout:auto;text-align:inherit;text-decoration:inherit;text-indent:0;text-transform:none;top:auto;unicode-bidi:normal;vertical-align:baseline;visibility:inherit;white-space:normal;width:auto;word-spacing:normal;z-index:auto;background-origin:padding-box;background-clip:border-box;background-size:auto;-webkit-border-image:none;-o-border-image:none;border-image:none;border-radius:0;box-shadow:none;box-sizing:content-box;-webkit-column-count:auto;-moz-column-count:auto;column-count:auto;-webkit-column-gap:normal;-moz-column-gap:normal;column-gap:normal;-webkit-column-rule:medium none #000;-moz-column-rule:medium none #000;column-rule:medium none #000;-webkit-column-span:1;-moz-column-span:1;column-span:1;-webkit-column-width:auto;-moz-column-width:auto;column-width:auto;font-feature-settings:normal;overflow-x:visible;overflow-y:visible;-webkit-hyphens:manual;-moz-hyphens:manual;hyphens:manual;-webkit-perspective:none;-ms-perspective:none;-o-perspective:none;perspective:none;-webkit-perspective-origin:50% 50%;-ms-perspective-origin:50% 50%;-o-perspective-origin:50% 50%;perspective-origin:50% 50%;-webkit-backface-visibility:visible;backface-visibility:visible;text-shadow:none;-webkit-transition:all 0s ease 0s;transition:all 0s ease 0s;-webkit-transform:none;-ms-transform:none;transform:none;-webkit-transform-origin:50% 50%;-ms-transform-origin:50% 50%;transform-origin:50% 50%;-webkit-transform-style:flat;transform-style:flat;word-break:normal}.onesignal-reset,.onesignal-reset address,.onesignal-reset article,.onesignal-reset audio,.onesignal-reset blockquote,.onesignal-reset caption,.onesignal-reset colgroup,.onesignal-reset dd,.onesignal-reset dialog,.onesignal-reset div,.onesignal-reset dl,.onesignal-reset dt,.onesignal-reset fieldset,.onesignal-reset figure,.onesignal-reset footer,.onesignal-reset form,.onesignal-reset h1,.onesignal-reset h2,.onesignal-reset h3,.onesignal-reset h4,.onesignal-reset h5,.onesignal-reset h6,.onesignal-reset header,.onesignal-reset hgroup,.onesignal-reset hr,.onesignal-reset main,.onesignal-reset menu,.onesignal-reset nav,.onesignal-reset ol,.onesignal-reset option,.onesignal-reset p,.onesignal-reset pre,.onesignal-reset progress,.onesignal-reset section,.onesignal-reset summary,.onesignal-reset ul,.onesignal-reset video{display:block}.onesignal-reset h1,.onesignal-reset h2,.onesignal-reset h3,.onesignal-reset h4,.onesignal-reset h5,.onesignal-reset h6{font-weight:700}.onesignal-reset h1{font-size:2em;padding:.67em 0}.onesignal-reset h2{font-size:1.5em;padding:.83em 0}.onesignal-reset h3{font-size:1.17em;padding:.83em 0}.onesignal-reset h4{font-size:1em}.onesignal-reset h5{font-size:.83em}.onesignal-reset p{margin:1em 0}.onesignal-reset table{display:table}.onesignal-reset thead{display:table-header-group}.onesignal-reset tbody{display:table-row-group}.onesignal-reset tfoot{display:table-footer-group}.onesignal-reset tr{display:table-row}.onesignal-reset td,.onesignal-reset th{display:table-cell;padding:2px}.onesignal-reset ol,.onesignal-reset ul{margin:1em 0}.onesignal-reset ol li,.onesignal-reset ol ol li,.onesignal-reset ol ol ol li,.onesignal-reset ol ol ul li,.onesignal-reset ol ul ul li,.onesignal-reset ul li,.onesignal-reset ul ol ol li,.onesignal-reset ul ul li,.onesignal-reset ul ul ol li,.onesignal-reset ul ul ul li{list-style-position:inside;margin-top:.08em}.onesignal-reset ol ol,.onesignal-reset ol ol ol,.onesignal-reset ol ol ul,.onesignal-reset ol ul,.onesignal-reset ol ul ul,.onesignal-reset ul ol,.onesignal-reset ul ol ol,.onesignal-reset ul ul,.onesignal-reset ul ul ol,.onesignal-reset ul ul ul{padding-left:40px;margin:0}.onesignal-reset nav ol,.onesignal-reset nav ul{list-style-type:none}.onesignal-reset menu,.onesignal-reset ul{list-style-type:disc}.onesignal-reset ol{list-style-type:decimal}.onesignal-reset menu menu,.onesignal-reset menu ul,.onesignal-reset ol menu,.onesignal-reset ol ul,.onesignal-reset ul menu,.onesignal-reset ul ul{list-style-type:circle}.onesignal-reset menu menu menu,.onesignal-reset menu menu ul,.onesignal-reset menu ol menu,.onesignal-reset menu ol ul,.onesignal-reset menu ul menu,.onesignal-reset menu ul ul,.onesignal-reset ol menu menu,.onesignal-reset ol menu ul,.onesignal-reset ol ol menu,.onesignal-reset ol ol ul,.onesignal-reset ol ul menu,.onesignal-reset ol ul ul,.onesignal-reset ul menu menu,.onesignal-reset ul menu ul,.onesignal-reset ul ol menu,.onesignal-reset ul ol ul,.onesignal-reset ul ul menu,.onesignal-reset ul ul ul{list-style-type:square}.onesignal-reset li{display:list-item;min-height:auto;min-width:auto;padding-left:20px}.onesignal-reset strong{font-weight:700}.onesignal-reset em{font-style:italic}.onesignal-reset code,.onesignal-reset kbd,.onesignal-reset pre,.onesignal-reset samp{font-family:monospace}.onesignal-reset a{color:blue;text-decoration:underline}.onesignal-reset a:visited{color:#529}.onesignal-reset a,.onesignal-reset a *,.onesignal-reset input[type=checkbox],.onesignal-reset input[type=radio],.onesignal-reset input[type=submit],.onesignal-reset select{cursor:pointer}.onesignal-reset button,.onesignal-reset input[type=submit]{text-align:center;padding:2px 6px 3px;border-radius:4px;text-decoration:none;font-family:arial,helvetica,sans-serif;font-size:small;-webkit-appearance:push-button;color:buttontext;border:1px solid #a6a6a6;background:#d3d3d3;background:#fff;background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#fff),color-stop(100%,#ddd),color-stop(100%,#d1d1d1),color-stop(100%,#ddd));background:-webkit-linear-gradient(top,#fff 0,#ddd 100%,#d1d1d1 100%,#ddd 100%);background:linear-gradient(to bottom,#fff 0,#ddd 100%,#d1d1d1 100%,#ddd 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#ffffff\',endColorstr=\'#dddddd\',GradientType=0);-o-box-shadow:1px 1px 0 #eee;box-shadow:1px 1px 0 #eee;outline:initial}.onesignal-reset button{padding:1px 6px 2px;margin-right:5px}.onesignal-reset input[type=hidden]{display:none}.onesignal-reset textarea{-webkit-appearance:textarea;background:#fff;padding:2px;margin-left:4px;word-wrap:break-word;white-space:pre-wrap;font-size:11px;font-family:arial,helvetica,sans-serif;line-height:13px;resize:both}.onesignal-reset input,.onesignal-reset select,.onesignal-reset textarea{border:1px solid #ccc}.onesignal-reset select{font-size:11px;font-family:helvetica,arial,sans-serif;display:inline-block}.onesignal-reset input:focus,.onesignal-reset textarea:focus{outline:5px auto -webkit-focus-ring-color;outline:initial}.onesignal-reset input[type=text]{background:#fff;padding:1px;font-family:initial;font-size:small}.onesignal-reset input[type=checkbox],.onesignal-reset input[type=radio]{border:1px solid #2b2b2b;border-radius:4px;outline:intial}.onesignal-reset input[type=radio]{margin:2px 2px 3px}.onesignal-reset button:active,.onesignal-reset input[type=submit]:active{background:#3b679e;background:-webkit-gradient(linear,left top,left bottom,color-stop(0,#3b679e),color-stop(50%,#2b88d9),color-stop(51%,#207cca),color-stop(100%,#7db9e8));background:-webkit-linear-gradient(top,#3b679e 0,#2b88d9 50%,#207cca 51%,#7db9e8 100%);background:linear-gradient(to bottom,#3b679e 0,#2b88d9 50%,#207cca 51%,#7db9e8 100%);border-color:#5259b0}.onesignal-reset abbr[title],.onesignal-reset acronym[title],.onesignal-reset dfn[title]{cursor:help;border-bottom-width:1px;border-bottom-style:dotted}.onesignal-reset ins{background-color:#ff9;color:#000}.onesignal-reset del{text-decoration:line-through}.onesignal-reset blockquote,.onesignal-reset q{quotes:none}.onesignal-reset blockquote:after,.onesignal-reset blockquote:before,.onesignal-reset li:after,.onesignal-reset li:before,.onesignal-reset q:after,.onesignal-reset q:before{content:\\"\\"}.onesignal-reset input,.onesignal-reset select{vertical-align:middle}.onesignal-reset table{border-collapse:collapse;border-spacing:0}.onesignal-reset hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0}.onesignal-reset [dir=rtl]{direction:rtl}.onesignal-reset mark{background-color:#ff9;color:#000;font-style:italic;font-weight:700}.onesignal-reset menu{padding-left:40px;padding-top:8px}.onesignal-reset [hidden],.onesignal-reset template{display:none}.onesignal-reset abbr[title]{border-bottom:1px dotted}.onesignal-reset sub,.onesignal-reset sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}.onesignal-reset sup{top:-.5em}.onesignal-reset sub{bottom:-.25em}.onesignal-reset img{border:0}.onesignal-reset figure{margin:0}.onesignal-reset textarea{overflow:auto;vertical-align:top}.onesignal-reset{font-size:medium;line-height:1;direction:ltr;text-align:left;text-align:start;font-family:Times New Roman,Times,serif;color:#000;font-style:normal;font-weight:400;text-decoration:none;list-style-type:disc}.onesignal-reset pre{white-space:pre}#onesignal-bell-container.onesignal-reset{z-index:2147483000;position:fixed}#onesignal-bell-container.onesignal-reset.onesignal-bell-container-bottom-left{bottom:0;left:0}#onesignal-bell-container.onesignal-reset.onesignal-bell-container-bottom-right{bottom:0;right:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:absolute;z-index:2147483000;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;transform:scale(.01) translateZ(0);opacity:0;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out;width:330px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left{bottom:20px;left:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm{transform-origin:16px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-message{left:42px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog{bottom:39px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:before{right:5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:after{right:7px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md{transform-origin:24px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-message{left:61px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog{bottom:58px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:before{right:12px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:after{right:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg{transform-origin:32px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-message{left:81px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog{bottom:78px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:before{right:18px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:after{right:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-badge{left:4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-message{transform-origin:left center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-message:after{right:100%;border-right-color:#000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-left .onesignal-bell-launcher-button{left:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right{bottom:20px;right:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm{transform-origin:314px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-message{right:42px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog{bottom:39px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:before{right:5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:after{right:7px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md{transform-origin:306px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-message{right:61px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog{bottom:58px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:before{right:12px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:after{right:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg{transform-origin:298px center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-message{right:81px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog{bottom:78px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:before{right:18px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:after{right:20px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-badge{right:4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-message{transform-origin:right center}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-message:after{left:100%;border-left-color:#000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-bottom-right .onesignal-bell-launcher-button{right:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-button{position:absolute;bottom:0;border-radius:50%;transition:transform 175ms ease-in-out,border 175ms ease-in-out,width 175ms ease-in-out,height 175ms ease-in-out;cursor:pointer;z-index:2147483000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-button svg{width:100%;height:100%;-webkit-filter:drop-shadow(0 2px 4px rgba(34,36,38,.35));filter:drop-shadow(0 2px 4px rgba(34,36,38,.35))}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-button.onesignal-bell-launcher-button-hover{cursor:pointer}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-badge{position:absolute;bottom:0;border-radius:50%;text-align:center;top:0;cursor:pointer;-webkit-filter:drop-shadow(0 2px 4px rgba(34,36,38,0));filter:drop-shadow(0 2px 4px rgba(34,36,38,0));transition:transform 175ms ease-in-out,border 175ms ease-in-out,opacity .21s ease-in-out,width .21s ease-in-out,height .21s ease-in-out,position .21s ease-in-out,right .21s ease-in-out,top .21s ease-in-out,bottom .21s ease-in-out,left .21s ease-in-out;z-index:2147483400;opacity:0;transform:scale(.01);pointer-events:none}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-badge.onesignal-bell-launcher-badge-hover{cursor:pointer}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-badge.onesignal-bell-launcher-badge-opened{opacity:1;transform:scale(1)}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message{position:absolute;color:#fff;background:#000;cursor:pointer;border-radius:5px;transform:translateY(-50%) scaleX(0) translateZ(0);opacity:0;pointer-events:none;transition:transform 175ms ease-in-out,opacity 175ms ease-in-out;top:50%;z-index:2147481000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message:after{top:50%;border:solid transparent;content:\\" \\";height:0;width:0;position:absolute;pointer-events:none;border-color:transparent}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{z-index:2147482000;max-width:100%;white-space:nowrap;text-overflow:ellipsis}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-message.onesignal-bell-launcher-message-opened{pointer-events:auto;opacity:1;transform:translateY(-50%) scaleX(1) translateZ(0)}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog{cursor:pointer;position:absolute;right:0;background-color:#fff;border-radius:5px;border:1px solid rgba(0,0,0,.1);-webkit-filter:drop-shadow(0 2px 2px rgba(34,36,38,.15));filter:drop-shadow(0 2px 2px rgba(34,36,38,.15));opacity:0;transform:scale(0) translateZ(0);transition:transform 175ms ease-in-out,opacity 175ms ease-in-out;transform-origin:right bottom;z-index:2147481000}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog:after,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog:before{top:100%;border:solid transparent;content:\\" \\";height:0;width:0;position:absolute}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{z-index:2147482000;max-width:100%;white-space:nowrap;text-overflow:ellipsis;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog.onesignal-bell-launcher-dialog-opened{transform:scale(1) translateZ(0);opacity:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a{box-sizing:border-box;text-decoration:none;color:initial}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:active,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:focus,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:hover,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:hover:active,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog a:visited{text-decoration:none;color:initial}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button{box-sizing:border-box;border:1px solid transparent;padding:.625em 1em;box-shadow:none;border-radius:4px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:12px;letter-spacing:.65px;cursor:pointer}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action{color:#fff;background:#e54b4d;width:100%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:hover{background:#dd2022}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher .onesignal-bell-launcher-dialog button.action:active{background:#b1191b}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm{height:32px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-button{width:32px;height:32px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-badge{font-size:8px;width:12px;height:12px;line-height:12px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-message{padding:9.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-message:after{border-width:6.6px;margin-top:-6.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog{padding:3.2px 9.6px;color:#333}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:after{border-top-color:#fff;border-width:6.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog:before{border-top-color:hsla(0,0%,71%,.1);border-width:8.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{font-size:14px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body h1{font-size:15px;font-weight:500;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;letter-spacing:.2px;text-align:center;color:#41090a}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body p{font-size:14px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .divider{border-bottom:1px solid rgba(0,0,0,.1);margin:3.2px -9.6px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .kickback{text-align:center;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:300;font-size:9.8px;letter-spacing:.5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions img{max-width:495px;max-height:495px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification{display:-webkit-flex;display:flex;max-width:330px;border:1px solid rgba(0,0,0,.1);border-radius:3px;background:hsla(0,0%,98%,.5);overflow:auto;margin:.5em 0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon{width:50px;height:50px;margin:6px;margin-right:3px;border-radius:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon.push-notification-icon-default{background:#e3e4e5}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon img{width:50px;height:50px;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container{margin:6px;margin-left:3px;-webkit-flex:1;flex:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text{height:5px;width:100%;background:#e3e4e5;margin:5px 0;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-short{width:75%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-medium{width:87%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:first-of-type{margin-top:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-sm .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:last-of-type{margin-bottom:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md{height:48px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-button{width:48px;height:48px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-badge{font-size:12px;width:18px;height:18px;line-height:18px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-message{padding:14.4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-message:after{border-width:9.9px;margin-top:-9.9px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog{padding:4.8px 14.4px;color:#333}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:after{border-top-color:#fff;border-width:9.9px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog:before{border-top-color:hsla(0,0%,71%,.1);border-width:11.9px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{font-size:14px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body h1{font-size:15px;font-weight:500;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;letter-spacing:.2px;text-align:center;color:#41090a}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body p{font-size:14px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .divider{border-bottom:1px solid rgba(0,0,0,.1);margin:4.8px -14.4px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .kickback{text-align:center;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:300;font-size:9.8px;letter-spacing:.5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions img{max-width:495px;max-height:495px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification{display:-webkit-flex;display:flex;max-width:330px;border:1px solid rgba(0,0,0,.1);border-radius:3px;background:hsla(0,0%,98%,.5);overflow:auto;margin:.5em 0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon{width:50px;height:50px;margin:6px;margin-right:3px;border-radius:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon.push-notification-icon-default{background:#e3e4e5}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon img{width:50px;height:50px;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container{margin:6px;margin-left:3px;-webkit-flex:1;flex:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text{height:5px;width:100%;background:#e3e4e5;margin:5px 0;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-short{width:75%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-medium{width:87%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:first-of-type{margin-top:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-md .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:last-of-type{margin-bottom:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg{height:64px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-button{width:64px;height:64px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-badge{font-size:12px;width:24px;height:24px;line-height:24px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-message{padding:19.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-message:after{border-width:13.2px;margin-top:-13.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-message .onesignal-bell-launcher-message-body{font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog{padding:6.4px 19.2px;color:#333}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:after{border-top-color:#fff;border-width:13.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog:before{border-top-color:hsla(0,0%,71%,.1);border-width:15.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body{font-size:14px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body h1{font-size:15px;font-weight:500;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;letter-spacing:.2px;text-align:center;color:#41090a}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body p{font-size:14px;font-weight:400;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .divider{border-bottom:1px solid rgba(0,0,0,.1);margin:6.4px -19.2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .kickback{text-align:center;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:300;font-size:9.8px;letter-spacing:.5px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:400;font-size:14px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .instructions img{max-width:495px;max-height:495px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification{display:-webkit-flex;display:flex;max-width:330px;border:1px solid rgba(0,0,0,.1);border-radius:3px;background:hsla(0,0%,98%,.5);overflow:auto;margin:.5em 0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon{width:50px;height:50px;margin:6px;margin-right:3px;border-radius:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon.push-notification-icon-default{background:#e3e4e5}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-icon img{width:50px;height:50px;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container{margin:6px;margin-left:3px;-webkit-flex:1;flex:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text{height:5px;width:100%;background:#e3e4e5;margin:5px 0;border-radius:1px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-short{width:75%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text.push-notification-text-medium{width:87%}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:first-of-type{margin-top:2px}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-lg .onesignal-bell-launcher-dialog .onesignal-bell-launcher-dialog-body .push-notification .push-notification-text-container .push-notification-text:last-of-type{margin-bottom:0}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button svg .background{fill:#e54b4d}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button svg .foreground{fill:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button svg .stroke{fill:none;stroke:#fff;stroke-width:3px;stroke-miterlimit:10}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button.onesignal-bell-launcher-badge-active svg .background,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-button.onesignal-bell-launcher-button-active svg .background{fill:#dd2022!important}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-default .onesignal-bell-launcher-badge{border:1px solid #fff;background:#000;color:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button svg .background{fill:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button svg .foreground{fill:#e54b4d}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button svg .stroke{fill:none;stroke:#e54b4d;stroke-width:3px;stroke-miterlimit:10}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button.onesignal-bell-launcher-badge-active svg .background,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-button.onesignal-bell-launcher-button-active svg .background{fill:#f2f2f2!important}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher.onesignal-bell-launcher-theme-inverse .onesignal-bell-launcher-badge{border:1px solid #fff;background:#e54b4d;color:#fff}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-active,#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-enabled{transform:scale(1);opacity:1}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-disabled{visibility:hidden}#onesignal-bell-container.onesignal-reset .onesignal-bell-launcher-inactive{opacity:.6}#onesignal-bell-container.onesignal-reset .pulse-ring{border:7px solid hsla(0,0%,100%,.4);border-radius:50%;position:absolute;left:0;top:0;bottom:0;right:0;-webkit-animation:pulse .35s ease-in-out;animation:pulse .35s ease-in-out;-webkit-animation-iteration-count:1;animation-iteration-count:1;opacity:0;z-index:1000;pointer-events:none}@media print{#onesignal-bell-container{display:none}}@-webkit-keyframes pulse{0%{-webkit-transform:scale(.1);opacity:0;border-width:10px}50%{opacity:1;border-width:5px}to{-webkit-transform:scale(1.2);opacity:0;border-width:1px}}", ""]);\n\n// exports\n//@ sourceMappingURL=data:application/json;base64,');
},function(module,exports){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n	var list = [];\r\n\r\n	// return the list of modules as css string\r\n	list.toString = function toString() {\r\n		var result = [];\r\n		for(var i = 0; i < this.length; i++) {\r\n			var item = this[i];\r\n			if(item[2]) {\r\n				result.push("@media " + item[2] + "{" + item[1] + "}");\r\n			} else {\r\n				result.push(item[1]);\r\n			}\r\n		}\r\n		return result.join("");\r\n	};\r\n\r\n	// import a list of modules into the list\r\n	list.i = function(modules, mediaQuery) {\r\n		if(typeof modules === "string")\r\n			modules = [[null, modules, ""]];\r\n		var alreadyImportedModules = {};\r\n		for(var i = 0; i < this.length; i++) {\r\n			var id = this[i][0];\r\n			if(typeof id === "number")\r\n				alreadyImportedModules[id] = true;\r\n		}\r\n		for(i = 0; i < modules.length; i++) {\r\n			var item = modules[i];\r\n			// skip already imported module\r\n			// this implementation is not 100% perfect for weird media query combinations\r\n			//  when a module is imported multiple times with different media queries.\r\n			//  I hope this will never occur (Hey this way we have smaller bundles)\r\n			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\r\n				if(mediaQuery && !item[2]) {\r\n					item[2] = mediaQuery;\r\n				} else if(mediaQuery) {\r\n					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\r\n				}\r\n				list.push(item);\r\n			}\r\n		}\r\n	};\r\n	return list;\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqIG1vZHVsZSBpZCA9IDI0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n	memoize = function(fn) {\r\n		var memo;\r\n		return function () {\r\n			if (typeof memo === "undefined") memo = fn.apply(this, arguments);\r\n			return memo;\r\n		};\r\n	},\r\n	isOldIE = memoize(function() {\r\n		return /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n	}),\r\n	getHeadElement = memoize(function () {\r\n		return document.head || document.getElementsByTagName("head")[0];\r\n	}),\r\n	singletonElement = null,\r\n	singletonCounter = 0,\r\n	styleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n	if(true) {\r\n		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\r\n	}\r\n\r\n	options = options || {};\r\n	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n	// tags it will allow on a page\r\n	if (typeof options.singleton === "undefined") options.singleton = isOldIE();\r\n\r\n	// By default, add <style> tags to the bottom of <head>.\r\n	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";\r\n\r\n	var styles = listToStyles(list);\r\n	addStylesToDom(styles, options);\r\n\r\n	return function update(newList) {\r\n		var mayRemove = [];\r\n		for(var i = 0; i < styles.length; i++) {\r\n			var item = styles[i];\r\n			var domStyle = stylesInDom[item.id];\r\n			domStyle.refs--;\r\n			mayRemove.push(domStyle);\r\n		}\r\n		if(newList) {\r\n			var newStyles = listToStyles(newList);\r\n			addStylesToDom(newStyles, options);\r\n		}\r\n		for(var i = 0; i < mayRemove.length; i++) {\r\n			var domStyle = mayRemove[i];\r\n			if(domStyle.refs === 0) {\r\n				for(var j = 0; j < domStyle.parts.length; j++)\r\n					domStyle.parts[j]();\r\n				delete stylesInDom[domStyle.id];\r\n			}\r\n		}\r\n	};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n	for(var i = 0; i < styles.length; i++) {\r\n		var item = styles[i];\r\n		var domStyle = stylesInDom[item.id];\r\n		if(domStyle) {\r\n			domStyle.refs++;\r\n			for(var j = 0; j < domStyle.parts.length; j++) {\r\n				domStyle.parts[j](item.parts[j]);\r\n			}\r\n			for(; j < item.parts.length; j++) {\r\n				domStyle.parts.push(addStyle(item.parts[j], options));\r\n			}\r\n		} else {\r\n			var parts = [];\r\n			for(var j = 0; j < item.parts.length; j++) {\r\n				parts.push(addStyle(item.parts[j], options));\r\n			}\r\n			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n		}\r\n	}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n	var styles = [];\r\n	var newStyles = {};\r\n	for(var i = 0; i < list.length; i++) {\r\n		var item = list[i];\r\n		var id = item[0];\r\n		var css = item[1];\r\n		var media = item[2];\r\n		var sourceMap = item[3];\r\n		var part = {css: css, media: media, sourceMap: sourceMap};\r\n		if(!newStyles[id])\r\n			styles.push(newStyles[id] = {id: id, parts: [part]});\r\n		else\r\n			newStyles[id].parts.push(part);\r\n	}\r\n	return styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n	var head = getHeadElement();\r\n	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n	if (options.insertAt === "top") {\r\n		if(!lastStyleElementInsertedAtTop) {\r\n			head.insertBefore(styleElement, head.firstChild);\r\n		} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n		} else {\r\n			head.appendChild(styleElement);\r\n		}\r\n		styleElementsInsertedAtTop.push(styleElement);\r\n	} else if (options.insertAt === "bottom") {\r\n		head.appendChild(styleElement);\r\n	} else {\r\n		throw new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\r\n	}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n	styleElement.parentNode.removeChild(styleElement);\r\n	var idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n	if(idx >= 0) {\r\n		styleElementsInsertedAtTop.splice(idx, 1);\r\n	}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n	var styleElement = document.createElement("style");\r\n	styleElement.type = "text/css";\r\n	insertStyleElement(options, styleElement);\r\n	return styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n	var linkElement = document.createElement("link");\r\n	linkElement.rel = "stylesheet";\r\n	insertStyleElement(options, linkElement);\r\n	return linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n	var styleElement, update, remove;\r\n\r\n	if (options.singleton) {\r\n		var styleIndex = singletonCounter++;\r\n		styleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n	} else if(obj.sourceMap &&\r\n		typeof URL === "function" &&\r\n		typeof URL.createObjectURL === "function" &&\r\n		typeof URL.revokeObjectURL === "function" &&\r\n		typeof Blob === "function" &&\r\n		typeof btoa === "function") {\r\n		styleElement = createLinkElement(options);\r\n		update = updateLink.bind(null, styleElement);\r\n		remove = function() {\r\n			removeStyleElement(styleElement);\r\n			if(styleElement.href)\r\n				URL.revokeObjectURL(styleElement.href);\r\n		};\r\n	} else {\r\n		styleElement = createStyleElement(options);\r\n		update = applyToTag.bind(null, styleElement);\r\n		remove = function() {\r\n			removeStyleElement(styleElement);\r\n		};\r\n	}\r\n\r\n	update(obj);\r\n\r\n	return function updateStyle(newObj) {\r\n		if(newObj) {\r\n			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n				return;\r\n			update(obj = newObj);\r\n		} else {\r\n			remove();\r\n		}\r\n	};\r\n}\r\n\r\nvar replaceText = (function () {\r\n	var textStore = [];\r\n\r\n	return function (index, replacement) {\r\n		textStore[index] = replacement;\r\n		return textStore.filter(Boolean).join(\'\\n\');\r\n	};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n	var css = remove ? "" : obj.css;\r\n\r\n	if (styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = replaceText(index, css);\r\n	} else {\r\n		var cssNode = document.createTextNode(css);\r\n		var childNodes = styleElement.childNodes;\r\n		if (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n		if (childNodes.length) {\r\n			styleElement.insertBefore(cssNode, childNodes[index]);\r\n		} else {\r\n			styleElement.appendChild(cssNode);\r\n		}\r\n	}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n	var css = obj.css;\r\n	var media = obj.media;\r\n	var sourceMap = obj.sourceMap;\r\n\r\n	if(media) {\r\n		styleElement.setAttribute("media", media)\r\n	}\r\n\r\n	if(styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = css;\r\n	} else {\r\n		while(styleElement.firstChild) {\r\n			styleElement.removeChild(styleElement.firstChild);\r\n		}\r\n		styleElement.appendChild(document.createTextNode(css));\r\n	}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n	var css = obj.css;\r\n	var media = obj.media;\r\n	var sourceMap = obj.sourceMap;\r\n\r\n	if(sourceMap) {\r\n		// http://stackoverflow.com/a/26603875\r\n		css += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\r\n	}\r\n\r\n	var blob = new Blob([css], { type: "text/css" });\r\n\r\n	var oldSrc = linkElement.href;\r\n\r\n	linkElement.href = URL.createObjectURL(blob);\r\n\r\n	if(oldSrc)\r\n		URL.revokeObjectURL(oldSrc);\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,')},function(module,exports){eval('module.exports = "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>\\n<!-- Generator: Adobe Illustrator 19.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\\n<svg version=\\"1.1\\" class=\\"onesignal-bell-svg\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"\\n\\t width=\\"99.7px\\" height=\\"99.7px\\" viewBox=\\"0 0 99.7 99.7\\" style=\\"enable-background:new 0 0 99.7 99.7;\\" xml:space=\\"preserve\\">\\n<g>\\n\\t<circle class=\\"background\\" cx=\\"49.9\\" cy=\\"49.9\\" r=\\"49.9\\"/>\\n\\t<g id=\\"Layer_2\\">\\n\\t\\t<g>\\n\\t\\t\\t<path class=\\"foreground\\" d=\\"M50.1,66.2H27.7c0,0-2-0.2-2-2.1c0-1.9,1.7-2,1.7-2s6.7-3.2,6.7-5.5c0-2.3-1.1-3.9-1.1-13.3\\n\\t\\t\\t\\ts6-16.6,13.2-16.6c0,0,1-2.4,3.9-2.4c2.8,0,3.8,2.4,3.8,2.4c7.2,0,13.2,7.2,13.2,16.6s-1,11-1,13.3c0,2.3,6.7,5.5,6.7,5.5\\n\\t\\t\\t\\ts1.7,0.1,1.7,2c0,1.8-2.1,2.1-2.1,2.1H50.1z\\"/>\\n\\t\\t\\t<path class=\\"foreground\\" d=\\"M42.9,68.5h14.5c0,0-1,6.3-7.2,6.3S42.9,68.5,42.9,68.5z\\"/>\\n\\t\\t\\t<ellipse class=\\"stroke\\" cx=\\"49.9\\" cy=\\"49.9\\" rx=\\"37.4\\" ry=\\"36.9\\"/>\\n\\t\\t</g>\\n\\t</g>\\n</g>\\n</svg>\\n"//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYmVsbC9iZWxsLnN2Zz80MDYxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1hQUFtYSIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8P3htbCB2ZXJzaW9uPVxcXCIxLjBcXFwiIGVuY29kaW5nPVxcXCJ1dGYtOFxcXCI/PlxcbjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOS4xLjAsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT5cXG48c3ZnIHZlcnNpb249XFxcIjEuMVxcXCIgY2xhc3M9XFxcIm9uZXNpZ25hbC1iZWxsLXN2Z1xcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB4bWxuczp4bGluaz1cXFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1xcXCIgeD1cXFwiMHB4XFxcIiB5PVxcXCIwcHhcXFwiXFxuXFx0IHdpZHRoPVxcXCI5OS43cHhcXFwiIGhlaWdodD1cXFwiOTkuN3B4XFxcIiB2aWV3Qm94PVxcXCIwIDAgOTkuNyA5OS43XFxcIiBzdHlsZT1cXFwiZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA5OS43IDk5Ljc7XFxcIiB4bWw6c3BhY2U9XFxcInByZXNlcnZlXFxcIj5cXG48Zz5cXG5cXHQ8Y2lyY2xlIGNsYXNzPVxcXCJiYWNrZ3JvdW5kXFxcIiBjeD1cXFwiNDkuOVxcXCIgY3k9XFxcIjQ5LjlcXFwiIHI9XFxcIjQ5LjlcXFwiLz5cXG5cXHQ8ZyBpZD1cXFwiTGF5ZXJfMlxcXCI+XFxuXFx0XFx0PGc+XFxuXFx0XFx0XFx0PHBhdGggY2xhc3M9XFxcImZvcmVncm91bmRcXFwiIGQ9XFxcIk01MC4xLDY2LjJIMjcuN2MwLDAtMi0wLjItMi0yLjFjMC0xLjksMS43LTIsMS43LTJzNi43LTMuMiw2LjctNS41YzAtMi4zLTEuMS0zLjktMS4xLTEzLjNcXG5cXHRcXHRcXHRcXHRzNi0xNi42LDEzLjItMTYuNmMwLDAsMS0yLjQsMy45LTIuNGMyLjgsMCwzLjgsMi40LDMuOCwyLjRjNy4yLDAsMTMuMiw3LjIsMTMuMiwxNi42cy0xLDExLTEsMTMuM2MwLDIuMyw2LjcsNS41LDYuNyw1LjVcXG5cXHRcXHRcXHRcXHRzMS43LDAuMSwxLjcsMmMwLDEuOC0yLjEsMi4xLTIuMSwyLjFINTAuMXpcXFwiLz5cXG5cXHRcXHRcXHQ8cGF0aCBjbGFzcz1cXFwiZm9yZWdyb3VuZFxcXCIgZD1cXFwiTTQyLjksNjguNWgxNC41YzAsMC0xLDYuMy03LjIsNi4zUzQyLjksNjguNSw0Mi45LDY4LjV6XFxcIi8+XFxuXFx0XFx0XFx0PGVsbGlwc2UgY2xhc3M9XFxcInN0cm9rZVxcXCIgY3g9XFxcIjQ5LjlcXFwiIGN5PVxcXCI0OS45XFxcIiByeD1cXFwiMzcuNFxcXCIgcnk9XFxcIjM2LjlcXFwiLz5cXG5cXHRcXHQ8L2c+XFxuXFx0PC9nPlxcbjwvZz5cXG48L3N2Zz5cXG5cIlxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3Jhdy1sb2FkZXIhLi9zcmMvYmVsbC9iZWxsLnN2Z1xuICoqIG1vZHVsZSBpZCA9IDI2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9')},,function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _vars = __webpack_require__(1);\n\nvar _environment = __webpack_require__(4);\n\nvar _environment2 = _interopRequireDefault(_environment);\n\nvar _api = __webpack_require__(9);\n\nvar _loglevel = __webpack_require__(3);\n\nvar _loglevel2 = _interopRequireDefault(_loglevel);\n\nvar _limitStore = __webpack_require__(10);\n\nvar _limitStore2 = _interopRequireDefault(_limitStore);\n\n__webpack_require__(29);\n\nvar _utils = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ServiceWorker = (function () {\n  function ServiceWorker() {\n    _classCallCheck(this, ServiceWorker);\n  }\n\n  _createClass(ServiceWorker, null, [{\n    key: 'run',\n    value: function run() {\n      self.addEventListener('push', ServiceWorker.onPushReceived);\n      self.addEventListener('notificationclick', ServiceWorker.onNotificationClicked);\n      self.addEventListener('install', ServiceWorker.onServiceWorkerInstalled);\n\n      // If the user is proxying through our subdomain (e.g. website.onesignal.com/sdks/)\n      if (ServiceWorker.onOurSubdomain) {\n        // Cache resources?\n        self.addEventListener('fetch', ServiceWorker.onFetch);\n      }\n    }\n\n    /**\n     * Occurs when a push message is received.\n     * This method handles the receipt of a push signal on all web browsers except Safari, which uses the OS to handle notifications.\n     * @param event\n     */\n\n  }, {\n    key: 'onPushReceived',\n    value: function onPushReceived(event) {\n      _loglevel2.default.debug('Called %conPushReceived(' + JSON.stringify(event, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n      event.waitUntil(new Promise(function (resolve, reject) {\n        OneSignal._getTitle(null, function (title) {\n          OneSignal._getDbValue('Options', 'defaultIcon').then(function _handleGCMMessage_GotDefaultIcon(defaultIconResult) {\n            OneSignal._getLastNotifications(function (response, appId) {\n              var notificationData = {\n                id: response.custom.i,\n                message: response.alert,\n                additionalData: response.custom.a\n              };\n\n              if (response.title) notificationData.title = response.title;else notificationData.title = title;\n\n              if (response.custom.u) notificationData.launchURL = response.custom.u;\n\n              if (response.icon) notificationData.icon = response.icon;else if (defaultIconResult) notificationData.icon = defaultIconResult.value;\n\n              // Never nest the following line in a callback from the point of entering from _getLastNotifications\n              serviceWorker.registration.showNotification(notificationData.title, {\n                body: response.alert,\n                icon: notificationData.icon,\n                tag: JSON.stringify(notificationData)\n              }).then(resolve).catch(function (e) {\n                _loglevel2.default.error(e);\n              });\n\n              OneSignal._getDbValue('Options', 'defaultUrl').then(function (defaultUrlResult) {\n                if (defaultUrlResult) OneSignal._defaultLaunchURL = defaultUrlResult.value;\n              }).catch(function (e) {\n                _loglevel2.default.error(e);\n              });\n              ;\n            }, resolve);\n          }).catch(function (e) {\n            _loglevel2.default.error(e);\n          });\n        });\n      }));\n    }\n  }, {\n    key: 'onNotificationClicked',\n    value: function onNotificationClicked(event) {\n      _loglevel2.default.debug('Called %conPushReceived(' + JSON.stringify(event, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n    }\n  }, {\n    key: 'onServiceWorkerInstalled',\n    value: function onServiceWorkerInstalled(event) {\n      _loglevel2.default.debug('Called %conServiceWorkerInstalled(' + JSON.stringify(event, null, 4) + ')', (0, _utils.getConsoleStyle)('code'));\n      _loglevel2.default.info('Installing service worker: %c' + self.location.pathname, (0, _utils.getConsoleStyle)('code'), '(version ' + OneSignal._VERSION + ')');\n      if (self.location.pathname.indexOf(\"OneSignalSDKWorker.js\") > -1) OneSignal._putDbValue(\"Ids\", { type: \"WORKER1_ONE_SIGNAL_SW_VERSION\", id: OneSignal._VERSION });else OneSignal._putDbValue(\"Ids\", { type: \"WORKER2_ONE_SIGNAL_SW_VERSION\", id: OneSignal._VERSION });\n\n      if (ServiceWorker.onOurSubdomain) {\n        event.waitUntil(caches.open(\"OneSignal_\" + OneSignal._VERSION).then(function (cache) {\n          return cache.addAll(['/sdks/initOneSignalHttpIframe', '/sdks/initOneSignalHttpIframe?session=*', '/sdks/manifest_json']);\n        }).catch(function (e) {\n          _loglevel2.default.error(e);\n        }));\n      }\n    }\n  }, {\n    key: 'onFetch',\n    value: function onFetch(event) {\n      event.respondWith(caches.match(event.request).then(function (response) {\n        // Cache hit -- return response\n        if (response) {\n          return response;\n        }\n        return fetch(event.request);\n      }).catch(function (e) {\n        return _loglevel2.default.error(e);\n      }));\n    }\n  }, {\n    key: 'onOurSubdomain',\n    get: function get() {\n      return (true) || location.href.match(/https:\\/\\/.*\\.onesignal.com\\/sdks\\//) !== null;\n    }\n  }]);\n\n  return ServiceWorker;\n})();\n\n// Expose this class to the global scope\n\nself.OneSignalServiceWorker = ServiceWorker;\n\n// Set logging to the appropriate level\n_loglevel2.default.setDefaultLevel( true ? _loglevel2.default.levels.TRACE : _loglevel2.default.levels.ERROR);\n\n// Print it's happy time!\n_loglevel2.default.info('%cOneSignal Service Worker loaded (version ' + (\"109020\") + ', ' + _environment2.default.getEnv() + ' environment).', (0, _utils.getConsoleStyle)('bold'));\n\n// Run our main file\nServiceWorker.run();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,");
},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(fetch) {'use strict';\n\n/**\n * https://github.com/coonsta/cache-polyfill\n *\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nif (!Cache.prototype.addAll) {\n  Cache.prototype.addAll = function addAll(requests) {\n    var cache = this;\n\n    // Since DOMExceptions are not constructable:\n    function NetworkError(message) {\n      this.name = 'NetworkError';\n      this.code = 19;\n      this.message = message;\n    }\n    NetworkError.prototype = Object.create(Error.prototype);\n\n    return Promise.resolve().then(function () {\n      if (arguments.length < 1) throw new TypeError();\n\n      // Simulate sequence<(Request or USVString)> binding:\n      var sequence = [];\n\n      requests = requests.map(function (request) {\n        if (request instanceof Request) {\n          return request;\n        } else {\n          return String(request); // may throw TypeError\n        }\n      });\n\n      return Promise.all(requests.map(function (request) {\n        if (typeof request === 'string') {\n          request = new Request(request);\n        }\n\n        var scheme = new URL(request.url).protocol;\n\n        if (scheme !== 'http:' && scheme !== 'https:') {\n          throw new NetworkError(\"Invalid scheme\");\n        }\n\n        return fetch(request.clone());\n      }));\n    }).then(function (responses) {\n      // TODO: check that requests don't overwrite one another\n      // (don't think this is possible to polyfill due to opaque responses)\n      return Promise.all(responses.map(function (response, i) {\n        return cache.put(requests[i], response);\n      }));\n    }).then(function () {\n      return undefined;\n    });\n  };\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2FjaGUtcG9seWZpbGwuanM/NDUwMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFO0FBQzNCLE9BQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLFNBQVMsTUFBTSxDQUFDLFFBQVEsRUFBRTtBQUNqRCxRQUFJLEtBQUssR0FBRyxJQUFJOzs7QUFHaEIsYUFBUyxZQUFZLENBQUMsT0FBTyxFQUFFO0FBQzdCLFVBQUksQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDO0FBQzNCLFVBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO0FBQ2YsVUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7S0FDeEI7QUFDRCxnQkFBWSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQzs7QUFFeEQsV0FBTyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLFlBQVc7QUFDdkMsVUFBSSxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxNQUFNLElBQUksU0FBUyxFQUFFLENBQUM7OztBQUdoRCxVQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7O0FBRWxCLGNBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFVBQVMsT0FBTyxFQUFFO0FBQ3hDLFlBQUksT0FBTyxZQUFZLE9BQU8sRUFBRTtBQUM5QixpQkFBTyxPQUFPLENBQUM7U0FDaEIsTUFDSTtBQUNILGlCQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUM7QUFBQyxTQUN4QjtPQUNGLENBQUMsQ0FBQzs7QUFFSCxhQUFPLE9BQU8sQ0FBQyxHQUFHLENBQ2hCLFFBQVEsQ0FBQyxHQUFHLENBQUMsVUFBUyxPQUFPLEVBQUU7QUFDN0IsWUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUU7QUFDL0IsaUJBQU8sR0FBRyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNoQzs7QUFFRCxZQUFJLE1BQU0sR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDOztBQUUzQyxZQUFJLE1BQU0sS0FBSyxPQUFPLElBQUksTUFBTSxLQUFLLFFBQVEsRUFBRTtBQUM3QyxnQkFBTSxJQUFJLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQzFDOztBQUVELGVBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO09BQy9CLENBQUMsQ0FDSCxDQUFDO0tBQ0gsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFNBQVMsRUFBRTs7O0FBRzFCLGFBQU8sT0FBTyxDQUFDLEdBQUcsQ0FDaEIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFTLFFBQVEsRUFBRSxDQUFDLEVBQUU7QUFDbEMsZUFBTyxLQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQztPQUN6QyxDQUFDLENBQ0gsQ0FBQztLQUNILENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBVztBQUNqQixhQUFPLFNBQVMsQ0FBQztLQUNsQixDQUFDLENBQUM7R0FDSixDQUFDIiwiZmlsZSI6IjI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vY29vbnN0YS9jYWNoZS1wb2x5ZmlsbFxuICpcbiAqIENvcHlyaWdodCAyMDE1IEdvb2dsZSBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqL1xuXG5pZiAoIUNhY2hlLnByb3RvdHlwZS5hZGRBbGwpIHtcbiAgQ2FjaGUucHJvdG90eXBlLmFkZEFsbCA9IGZ1bmN0aW9uIGFkZEFsbChyZXF1ZXN0cykge1xuICAgIHZhciBjYWNoZSA9IHRoaXM7XG5cbiAgICAvLyBTaW5jZSBET01FeGNlcHRpb25zIGFyZSBub3QgY29uc3RydWN0YWJsZTpcbiAgICBmdW5jdGlvbiBOZXR3b3JrRXJyb3IobWVzc2FnZSkge1xuICAgICAgdGhpcy5uYW1lID0gJ05ldHdvcmtFcnJvcic7XG4gICAgICB0aGlzLmNvZGUgPSAxOTtcbiAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgfVxuICAgIE5ldHdvcmtFcnJvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSk7XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgdGhyb3cgbmV3IFR5cGVFcnJvcigpO1xuXG4gICAgICAvLyBTaW11bGF0ZSBzZXF1ZW5jZTwoUmVxdWVzdCBvciBVU1ZTdHJpbmcpPiBiaW5kaW5nOlxuICAgICAgdmFyIHNlcXVlbmNlID0gW107XG5cbiAgICAgIHJlcXVlc3RzID0gcmVxdWVzdHMubWFwKGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICAgICAgaWYgKHJlcXVlc3QgaW5zdGFuY2VvZiBSZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuIHJlcXVlc3Q7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFN0cmluZyhyZXF1ZXN0KTsgLy8gbWF5IHRocm93IFR5cGVFcnJvclxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgICAgICByZXF1ZXN0cy5tYXAoZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJlcXVlc3QgPSBuZXcgUmVxdWVzdChyZXF1ZXN0KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc2NoZW1lID0gbmV3IFVSTChyZXF1ZXN0LnVybCkucHJvdG9jb2w7XG5cbiAgICAgICAgICBpZiAoc2NoZW1lICE9PSAnaHR0cDonICYmIHNjaGVtZSAhPT0gJ2h0dHBzOicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBOZXR3b3JrRXJyb3IoXCJJbnZhbGlkIHNjaGVtZVwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gZmV0Y2gocmVxdWVzdC5jbG9uZSgpKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZXMpIHtcbiAgICAgIC8vIFRPRE86IGNoZWNrIHRoYXQgcmVxdWVzdHMgZG9uJ3Qgb3ZlcndyaXRlIG9uZSBhbm90aGVyXG4gICAgICAvLyAoZG9uJ3QgdGhpbmsgdGhpcyBpcyBwb3NzaWJsZSB0byBwb2x5ZmlsbCBkdWUgdG8gb3BhcXVlIHJlc3BvbnNlcylcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChcbiAgICAgICAgcmVzcG9uc2VzLm1hcChmdW5jdGlvbihyZXNwb25zZSwgaSkge1xuICAgICAgICAgIHJldHVybiBjYWNoZS5wdXQocmVxdWVzdHNbaV0sIHJlc3BvbnNlKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfSkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSk7XG4gIH07XG59XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvY2FjaGUtcG9seWZpbGwuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["ServiceWorker"] = __webpack_require__(28);\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvU2VydmljZVdvcmtlci5qcz8yMGY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtHQUFtTCxFIiwiZmlsZSI6IjMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBnbG9iYWxbXCJTZXJ2aWNlV29ya2VyXCJdID0gcmVxdWlyZShcIi0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvaW5kZXguanM/e1xcXCJwcmVzZXRzXFxcIjpbXFxcImVzMjAxNVxcXCJdLFxcXCJjYWNoZURpcmVjdG9yeVxcXCI6dHJ1ZX0hL1VzZXJzL2pwYW5nL2NvZGUvT25lU2lnbmFsLVdlYnNpdGUtU0RLL3NyYy9TZXJ2aWNlV29ya2VyLmpzXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2V4cG9zZS1sb2FkZXI/U2VydmljZVdvcmtlciEuL3NyYy9TZXJ2aWNlV29ya2VyLmpzXG4gKiogbW9kdWxlIGlkID0gMzBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=')}]);